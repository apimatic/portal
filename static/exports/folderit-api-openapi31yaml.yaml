openapi: 3.1.0
info:
  title: Folderit API
  description: "# Changes\n\n### 2025.08.24 - 2.0.71\n* Permission properties now support narrowing with the `fields` parameter.\n\n### 2025.08.22 - 2.0.70\n* Automatically expand requested fields, expand parameter is not required for the fields listed under the expanded variants\n* Add `thumbnails` property to File and FileVersion schemas\n\n### 2025.08.21 - 2.0.69\n* Add extension filter to [entities by parent](#tag/Entity/operation/getEntitiesByParent), [entities by tag](#tag/Entity/operation/getEntitiesByTag) and [all entities](#tag/Entity/operation/getAllEntities)\n\n### 2025.08.12 - 2.0.68\n* Add `parentUid` query parameter to [Recycled entities](#tag/Entity/operation/getRecycledEntities)\n\n### 2025.08.11 - 2.0.67\n* Add `position` as an expandable field to a team user\n\n### 2025.08.10 - 2.0.66\n* Alter [Team users](#tag/Account/operation/getTeamUsers) endpoint to a paginated response, add groups as an expandable field to a team user\n\n### 2025.07.31 - 2.0.65\n* Add lockId to [Lock a file](#tag/File/operation/lockFilePost) request  \n  Unlocking is supported only with a [PUT request](#tag/File/operation/unlockFile2)\n\n### 2025.07.29 - 2.0.64\n* Add teamUserStatus field to [account users](#tag/Account/operation/getAccountUsers) and status field to [account team users](#tag/Account/operation/getTeamUsers)\n\n### 2025.07.24 - 2.0.63\n* Add an optional operator to the search filter filterItem->number\n\n### 2025.07.01 - 2.0.62\n* Add account stats expandable field\n\n### 2025.06.10 - 2.0.61\n* Add paginated response variants to [reminder listings](#tag/Reminder)\n* Add recurrence property to [update a Reminder](#tag/Reminder/operation/updateReminder)\n\n### 2025.06.04 - 2.0.60\n* Add a method to [empty the recycle bin](#tag/Entity/operation/emptyRecycleBin)\n\n### 2025.06.03 - 2.0.59\n* Add the size property to [file versions](#tag/File/operation/getFileVersions)\n* Add a paginated response variant to [file versions listing](#tag/File/operation/getFileVersions)\n* Fetch multiple entities by UID at [Sections/entities](#tag/Entity/operation/getEntities)\n* [Duplication of entities](#tag/Entity/operation/duplicateEntities)\n* Add a paginated response variant to [related entities listing](#tag/Entity/operation/getEntityRelatedItems)\n\n### 2025.05.26 - 2.0.58\n* Add operationId to all paths\n\n### 2025.04.17 - 2.0.57\n* Add method property to resolution workflow audit trail data property\n\n### 2025.04.06 - 2.0.56\n* Add 2 new paths for fetching tags, add pagination and sorting to existing tag listing\n  * [Get only root tags](#tag/Tag/operation/getRootTags) \n  * [Get sub-tags](#tag/Tag/operation/getSubTags) \n* Add [Search entities](#tag/Search/operation/searchEntities) endpoint\n\n### 2025.04.02 - 2.0.55\n* Add [resolutions](#tag/Resolution) and [workflows](#tag/Workflow)\n* Add resolutionSupport extendable property to Entity\n\n### 2025.03.27 - 2.0.54\n* Add `options` as an expandable field to Meta\n\n### 2025.03.26 - 2.0.53\n* Add [entities by tag](#tag/Entity/operation/getEntitiesByTag) endpoint\n\n### 2025.02.03 - 2.0.52\n* Add more granular permissions for account sharing\n\n### 2025.01.20 - 2.0.51\n* Add `recurrence` property to reminders\n\n### 2025.01.17 - 2.0.50\n* Add `time` property to file lock requests for custom lock duration\n\n### 2024.12.09 - 2.0.49\n* Add `source` field to retention for customizing the source attribute for calculating the retention end time\n\n### 2024.11.13 - 2.0.48\n* Add `accountWatermarking` audit trail event\n\n### 2024.11.13 - 2.0.47\n* Add `timeFormat` as expandable field to User\n\n### 2024.10.25 - 2.0.46\n* Added comment field for workflow responses in audit trail\n\n### 2024.10.10 - 2.0.45\n* Added accountTeamUserManagedInvite, accountTeamUserManagedInviteDelete, accountTeamUserManagedAccept and accountTeamUserManagedReject audit trail events\n\n### 2024.09.17 - 2.0.44\n* Deprecate Account file report [`GET /v2/accounts/{accountUid}/reports/file-list`](#tag/File/operation/getAccountFileReport)\n\n### 2024.09.10 - 2.0.43\n* Meta of type `float` is renamed from Float to Decimal, type field stays the same for compatibility.  \n  Value is represented as a string for compatibility with higher precisions and larger values.\n* Change asic entity type text representation from `asic` to `file`\n* Add prefix and wildcard search operators for meta filters\n\n### 2024.09.02 - 2.0.42\n* Add `language` to the composable filter of search\n\n### 2024.09.02 - 2.0.41\n* Add an expandable field `activeUser` to audit trails. Present, when a substitute user performed the action.\n\n### 2024.07.26 - 2.0.40\n* File and folder retention audit events contain no `data` property any more on removal of retention\n* Add `cause` to audit trails to mark actions performed by background processes. Initially the only option is `retention`.\n* Add all entities listing endpoint: [`GET /v2/accounts/{accountUid}/entities/all`](#tag/Entity/operation/getAllEntities)\n\n### 2024.06.14 - 2.0.39\n* Mark inbox and team folders as nullable fields for Account\n\n### 2024.05.27 - 2.0.38\n* Fix Audit trail sync-log id field value\n* Add `sort` and `viewType` expandable fields to Folder\n\n### 2024.05.23 - 2.0.37\n* Search: add `uid` to queryFilter list \n\n### 2024.04.26 - 2.0.36\n* Add `visibleColumnsWithMeta` as expandable field to Folder to get meta columns with names\n\n### 2024.04.18 - 2.0.35\n* Add `remoteUsername` as expandable field to Team user\n\n### 2024.04.16 - 2.0.34\n* Add redirect Location url in content as well\n* Add `creator` as expandable field to Entity\n* Include response samples with all expanded fields.  \n  Note: It is recommended to ask for as few fields as is necessary as there are optimizations in place in the background for generating responses. This goes for both default fields and extra related data using expand option. For example, when requesting for all entities under a parent with tags, meta etc, if You don't need to have permissions for each related piece, do not request for them. A sample get param would be: `?fields=uid,name,tags.uid,tags.name,meta.meta.uid,meta.value&expand=tags,meta:myMetaUid,meta:myOtherMetaUid`\n\n### 2024.04.11 - 2.0.33\n* Add sorting to entities by parent endpoint: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/entities`](#tag/Entity/operation/getEntitiesByParent)\n* Add `extension` as expandable field to Entity\n* Add `size` as expandable field to Entity\n\n### 2024.04.10 - 2.0.32\n* Update folder column attribute options list\n* Add `tags` as expandable field to Entity\n* Add `dateFormat` as expandable field to User\n\n### 2024.03.20 - 2.0.31\n* Add `meta:UID` expand field to entities\n\n### 2024.03.18 - 2.0.30\n* Get a list of parents for an entity: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/parents`](#tag/Entity/operation/getEntityParents)\n* Add isRoot property to entity\n\n### 2024.03.11 - 2.0.29\n* Add sectionOrder property to entity and folder models (applicable to only root entities/sections)\n* Add folderStats property to entity and folder models\n* Add inboxFolder and teamFolder properties to entity and folder models\n\n### 2024.01.09 - 2.0.28\n* Add account as an expandable relation to Entity\n\n### 2023.11.24 - 2.0.27\n* Add highlight expand field for search results\n\n### 2023.11.22 - 2.0.26\n* Add `version` expandable field to `File` objects\n\n### 2023.10.30 - 2.0.25\n* Add fileUpdateContent and fileUpdateOnline permissions to file\n* Add canShareCustomPermissions to Account permissions list\n  * Without this permission, You can only set the role property for a share, no settings\n\n### 2023.10.22 - 2.0.24\n* Add endpoints for getting shares to a specific user\n  * Get direct shares to a specific user: [`GET /v2/accounts/{accountUid}/users/{userUid}/shares`](#tag/Share/operation/getUserShares)\n  * Get all shares (including through group memberships) accessible by a specific user: [`GET /v2/accounts/{accountUid}/users/{userUid}/access`](#tag/Share/operation/getAllUserShares)\n* Add documentation for fetching share info: [`GET /v2/accounts/{accountUid}/shares/{shareUid}`](#tag/Share/operation/getShare)\n* Add settings property to shares\n\n### 2023.10.18 - 2.0.23\n* Add missing endpoint documentation for tag sharing\n  * Get tag shares: [`GET /v2/accounts/{accountUid}/tags/{tagUid}/shares`](#tag/Tag/operation/getTagShares)\n  * Share a tag: [`POST /v2/accounts/{accountUid}/tags/{tagUid}/shares`](#tag/Tag/operation/addTagShares)\n\n### 2023.10.18 - 2.0.22\n* Add group expand parameters to doc\n\n### 2023.09.20 - 2.0.21\n* Add composable filter and scoring option to file/folder searches\n  * *filter* property can contain a nested set of familiar filters to create a required composite set of filters\n  * *scoring* property is used to force scoring even when we're not doing search by query directly (only filtering)  \n    Scoring results are not guaranteed to be sensible\n\n### 2023.09.19 - 2.0.20\n* Added fileOnlineView and fileOnlineEdit audit trail events\n\n### 2023.09.14 - 2.0.19\n* Sections list is now available for partially accessible accounts, canGetSections property indicates that all sections are guaranteed to be accessible\n* Share items to user by userUid\n\n### 2023.09.03 - 2.0.18\n* Enable moving tags around\n\n### 2023.08.30 - 2.0.17\n* Add `isUsed` attribute to Meta Select Option\n* Add tag management to entities for a single point to manage tags for all types of entities\n* Tag sharing\n* Add tagUid filter to file/folder search endpoints\n\n### 2023.08.10 - 2.0.16\n* Add searchAfter field to file/folder search endpoints for paging over more than 10000 results.\n\n### 2023.07.31 - 2.0.15\n* Add sorting to file/folder search endpoints\n\n### 2023.03.05 - 2.0.14\n* Reminders for all types of entities\n  * Added two endpoints, one specifically for folders, other for any type of entity\n  * Folders: [`GET /v2/accounts/{accountUid}/folders/{folderUid}/reminders`](#tag/Reminder/operation/getFolderReminders)\n  * Entities: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/reminders`](#tag/Reminder/operation/getEntityReminders)\n* Related items to all types of entities of all types  \n  * Added two endpoints, one specifically for folders, other for any type of entity\n  * Folders: [`GET /v2/accounts/{accountUid}/folders/{folderUid}/related`](#tag/Folder/operation/getFolderRelatedItems)\n  * Entities: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/related`](#tag/Entity/operation/getEntityRelatedItems)\n* Meta for all items, new endpoint is under entities: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/meta`](#tag/Entity/operation/getEntityMeta)\n\n### 2023.02.21 - 2.0.13\n* Add new request header `X-Folderit-Request-Key` to make it possible to differentiate audit trails resulting from your own requests\n* Add audit trail endpoint tailored for file syncing: [`GET /v2/accounts/{accountUid}/audit/syncLog`](#tag/Audit/operation/getFileSyncLog)\n* Add `extra` field to the expand list of folder and entity, which gives access to number, note, date etc.\n* Add `extra` field to folder and entity update endpoints\n\n### 2023.01.23 - 2.0.12\n* Add includeFiles, includeLinks and includeFolders fields for FolderMeta\n\n### 2022.07.22 - 2.0.11\n* Add groups as group members ([GET group all members](#operation/getGroupMembers))\n* Add [Entity endpoint](#tag/Entity) for a unified access to directory structure (access to all types of entities like folders, files, links and more in the future)\n\n### 2022.04.13 - 2.0.10\n* Add `fields` and `expand` query parameters to paths resulting in accounts, folders and files\n  * `fields` parameter can be used to reduce amount of data returned. For example: `fields=uid,name`\n  * `expand` parameter can be used to fetch related objects with the request, for example fetching meta with a file list.\n    * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/files?expand=meta,people,tags`](#tag/Folder/operation/getFilesByParent) includes meta, people and tags arrays with each file\n  * `expand` and `fields` can be combined to get all fields of the initial object, but only a few from a related object:\n    * `fields=*,meta.value,meta.meta.name&expand=meta`\n* Search result updates for autocomplete [`GET /v2/accounts/{accountUid}/search/simple`](#tag/Search/operation/searchAutocomplete) and [`GET /v2/accounts/{accountUid}/search/files`](#tag/Search/operation/searchFiles):\n  * Mark file search result pathUid property as deprecated\n  * Add mimeType property to file search results\n\n### 2022.04.06 - 2.0.9\n* Add email as a required field for signing up team users via [`POST /v2/accounts/{accountUid}/team-users`](#tag/Account/operation/addTeamUser)\n\n### 2022.04.02 - 2.0.8\n* Add new audit events\n  * fileDuplicate\n  * folderDuplicate\n  * folderSubfileDuplicate\n  * folderSubfolderDuplicate\n  * accountSectionDuplicate\n* Add userUid and groupUid to Audit Trail Share data\n* Audit trail fileDownload events now have fileVersionUid data\n\n### 2022.02.23 - 2.0.7\n* Add folder import emails (mailInAddress)\n  * Activate an address for importing mails to any folder (in contrast to Inbox section, which always has a static address)\n    * Activate address: [`POST /v2/accounts/{accountUid}/folders/{folderUid}/email`](#tag/Folder/operation/configureFolderEmail)\n    * Deactivate existing address: [`DELETE /v2/accounts/{accountUid}/folders/{folderUid}/email`](#tag/Folder/operation/deleteFolderEmail)\n    * Reset (active or deleted) address to get a new random key: [`PUT /v2/accounts/{accountUid}/folders/{folderUid}/email`](#tag/Folder/operation/requestNewFolderEmailAddress)\n  * If You prefer to only use POST requests, use `action` parameter in request body\n\n### 2022.02.13 - 2.0.6\n* Add dateFrom and dateTo filters for file search\n* Add file report [`GET /v2/accounts/{accountUid}/reports/file-list`](#tag/File/operation/getAccountFileReport)\n\n### 2022.01.24 - 2.0.5\n* Add new audit event: fileResolutionDelete\n\n### 2022.01.22 - 2.0.4\n* Adjusted field names in error responses to correct names\n\n### 2022.01.16 - 2.0.3\n* Added pagination\n  * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/folders`](#tag/Folder/operation/getFolderByParent)\n  * [`GET /v2/accounts/{accountUid}/recycle-bin/folders`](#tag/Folder/operation/getRecycledFolders)\n  * [`GET /v2/accounts/{accountUid}/recycle-bin/files`](#tag/File/operation/getRecycledFiles)\n\n### 2022.01.14 - 2.0.2\n* Fix Folder visibleColumns meta column spec\n\n### 2022.01.14 - 2.0.1\n* Added `page-size` parameter to paths that already had `page` parameter\n  * [`GET /v2/accounts/{accountUid}/audit/accountLog`](#tag/Audit/operation/getAccountRecentAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/audit`](#tag/Audit/operation/getAccountAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/files/{fileUid}/audit`](#tag/Audit/operation/getFileAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/audit`](#tag/Audit/operation/getFolderAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/groups`](#tag/Group/operation/getGroups)\n* Added pagination\n  * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/files`](#tag/File/operation/getFilesByParent)\n* Added missing pagination documentation\n  * [`GET /v2/accounts/{accountUid}/groups/{groupUid}/users`](#tag/Group/operation/getGroupUsers)\n\n### 2021.12.19 - 2.0.0\nAPI v2 comes with multiple breaking changes. Most notably:\n* Removed any reference to object `ID`s. Instead we are now using `UID`s. UIDs are globally unique and have a data type of CHAR(10)\n* Paths now include `accountUid` as required parameter\n* `accountId` paramater has been removed from request body parameters as `accountUid` is now always part of the path parameters for Account-related requests\n* New tags and people/signees can be created directly without attaching them to a file from [`POST /v2/accounts/{accountUid}/tags`](#tag/Tag/operation/addTag) and [`POST /v2/accounts/{accountUid}/people`](#tag/Person/operation/addPerson)\n* Removed deprecated paths and parameters\n\n#### New features\n* Audit trail: added new tag and person/signee events on Account level\n  * tagNew\n  * tagDelete\n  * tagName\n  * signeeNew\n  * signeeDelete\n  * signeeName\n* Search\n  * Added queryFilter options to File search\n    * number\n    * mailSubject\n    * mailSenderEmail\n    * mailSenderName\n    * mailContent\n  * Added filter fields to File search\n    * number\n    * mailSubject\n    * mailSenderEmail\n    * mailSenderName\n    * mailContent\n\n#### Detailed changes to paths:\n* Removed paths:\n  * /files\n  * /files/{fileId}\n  * /folders\n  * /folders/{folderId}\n  * /accounts/{accountId}/recycle-bin\n  * /meta/{metaId}\n  * /files/search\n  * /folders/search\n  * /download\n  * /audit/files/{fileId}\n  * /audit/folders/{folderId}\n* New paths:\n  * /v2/accounts/{accountUid}/files/{fileUid}/preview\n  * /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/download\n* Changed paths:\n  * /files/upload -> /v2/accounts/{accountUid}/files/upload\n  * /files/single/{fileId} -> /v2/accounts/{accountUid}/files/{fileUid}\n  * /files/{fileId}/permissions -> /v2/accounts/{accountUid}/files/{fileUid}/permissions\n  * /files/{fileId}/lock -> /v2/accounts/{accountUid}/files/{fileUid}/lock\n  * /files/{fileId}/unlock -> /v2/accounts/{accountUid}/files/{fileUid}/unlock\n  * /files/{fileId}/related -> /v2/accounts/{accountUid}/files/{fileUid}/related\n  * /files/{fileId}/restore -> /v2/accounts/{accountUid}/files/{fileUid}/restore\n  * /files/{fileId}/purge -> /v2/accounts/{accountUid}/files/{fileUid}/purge\n  * /files/{fileId}/versions -> /v2/accounts/{accountUid}/files/{fileUid}/versions\n  * /files/{fileId}/versions/{fileVersionId} -> /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}\n  * /files/download/{fileId} -> /v2/accounts/{accountUid}/files/{fileUid}/download\n  * /files/versions/{fileVersionId}/preview -> /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/preview\n  * /files/{fileId}/unpack -> /v2/accounts/{accountUid}/files/{fileUid}/unpack\n  * /files/unpack-status/{key} -> /v2/accounts/{accountUid}/unpack/status/{key}\n  * /files/unpack-check -> /v2/accounts/{accountUid}/unpack/check\n  * /files/languages -> /v2/accounts/{accountUid}/document-languages\n  * /folders/single/{folderId} -> /v2/accounts/{accountUid}/folders/{folderUid}\n  * /files/people/{personId} -> /v2/accounts/{accountUid}/people/{personUid}\n  * /files/people/{personId}/permissions -> /v2/accounts/{accountUid}/people/{personUid}/permissions\n  * /folders/{folderId}/files -> /v2/accounts/{accountUid}/folders/{folderUid}/files\n  * /folders/single/{folderId} -> /v2/accounts/{accountUid}/folders/{folderUid}\n  * /folders/{folderId}/permissions -> /v2/accounts/{accountUid}/folders/{folderUid}/permissions\n  * /folders/{folderId}/folders -> /v2/accounts/{accountUid}/folders/{folderUid}/folders\n  * /folders/{folderId}/restore -> /v2/accounts/{accountUid}/folders/{folderUid}/restore\n  * /folders/{folderId}/purge -> /v2/accounts/{accountUid}/folders/{folderUid}/purge\n  * /groups/{groupId} -> /v2/accounts/{accountUid}/groups/{groupUid}\n  * /groups/{groupId}/permissions -> /v2/accounts/{accountUid}/groups/{groupUid}/permissions\n  * /groups/{groupId}/shares -> /v2/accounts/{accountUid}/groups/{groupUid}/shares\n  * /groups/{groupId}/users -> /v2/accounts/{accountUid}/groups/{groupUid}/users\n  * /groups/{groupId}/users/{userId} -> /v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}\n  * /groups/{groupId}/users/{userId}/permissions -> /v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}/permissions\n  * /meta/{metaId}/permissions -> /v2/accounts/{accountUid}/meta/{metaUid}/permissions\n  * /files/{fileId}/meta -> /v2/accounts/{accountUid}/files/{fileUid}/meta\n  * /files/{fileId}/meta/{metaId} -> /v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}\n  * /files/{fileId}/meta/active -> /v2/accounts/{accountUid}/files/{fileUid}/active-meta\n  * /folders/{folderId}/meta -> /v2/accounts/{accountUid}/folders/{folderUid}/meta\n  * /folders/{folderId}/meta/{metaId} -> /v2/accounts/{accountUid}/folders/{folderUid}/meta/{metaUid}\n  * /folders/{folderId}/meta/active -> /v2/accounts/{accountUid}/folders/{folderUid}/active-meta\n  * /files/people/{personId} -> /v2/accounts/{accountUid}/people/{personUid}\n  * /files/people/{personId}/permissions -> /v2/accounts/{accountUid}/people/{personUid}/permissions\n  * /files/{fileId}/people -> /v2/accounts/{accountUid}/files/{fileUid}/people\n  * /files/{fileId}/people/{personId} -> /v2/accounts/{accountUid}/files/{fileUid}/people/{personUid}\n  * /files/reminders/{reminderId} -> /v2/accounts/{accountUid}/reminders/{reminderUid}\n  * /files/{fileId}/reminders -> /v2/accounts/{accountUid}/files/{fileUid}/reminders\n  * /search/extensions -> /v2/accounts/{accountUid}/search/extensions\n  * /search/files -> /v2/accounts/{accountUid}/search/files\n  * /search/folders -> /v2/accounts/{accountUid}/search/folders\n  * /search/simple -> /v2/accounts/{accountUid}/search/simple\n  * /shares/{shareId} -> /v2/accounts/{accountUid}/shares/{shareUid}\n  * /shares/{shareId}/permissions -> /v2/accounts/{accountUid}/shares/{shareUid}/permissions\n  * /files/{fileId}/shares -> /v2/accounts/{accountUid}/files/{fileUid}/shares\n  * /folders/{folderId}/shares -> /v2/accounts/{accountUid}/folders/{folderUid}/shares\n  * /files/tags/{tagId} -> /v2/accounts/{accountUid}/tags/{tagUid}\n  * /files/tags/{tagId}/permissions -> /v2/accounts/{accountUid}/tags/{tagUid}/permissions\n  * /files/{fileId}/tags -> /v2/accounts/{accountUid}/files/{fileUid}/tags\n  * /files/{fileId}/tags/{tagId} -> /v2/accounts/{accountUid}/files/{fileUid}/tags/{tagUid}\n  * /audit/accountLog/{accountId} -> /v2/accounts/{accountUid}/audit/accountLog\n  * /files/{fileId}/audit -> /v2/accounts/{accountUid}/files/{fileUid}/audit\n  * /folders/{folderId}/audit -> /v2/accounts/{accountUid}/folders/{folderUid}/audit\n"
  contact: {}
  version: '2.0.71'
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
- url: https://api.folderit.com
  description: Production server
  variables: {}
- url: https://auth.folderit.com/.well-known
  description: Production server
  variables: {}
- url: https://auth.folderit.com/oauth2
  description: Production server
  variables: {}
paths:
  /v2/user:
    get:
      tags:
      - User
      summary: getUser
      description: Returns user details
      operationId: getUser
      parameters:
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include additional information (comma-separated).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand'
          examples:
          - - dateFormat
      responses:
        '200':
          description: User information
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userDefaultOrExpanded'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - User
      summary: editUser
      description: ''
      operationId: editUser
      parameters:
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include additional information (comma-separated).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand'
          examples:
          - - dateFormat
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2UserRequest'
        required: true
      responses:
        '200':
          description: User information
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userDefaultOrExpanded'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/user/billing:
    put:
      tags:
      - User
      summary: editUserBilling
      description: ''
      operationId: editUserBilling
      parameters:
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/Private'
              - $ref: '#/components/schemas/Company'
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: User profile
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userDefaultOrExpanded'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/user/countries:
    get:
      tags:
      - User
      summary: getSupportedCountries
      description: ''
      operationId: getSupportedCountries
      parameters: []
      responses:
        '200':
          description: Supported countries
          headers: {}
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/user/countries/{locale}:
    get:
      tags:
      - User
      summary: getSupportCountriesInLocale
      description: ''
      operationId: getSupportCountriesInLocale
      parameters:
      - name: locale
        in: path
        description: Locale
        required: true
        style: simple
        schema:
          type: string
          examples:
          - en-GB
      responses:
        '200':
          description: Supported countries
          headers: {}
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/user/locales:
    get:
      tags:
      - User
      summary: getSupportedLocales
      description: ''
      operationId: getSupportedLocales
      parameters: []
      responses:
        '200':
          description: Supported locales
          headers: {}
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/user/permissions:
    get:
      tags:
      - User
      - Permission
      summary: getUserPermissions
      description: ''
      operationId: getUserPermissions
      parameters: []
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2UserPermissionsResponse'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/users:
    post:
      tags:
      - User
      summary: signupUser
      description: ''
      operationId: signupUser
      parameters:
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/newUserSignup'
        required: true
      responses:
        '200':
          description: User signed up
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Otheruser'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/users/{userUid}:
    get:
      tags:
      - User
      summary: getUserByUid
      description: ''
      operationId: getUserByUid
      parameters:
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: User information
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Otheruser'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/users/{userUid}/shares:
    get:
      tags:
      - User
      - Share
      summary: getUserShares
      description: ''
      operationId: getUserShares
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: cursor
        in: query
        description: "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Item shares
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Cursor:
              description: Current cursor
              content:
                text/plain:
                  schema:
                    type: string
                    description: Current cursor
                    examples:
                    - something
                    contentMediaType: text/plain
                  example: something
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/anyShare'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/users/{userUid}/access:
    get:
      tags:
      - User
      - Share
      summary: getAllUserShares
      description: All shares (including through groups) accessible by an user
      operationId: getAllUserShares
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: cursor
        in: query
        description: "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
        style: form
        explode: true
        schema:
          type: string
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Item shares
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Cursor:
              description: Current cursor
              content:
                text/plain:
                  schema:
                    type: string
                    description: Current cursor
                    examples:
                    - something
                    contentMediaType: text/plain
                  example: something
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/anyShare'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/team-users:
    get:
      tags:
      - Account
      summary: getTeamUsers
      description: ''
      operationId: getTeamUsers
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include additional information (comma-separated).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand1'
          examples:
          - - remoteUsername
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 100
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * email
            * name
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|email|name)$
            type: string
      responses:
        '200':
          description: Array of team users
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/teamUserDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Account
      summary: addTeamUser
      description: ''
      operationId: addTeamUser
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include additional information (comma-separated).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand1'
          examples:
          - - remoteUsername
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/teamUserSignup'
              - {}
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: User signed up / added
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamUserDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/team-users/{userUid}:
    get:
      tags:
      - Account
      summary: getTeamUser
      description: ''
      operationId: getTeamUser
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include additional information (comma-separated).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand1'
          examples:
          - - remoteUsername
      responses:
        '200':
          description: Team user
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teamUserDefaultOrExpanded'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts:
    get:
      tags:
      - Account
      summary: getAccounts
      description: Returns available accounts
      operationId: getAccounts
      parameters:
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained using a dot.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand2'
          examples:
          - - shares
      responses:
        '200':
          description: Array of accounts
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - $ref: '#/components/schemas/accountDefaultOrExpanded'
                  - $ref: '#/components/schemas/Partiallysharedaccount'
                description: ''
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Account
      summary: createAccount
      description: ''
      operationId: createAccount
      parameters:
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained using a dot.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand2'
          examples:
          - - shares
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsRequest'
        required: true
      responses:
        '200':
          description: Account created
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}:
    get:
      tags:
      - Account
      summary: getAccount
      description: ''
      operationId: getAccount
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained using a dot.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand2'
          examples:
          - - shares
      responses:
        '200':
          description: Account info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountDefaultOrExpanded'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Account
      summary: updateAccount
      description: ''
      operationId: updateAccount
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained using a dot.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand2'
          examples:
          - - shares
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsRequest1'
        required: true
      responses:
        '200':
          description: Account info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Account
      summary: deleteAccount
      description: ''
      operationId: deleteAccount
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained using a dot.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand2'
          examples:
          - - shares
      responses:
        '200':
          description: Account info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/permissions:
    get:
      tags:
      - Account
      - Permission
      summary: getAccountPermissions
      description: ''
      operationId: getAccountPermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/permissions'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/users:
    get:
      tags:
      - Account
      summary: getAccountUsers
      description: ''
      operationId: getAccountUsers
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      responses:
        '200':
          description: Array of Account Users
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountUserDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/users/{userUid}:
    get:
      tags:
      - Account
      summary: getAccountUser
      description: ''
      operationId: getAccountUser
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Account User
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountUserDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Account
      summary: updateAccountUser
      description: ''
      operationId: updateAccountUser
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsUsersRequest'
        required: true
      responses:
        '200':
          description: Account User
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountUserDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Account
      summary: deleteAccountUser
      description: ''
      operationId: deleteAccountUser
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Account User
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountUserDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/section-order:
    get:
      tags:
      - Account
      summary: getSectionOrder
      description: ''
      operationId: getSectionOrder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Account section order, if configured
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                description: ''
                examples:
                - - asd
                  - asdf
                  - asdg
                contentMediaType: application/json
              example:
              - asd
              - asdf
              - asdg
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Account
      summary: updateSectionOrder
      description: Unlisted sections will be ordered by name after listed sections
      operationId: updateSectionOrder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
              description: ''
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Account section order
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  contentEncoding: int32
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/download:
    get:
      tags:
      - Account
      - File
      - Folder
      summary: downloadFilesAndFoldersBundle
      description: "To download whole account, omit files and folders properties  \nAlternatively, POST request is also supported\n"
      operationId: downloadFilesAndFoldersBundle
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: ZIP Archive
          headers: {}
          content:
            application/octet-stream:
              schema:
                type: string
                contentEncoding: base64
                contentMediaType: application/octet-stream
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities:
    get:
      tags:
      - Entity
      summary: getEntities
      description: ''
      operationId: getEntities
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * name
            * createdAt
            * updatedAt
            * type
            * retentionEnd
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|name|createdAt|updatedAt|type|retentionEnd)$
            type: string
      responses:
        '200':
          description: Section list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}:
    get:
      tags:
      - Entity
      summary: getEntity
      description: ''
      operationId: getEntity
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      responses:
        '200':
          description: Entity info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Entity
      summary: updateEntity
      description: ''
      operationId: updateEntity
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsEntitiesRequest'
        required: true
      responses:
        '200':
          description: Updated entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Entity
      summary: deleteEntity
      description: ''
      operationId: deleteEntity
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: Deleted entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/entities:
    get:
      tags:
      - Entity
      summary: getEntitiesByParent
      description: ''
      operationId: getEntitiesByParent
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: sort
        in: query
        description: >-
          Comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * name
            * date
            * due_date
            * size
            * mail_sender
            * retention_end
            * language
            * number
            * created_at
            * updated_at
            * recycle_date
            * creator
            * extension
            * meta:{uid}
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|name|date|due_date|size|mail_sender|retention_end|language|number|created_at|updated_at|recycle_date|creator|extension|meta:[A-Za-z0-9_-]{10})$
            type: string
          examples:
          - - date
            - name
            - -created_at
      - name: sort-folders-first
        in: query
        description: Set folders to be sorted first in results
        style: form
        explode: true
        schema:
          type: string
          examples:
          - 'true'
          - '1'
          - 'false'
          - '0'
          - ''
        examples:
          Untitled Example1:
            value: 'true'
          Untitled Example2:
            value: '1'
          Untitled Example3:
            value: 'false'
          Untitled Example4:
            value: '0'
          Untitled Example5:
            value: ''
      - name: extension
        in: query
        description: Filter by extension
        style: form
        explode: true
        schema:
          pattern: ^[a-z0-9]+$
          type: string
          examples:
          - png
          - jpg
          - pdf
        examples:
          Untitled Example1:
            value: png
          Untitled Example2:
            value: jpg
          Untitled Example3:
            value: pdf
      responses:
        '200':
          description: Entity list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/all:
    get:
      tags:
      - Entity
      summary: getAllEntities
      description: ''
      operationId: getAllEntities
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: cursor
        in: query
        description: "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: folders
        in: query
        description: Include folders. If only specifying one, the other is opposite value
        style: form
        explode: true
        schema:
          type: string
          examples:
          - '1'
          - '0'
          - 'true'
          - 'false'
          - yes
          - no
          - '...'
        examples:
          Untitled Example1:
            value: '1'
          Untitled Example2:
            value: '0'
          Untitled Example3:
            value: 'true'
          Untitled Example4:
            value: 'false'
          Untitled Example5:
            value: yes
          Untitled Example6:
            value: no
          Untitled Example7:
            value: '...'
      - name: files
        in: query
        description: Include files. If only specifying one, the other is opposite value
        style: form
        explode: true
        schema:
          type: string
          examples:
          - '1'
          - '0'
          - 'true'
          - 'false'
          - yes
          - no
          - '...'
        examples:
          Untitled Example1:
            value: '1'
          Untitled Example2:
            value: '0'
          Untitled Example3:
            value: 'true'
          Untitled Example4:
            value: 'false'
          Untitled Example5:
            value: yes
          Untitled Example6:
            value: no
          Untitled Example7:
            value: '...'
      - name: parentUid
        in: query
        description: Limit response to entities below specific parent
        style: form
        explode: true
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: extension
        in: query
        description: Filter by extension
        style: form
        explode: true
        schema:
          pattern: ^[a-z0-9]+$
          type: string
          examples:
          - png
          - jpg
          - pdf
        examples:
          Untitled Example1:
            value: png
          Untitled Example2:
            value: jpg
          Untitled Example3:
            value: pdf
      responses:
        '200':
          description: Entity list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Cursor:
              description: Current cursor
              content:
                text/plain:
                  schema:
                    type: string
                    description: Current cursor
                    examples:
                    - something
                    contentMediaType: text/plain
                  example: something
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/parents:
    get:
      tags:
      - Entity
      summary: getEntityParents
      description: ''
      operationId: getEntityParents
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      responses:
        '200':
          description: Parent entities list
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/related:
    get:
      tags:
      - Entity
      summary: getEntityRelatedItems
      description: ''
      operationId: getEntityRelatedItems
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Pagination
        in: header
        description: If present (any value), the response is a paginated, sortable list
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * createdAt
            * entityUid
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|createdAt|entityUid)$
            type: string
      responses:
        '200':
          description: "Array of relations  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers."
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Entity
      summary: addEntityRelatedItem
      description: ''
      operationId: addEntityRelatedItem
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsEntitiesRelatedRequest'
        required: true
      responses:
        '200':
          description: Related item
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Entity
      summary: deleteEntityRelatedItem
      description: ''
      operationId: deleteEntityRelatedItem
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsEntitiesRelatedRequest'
        required: true
      responses:
        '200':
          description: Related item
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/restore:
    put:
      tags:
      - Entity
      summary: restoreEntity
      description: ''
      operationId: restoreEntity
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsEntitiesRestoreRequest'
        required: false
      responses:
        '200':
          description: Folder info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/purge:
    put:
      tags:
      - Entity
      summary: deleteEntityPermanently
      description: ''
      operationId: deleteEntityPermanently
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Purged entity info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/action/duplicate:
    post:
      tags:
      - Entity
      summary: duplicateEntities
      description: ''
      operationId: duplicateEntities
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/duplicate'
        required: true
      responses:
        '200':
          description: Duplication status
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/duplicationStatus'
        '302':
          description: Duplicate status URL
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                    contentMediaType: text/plain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsEntitiesActionDuplicateResponse'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/action/duplicate/{statusKey}:
    get:
      tags:
      - Entity
      summary: getDuplicationStatus
      description: ''
      operationId: getDuplicationStatus
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: statusKey
        in: path
        description: Duplication status key
        required: true
        style: simple
        schema:
          maxLength: 8
          minLength: 8
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-
      responses:
        '200':
          description: Duplication status data
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/duplicationStatus'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/recycle-bin:
    get:
      tags:
      - Entity
      summary: getRecycledEntities
      description: ''
      operationId: getRecycledEntities
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: parentUid
        in: query
        description: Limit response to entities below specific parent
        style: form
        explode: true
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Recycled entity entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Entity
      summary: emptyRecycleBin
      description: Purge all entities from the recycle bin
      operationId: emptyRecycleBin
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      responses:
        '204':
          description: All entities purged
          headers: {}
          content: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500-serverError1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/shared-entities:
    get:
      tags:
      - Entity
      summary: getSharedEntities
      description: ''
      operationId: getSharedEntities
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      responses:
        '200':
          description: Shared entities
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/tags/{tagUid}/entities:
    get:
      tags:
      - Entity
      - Tag
      summary: getEntitiesByTag
      description: ''
      operationId: getEntitiesByTag
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: cursor
        in: query
        description: "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
        style: form
        explode: true
        schema:
          type: string
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - tags
            - extension
            - meta:abcde12345
            - file.version
      - name: extension
        in: query
        description: Filter by extension
        style: form
        explode: true
        schema:
          pattern: ^[a-z0-9]+$
          type: string
          examples:
          - png
          - jpg
          - pdf
        examples:
          Untitled Example1:
            value: png
          Untitled Example2:
            value: jpg
          Untitled Example3:
            value: pdf
      responses:
        '200':
          description: Entity list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Cursor:
              description: Current cursor
              content:
                text/plain:
                  schema:
                    type: string
                    description: Current cursor
                    examples:
                    - something
                    contentMediaType: text/plain
                  example: something
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/files:
    get:
      tags:
      - Folder
      - File
      summary: getFilesByParent
      description: ''
      operationId: getFilesByParent
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      responses:
        '200':
          description: File list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/reports/file-list:
    get:
      tags:
      - Folder
      - File
      summary: getAccountFileReport
      description: Use [`GET /v2/accounts/{accountUid}/entities/all`](#tag/Entity/operation/getAllEntities) instead
      operationId: getAccountFileReport
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: limit
        in: query
        description: File count limit
        style: form
        explode: true
        schema:
          maximum: 100000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 10000
          examples:
          - 1
      - name: last
        in: query
        description: Start output after this UID
        style: form
        explode: true
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: File list
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File3'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: true
    parameters: []
  /v2/accounts/{accountUid}/folders:
    get:
      tags:
      - Folder
      summary: getFolders
      description: ''
      operationId: getFolders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      responses:
        '200':
          description: Section list
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/folderDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Folder
      summary: createFolder
      description: ''
      operationId: createFolder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/Section'
              - $ref: '#/components/schemas/Folder3'
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Created section/folder
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folderDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}:
    get:
      tags:
      - Folder
      summary: getFolder
      description: ''
      operationId: getFolder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      responses:
        '200':
          description: Folder info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folderDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Folder
      summary: updateFolder
      description: ''
      operationId: updateFolder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFoldersRequest'
        required: true
      responses:
        '200':
          description: Updated folder
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folderDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Folder
      summary: deleteFolder
      description: ''
      operationId: deleteFolder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Deleted folder
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folderDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/email:
    post:
      tags:
      - Folder
      summary: configureFolderEmail
      description: Request body is optional, action defaults to `activate`
      operationId: configureFolderEmail
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/Activatemail-inaddress'
              - $ref: '#/components/schemas/Deactivatemail-inaddress'
              - $ref: '#/components/schemas/Resetmail-inaddress'
              contentMediaType: application/json
        required: false
      responses:
        '200':
          description: Mail-in address info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mail-inaddress'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Folder
      summary: deleteFolderEmail
      description: ''
      operationId: deleteFolderEmail
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Mail-in address info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mail-inaddress'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Folder
      summary: requestNewFolderEmailAddress
      description: ''
      operationId: requestNewFolderEmailAddress
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Mail-in address info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mail-inaddress'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/permissions:
    get:
      tags:
      - Folder
      - Permission
      summary: getFolderPermissions
      description: ''
      operationId: getFolderPermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folder_properties-permissions'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/folders:
    get:
      tags:
      - Folder
      summary: getFolderByParent
      description: ''
      operationId: getFolderByParent
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      responses:
        '200':
          description: Folder list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/folderDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/related:
    get:
      tags:
      - Folder
      summary: getFolderRelatedItems
      description: ''
      operationId: getFolderRelatedItems
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      responses:
        '200':
          description: Array of relations
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Folder
      summary: addFolderRelatedItem
      description: ''
      operationId: addFolderRelatedItem
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFoldersRelatedRequest'
        required: true
      responses:
        '200':
          description: Related item
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Folder
      summary: deleteFolderRelatedItem
      description: ''
      operationId: deleteFolderRelatedItem
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFoldersRelatedRequest'
        required: true
      responses:
        '200':
          description: Related item
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/restore:
    put:
      tags:
      - Folder
      summary: restoreFolder
      description: ''
      operationId: restoreFolder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFoldersRestoreRequest'
        required: false
      responses:
        '200':
          description: Folder info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folderDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/purge:
    put:
      tags:
      - Folder
      summary: deleteFolderPermanently
      description: ''
      operationId: deleteFolderPermanently
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Purged folder info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folderDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/recycle-bin/folders:
    get:
      tags:
      - Folder
      summary: getRecycledFolders
      description: ''
      operationId: getRecycledFolders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand6'
          examples:
          - - parent
            - meta
      responses:
        '200':
          description: Recycle bin folder entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/folderDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/shared-items:
    get:
      tags:
      - Folder
      - File
      - Account
      summary: getSharedFilesAndFolders
      description: ''
      operationId: getSharedFilesAndFolders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand7'
      responses:
        '200':
          description: Shared files and folders
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsSharedItemsResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/upload:
    post:
      tags:
      - File
      summary: uploadFile
      description: ''
      operationId: uploadFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: "Upload process:  \n* Send a \"create\" action, You'll receive an `uploadId` and `key`  \n  `Parts` property is optional: if present, upload URLs are provided with the \"create\" action response.  \n  `Unpack` property is optional: include to test for archive support and size limit before commencing upload process\n\n* Request upload URLs with the \"part\" action for every part you require, min part size (except for last part) is 5 MB, max part size is 5 GB  \n  Parts are counted up from 1  \n  Maximum number of parts: 10000\n\n* Send part content to received URLs with a PUT request\n* After all parts have been uploaded, send a \"complete\" request to the API, which will finalize file creation.  \n  Failure to do so will result in deletion of the uploaded parts.\n\n* Each URL has a lifetime of 48 hours and can be re-requested, if necessary\n* Sending an \"abort\" action will remove all uploaded parts immediately"
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/Create1'
              - $ref: '#/components/schemas/Part'
              - $ref: '#/components/schemas/Abort'
              - $ref: '#/components/schemas/Complete'
              - $ref: '#/components/schemas/Uploadedparts'
              description: "Upload process:  \n* Send a \"create\" action, You'll receive an `uploadId` and `key`  \n  `Parts` property is optional: if present, upload URLs are provided with the \"create\" action response.  \n  `Unpack` property is optional: include to test for archive support and size limit before commencing upload process\n\n* Request upload URLs with the \"part\" action for every part you require, min part size (except for last part) is 5 MB, max part size is 5 GB  \n  Parts are counted up from 1  \n  Maximum number of parts: 10000\n\n* Send part content to received URLs with a PUT request\n* After all parts have been uploaded, send a \"complete\" request to the API, which will finalize file creation.  \n  Failure to do so will result in deletion of the uploaded parts.\n\n* Each URL has a lifetime of 48 hours and can be re-requested, if necessary\n* Sending an \"abort\" action will remove all uploaded parts immediately"
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Uploader response
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Create'
                - $ref: '#/components/schemas/CreatewithURLs'
                - $ref: '#/components/schemas/Part1'
                - type: object
                - $ref: '#/components/schemas/fileDefaultOrExpanded'
                - type: array
                  items:
                    $ref: '#/components/schemas/Partdata'
                - $ref: '#/components/schemas/Archiveunpack2'
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}:
    get:
      tags:
      - File
      summary: getFile
      description: ''
      operationId: getFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - File
      summary: updateFile
      description: ''
      operationId: updateFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesRequest'
        required: true
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - File
      summary: deleteFile
      description: ''
      operationId: deleteFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/permissions:
    get:
      tags:
      - File
      - Permission
      summary: getFilePermissions
      description: ''
      operationId: getFilePermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/properties-permissions'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/lock:
    post:
      tags:
      - File
      summary: lockFilePost
      description: ''
      operationId: lockFilePost
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesLockRequest'
        required: false
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - File
      summary: lockFilePut
      description: ''
      operationId: lockFilePut
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesLockRequest'
        required: false
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - File
      summary: unlockFile
      description: ''
      operationId: unlockFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/unlock:
    put:
      tags:
      - File
      summary: unlockFile2
      description: ''
      operationId: unlockFile2
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesUnlockRequest'
        required: false
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/related:
    get:
      tags:
      - File
      summary: getFileRelatedItems
      description: ''
      operationId: getFileRelatedItems
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      responses:
        '200':
          description: Array of relations
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - File
      summary: addFileRelatedItem
      description: ''
      operationId: addFileRelatedItem
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/V2AccountsFilesRelatedRequest'
              - $ref: '#/components/schemas/V2AccountsFilesRelatedRequest1'
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Related item
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - File
      summary: deleteFileRelatedItem
      description: ''
      operationId: deleteFileRelatedItem
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/V2AccountsFilesRelatedRequest'
              - $ref: '#/components/schemas/V2AccountsFilesRelatedRequest1'
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Related item
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/relatedEntityDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/restore:
    put:
      tags:
      - File
      summary: restoreFile
      description: ''
      operationId: restoreFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesRestoreRequest'
        required: false
      responses:
        '200':
          description: File info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/purge:
    put:
      tags:
      - File
      summary: deleteFilePermanently
      description: ''
      operationId: deleteFilePermanently
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Purged file info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/versions:
    get:
      tags:
      - File
      summary: getFileVersions
      description: ''
      operationId: getFileVersions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Pagination
        in: header
        description: If present (any value), the response is a paginated, sortable list
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * createdAt
            * uid
            * size
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:createdAt|uid|size)$
            type: string
      responses:
        '200':
          description: "Array of fileVersions.  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers."
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileVersionDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}:
    delete:
      tags:
      - File
      summary: deleteFileVersion
      description: ''
      operationId: deleteFileVersion
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileVersionUid
        in: path
        description: File Version UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: File Version info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileVersionDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/download:
    get:
      tags:
      - File
      summary: getFileDownloadUrl
      description: ''
      operationId: getFileDownloadUrl
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '302':
          description: Link to file download
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                    contentMediaType: text/plain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsFilesDownloadResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/download:
    get:
      tags:
      - File
      summary: getFileVersionDownloadUrl
      description: ''
      operationId: getFileVersionDownloadUrl
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileVersionUid
        in: path
        description: File Version UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '302':
          description: Link to file version download
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                    contentMediaType: text/plain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsFilesVersionsFileVersionUidDownloadResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/preview:
    get:
      tags:
      - File
      summary: getFilePreviewDownloadUrl
      description: ''
      operationId: getFilePreviewDownloadUrl
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '302':
          description: Link to file preview
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                    contentMediaType: text/plain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsFilesPreviewResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/preview:
    get:
      tags:
      - File
      summary: getFileVersionPreviewDownloadUrl
      description: ''
      operationId: getFileVersionPreviewDownloadUrl
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileVersionUid
        in: path
        description: File Version UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '302':
          description: Link to file preview
          headers:
            Location:
              content:
                text/plain:
                  schema:
                    type: string
                    contentMediaType: text/plain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsFilesVersionsFileVersionUidPreviewResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/recycle-bin/files:
    get:
      tags:
      - File
      summary: getRecycledFiles
      description: ''
      operationId: getRecycledFiles
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example parent.parent.parent)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand5'
      responses:
        '200':
          description: Recycle bin file entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/unpack:
    post:
      tags:
      - File
      summary: unpackArchiveFile
      description: After initiating unpacking, check status with received key
      operationId: unpackArchiveFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesUnpackRequest'
        required: true
      responses:
        '200':
          description: Unpack key, check status from [`GET /accounts/{accountUid}/files/unpack-status/{key}`](#tag/File/operation/getUnpackStatus)
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsFilesUnpackResponse'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/unpack/status/{key}:
    get:
      tags:
      - File
      summary: getUnpackStatus
      description: ''
      operationId: getUnpackStatus
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: key
        in: path
        description: Unpack key
        required: true
        style: simple
        schema:
          type: string
      responses:
        '200':
          description: Unpacking status
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Success'
                - $ref: '#/components/schemas/Active'
                - $ref: '#/components/schemas/Failure'
                - $ref: '#/components/schemas/Filetoolarge'
                - $ref: '#/components/schemas/Outofspace'
                - $ref: '#/components/schemas/Conflictingfile'
                - $ref: '#/components/schemas/Lockedfile'
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/unpack/check:
    post:
      tags:
      - File
      summary: checkUnpackSupport
      description: Send a filename to check if system supports unpacking it
      operationId: checkUnpackSupport
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsUnpackCheckRequest'
        required: true
      responses:
        '200':
          description: Unpacking support response
          headers: {}
          content:
            application/json:
              schema:
                type: boolean
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/document-languages:
    get:
      tags:
      - File
      summary: getDocumentOcrLanguages
      description: ''
      operationId: getDocumentOcrLanguages
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Supported languages
          headers: {}
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/meta:
    get:
      tags:
      - Meta
      summary: getMetas
      description: ''
      operationId: getMetas
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of Meta info
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/meta'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Meta
      summary: addMeta
      description: ''
      operationId: addMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsMetaRequest'
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/meta/{metaUid}:
    get:
      tags:
      - Meta
      summary: getMeta
      description: ''
      operationId: getMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Meta
      summary: updateMeta
      description: ''
      operationId: updateMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsMetaRequest1'
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Meta
      summary: deleteMeta
      description: ''
      operationId: deleteMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/meta'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/meta/{metaUid}/permissions:
    get:
      tags:
      - Meta
      - Permission
      summary: getMetaPermissions
      description: ''
      operationId: getMetaPermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/metaBase_properties-permissions'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/meta/{metaUid}/options:
    post:
      tags:
      - Meta
      summary: addMetaOptions
      description: ''
      operationId: addMetaOptions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsMetaOptionsRequest'
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaSelectOption'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/meta/{metaUid}/options/{optionUid}:
    put:
      tags:
      - Meta
      summary: updateMetaOption
      description: ''
      operationId: updateMetaOption
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: optionUid
        in: path
        description: Meta Select Option UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsMetaOptionsOptionUidRequest'
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaSelectOption'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Meta
      summary: deleteMetaOption
      description: ''
      operationId: deleteMetaOption
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: optionUid
        in: path
        description: Meta Select Option UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Meta Select Option
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaSelectOption'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/meta:
    get:
      tags:
      - Meta
      - Entity
      summary: getEntityMeta
      description: ''
      operationId: getEntityMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of entityMeta
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityMeta'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Meta
      - Entity
      summary: addEntityMeta
      description: ''
      operationId: addEntityMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsEntitiesMetaRequest'
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                - oneOf:
                  - $ref: '#/components/schemas/Entitystringmeta'
                  - $ref: '#/components/schemas/Entitytextmeta'
                  - $ref: '#/components/schemas/Entityintegermeta'
                  - $ref: '#/components/schemas/Entitydecimalmeta'
                  - $ref: '#/components/schemas/Entitydatemeta'
                  - $ref: '#/components/schemas/Entitydatetimemeta'
                  - $ref: '#/components/schemas/Entitytimemeta'
                  - $ref: '#/components/schemas/Entitybooleanmeta'
                  - $ref: '#/components/schemas/EntityURLmeta'
                  - $ref: '#/components/schemas/Entityemailmeta'
                  - $ref: '#/components/schemas/Entityselectmeta'
                - type: array
                  items:
                    $ref: '#/components/schemas/entityMeta'
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}:
    put:
      tags:
      - Meta
      - Entity
      summary: editEntityMeta
      description: In case of having multiple file metas referencing the same meta, the selection of affected entity meta is undetermined, use [`PUT /accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}/{entityMetaUid}`](#tag/Entity/operation/editSpecificEntityMeta) instead.
      operationId: editEntityMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V2AccountsEntitiesMetaMetaUidRequest'
              - examples:
                - '{"value":null}'
                - '{"value":"meta value"}'
                - '{"value":123456}'
                - '{"value":true}'
              contentMediaType: application/json
            examples:
              'null':
                summary: Null value
                value:
                  value: null
              string:
                summary: String value
                value:
                  value: meta value
              integer:
                summary: Integer value
                value:
                  value: 123456
              boolean:
                summary: Boolean value
                value:
                  value: true
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityMeta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Meta
      - Entity
      summary: deleteEntityMeta
      description: ''
      operationId: deleteEntityMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/entityMeta'
                - type: array
                  items:
                    $ref: '#/components/schemas/entityMeta'
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}/{entityMetaUid}:
    put:
      tags:
      - Meta
      - Entity
      summary: editSpecificEntityMeta
      description: ''
      operationId: editSpecificEntityMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityMetaUid
        in: path
        description: Entity Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest'
              - examples:
                - '{"value":null}'
                - '{"value":"meta value"}'
                - '{"value":123456}'
                - '{"value":true}'
              contentMediaType: application/json
            examples:
              'null':
                summary: Null value
                value:
                  value: null
              string:
                summary: String value
                value:
                  value: meta value
              integer:
                summary: Integer value
                value:
                  value: 123456
              boolean:
                summary: Boolean value
                value:
                  value: true
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityMeta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Meta
      - Entity
      summary: deleteSpecificEntityMeta
      description: ''
      operationId: deleteSpecificEntityMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityMetaUid
        in: path
        description: Entity Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityMeta'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/active-meta:
    get:
      tags:
      - Meta
      - Entity
      summary: getActiveEntityMeta
      description: ''
      operationId: getActiveEntityMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of active folderMeta
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foldermeta'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/meta:
    get:
      tags:
      - Meta
      - File
      summary: getFileMeta
      description: ''
      operationId: getFileMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of fileMeta
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entityMeta'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Meta
      - File
      summary: addFileMeta
      description: ''
      operationId: addFileMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesMetaRequest'
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/entityMeta'
                - type: array
                  items:
                    $ref: '#/components/schemas/entityMeta'
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}:
    put:
      tags:
      - Meta
      - File
      summary: updateFileMeta
      description: In case of having multiple file metas referencing the same meta, the selection of affected file meta is undetermined, use [`PUT /accounts/{accountUid}files/{fileUid}/meta/{metaUid}/{fileMetaUid}`](#tag/Meta/operation/updateSpecificFileMeta) instead.
      operationId: updateFileMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V2AccountsFilesMetaMetaUidRequest'
              - examples:
                - '{"value":null}'
                - '{"value":"meta value"}'
                - '{"value":123456}'
                - '{"value":true}'
              contentMediaType: application/json
            examples:
              'null':
                summary: Null value
                value:
                  value: null
              string:
                summary: String value
                value:
                  value: meta value
              integer:
                summary: Integer value
                value:
                  value: 123456
              boolean:
                summary: Boolean value
                value:
                  value: true
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityMeta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Meta
      - File
      summary: deleteFileMeta
      description: ''
      operationId: deleteFileMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/entityMeta'
                - type: array
                  items:
                    $ref: '#/components/schemas/entityMeta'
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}/{fileMetaUid}:
    put:
      tags:
      - Meta
      - File
      summary: updateSpecificFileMeta
      description: ''
      operationId: updateSpecificFileMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileMetaUid
        in: path
        description: File Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/V2AccountsFilesMetaMetaUidFileMetaUidRequest'
              - examples:
                - '{"value":null}'
                - '{"value":"meta value"}'
                - '{"value":123456}'
                - '{"value":true}'
              contentMediaType: application/json
            examples:
              'null':
                summary: Null value
                value:
                  value: null
              string:
                summary: String value
                value:
                  value: meta value
              integer:
                summary: Integer value
                value:
                  value: 123456
              boolean:
                summary: Boolean value
                value:
                  value: true
        required: true
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityMeta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Meta
      - File
      summary: deleteSpecificFileMeta
      description: ''
      operationId: deleteSpecificFileMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileMetaUid
        in: path
        description: File Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entityMeta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/active-meta:
    get:
      tags:
      - Meta
      - File
      summary: getFileActiveMeta
      description: ''
      operationId: getFileActiveMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of active folderMeta
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foldermeta'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/meta:
    get:
      tags:
      - Meta
      - Folder
      summary: getFolderMeta
      description: ''
      operationId: getFolderMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of folderMeta
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foldermeta'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Meta
      - Folder
      summary: addFolderMeta
      description: ''
      operationId: addFolderMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFoldersMetaRequest'
        required: true
      responses:
        '200':
          description: Folder Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Foldermeta'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/meta/{metaUid}:
    put:
      tags:
      - Meta
      - Folder
      summary: updateFolderMeta
      description: ''
      operationId: updateFolderMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFoldersMetaMetaUidRequest'
        required: true
      responses:
        '200':
          description: Folder Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Foldermeta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Meta
      - Folder
      summary: deleteFolderMeta
      description: ''
      operationId: deleteFolderMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: metaUid
        in: path
        description: Meta UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Folder Meta
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Foldermeta'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/active-meta:
    get:
      tags:
      - Meta
      - Folder
      summary: getFolderActiveMeta
      description: ''
      operationId: getFolderActiveMeta
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of active folderMeta
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Foldermeta'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/tags:
    get:
      tags:
      - Tag
      summary: getTags
      description: ''
      operationId: getTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * name
            * createdAt
            * updatedAt
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|name|createdAt|updatedAt)$
            type: string
          examples:
          - - name
            - -uid
      responses:
        '200':
          description: Tag list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Tag
      summary: addTag
      description: ''
      operationId: addTag
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsTagsRequest'
        required: true
      responses:
        '200':
          description: Added Tag info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/tags/root:
    get:
      tags:
      - Tag
      summary: getRootTags
      description: ''
      operationId: getRootTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * name
            * createdAt
            * updatedAt
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|name|createdAt|updatedAt)$
            type: string
          examples:
          - - name
            - -uid
      responses:
        '200':
          description: Tag list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/tags/{tagUid}:
    get:
      tags:
      - Tag
      summary: getTag
      description: ''
      operationId: getTag
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Tag info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Tag
      summary: updateTag
      description: ''
      operationId: updateTag
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsTagsRequest1'
        required: true
      responses:
        '200':
          description: Tag info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Tag
      summary: deleteTag
      description: ''
      operationId: deleteTag
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Tag info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/tags/{tagUid}/permissions:
    get:
      tags:
      - Tag
      - Permission
      summary: getTagPermissions
      description: ''
      operationId: getTagPermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag_properties-permissions'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/tags/{tagUid}/tags:
    get:
      tags:
      - Tag
      summary: getSubTags
      description: ''
      operationId: getSubTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * name
            * createdAt
            * updatedAt
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|name|createdAt|updatedAt)$
            type: string
          examples:
          - - name
            - -uid
      responses:
        '200':
          description: Tag list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/tags:
    get:
      tags:
      - Tag
      - Entity
      summary: getEntityTags
      description: ''
      operationId: getEntityTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of tags
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Tag
      - Entity
      summary: addEntityTags
      description: ''
      operationId: addEntityTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsEntitiesTagsRequest'
        required: true
      responses:
        '200':
          description: Added tags
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/tags/{tagUid}:
    delete:
      tags:
      - Tag
      - Entity
      summary: deleteEntityTag
      description: ''
      operationId: deleteEntityTag
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: Tag info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/tags:
    get:
      tags:
      - Tag
      - File
      summary: getFileTags
      description: ''
      operationId: getFileTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of tags
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Tag
      - File
      summary: addFileTags
      description: ''
      operationId: addFileTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesTagsRequest'
        required: true
      responses:
        '200':
          description: Added tags
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/tags/{tagUid}:
    delete:
      tags:
      - Tag
      - File
      summary: deleteFileTags
      description: ''
      operationId: deleteFileTags
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: Tag info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/people:
    get:
      tags:
      - Person
      summary: getPeople
      description: ''
      operationId: getPeople
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of Person info
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Person
      summary: addPerson
      description: ''
      operationId: addPerson
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsPeopleRequest'
        required: true
      responses:
        '200':
          description: Added Person info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/people/{personUid}:
    get:
      tags:
      - Person
      summary: getPerson
      description: ''
      operationId: getPerson
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: personUid
        in: path
        description: Person UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Person info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Person
      - File
      summary: updatePerson
      description: ''
      operationId: updatePerson
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: personUid
        in: path
        description: Person UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsPeopleRequest'
        required: true
      responses:
        '200':
          description: Person info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Person
      - File
      summary: deletePerson
      description: ''
      operationId: deletePerson
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: personUid
        in: path
        description: Person UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Person info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/people/{personUid}/permissions:
    get:
      tags:
      - Person
      - Permission
      summary: getPersonPermissions
      description: ''
      operationId: getPersonPermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: personUid
        in: path
        description: Person UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person_properties-permissions'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/people:
    get:
      tags:
      - Person
      - File
      summary: getFilePeople
      description: ''
      operationId: getFilePeople
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of people
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Person
      - File
      summary: addFilePeople
      description: ''
      operationId: addFilePeople
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesPeopleRequest'
        required: true
      responses:
        '200':
          description: Added people
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/people/{personUid}:
    delete:
      tags:
      - Person
      - File
      summary: deleteFilePerson
      description: ''
      operationId: deleteFilePerson
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: personUid
        in: path
        description: Person UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      - name: X-Folderit-Lock
        in: header
        description: File lockId value for updating a locked file
        style: simple
        schema:
          maxLength: 2048
          type: string
      responses:
        '200':
          description: Person info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/reminders:
    get:
      tags:
      - Reminder
      summary: getAllReminders
      description: ''
      operationId: getAllReminders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Pagination
        in: header
        description: If present (any value), the response is a paginated, sortable list
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * entityUid
            * createdAt
            * remindAt
            * email
            * groupUid
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$
            type: string
      responses:
        '200':
          description: "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers."
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reminder'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/reminders/{reminderUid}:
    put:
      tags:
      - Reminder
      - File
      summary: updateReminder
      description: ''
      operationId: updateReminder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: reminderUid
        in: path
        description: Reminder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsRemindersRequest'
        required: true
      responses:
        '200':
          description: Reminder info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reminder'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Reminder
      - File
      summary: deleteReminder
      description: ''
      operationId: deleteReminder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: reminderUid
        in: path
        description: Reminder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Reminder info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reminder'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/reminders:
    get:
      tags:
      - Reminder
      - File
      summary: getFileReminders
      description: ''
      operationId: getFileReminders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Pagination
        in: header
        description: If present (any value), the response is a paginated, sortable list
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * entityUid
            * createdAt
            * remindAt
            * email
            * groupUid
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$
            type: string
      responses:
        '200':
          description: "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers."
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reminder'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Reminder
      - File
      summary: addFileReminders
      description: ''
      operationId: addFileReminders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddRemindersRequest'
              description: ''
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Added reminders
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reminder'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/reminders:
    get:
      tags:
      - Reminder
      - Folder
      summary: getFolderReminders
      description: ''
      operationId: getFolderReminders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Pagination
        in: header
        description: If present (any value), the response is a paginated, sortable list
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * entityUid
            * createdAt
            * remindAt
            * email
            * groupUid
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$
            type: string
      responses:
        '200':
          description: "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers."
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reminder'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Reminder
      - Folder
      summary: addFolderReminders
      description: ''
      operationId: addFolderReminders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddRemindersRequest'
              description: ''
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Added reminders
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reminder'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/reminders:
    get:
      tags:
      - Reminder
      - Entity
      summary: getEntityReminders
      description: ''
      operationId: getEntityReminders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Pagination
        in: header
        description: If present (any value), the response is a paginated, sortable list
        style: simple
        schema:
          type: string
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 20
          examples:
          - 10
      - name: sort
        in: query
        description: >-
          Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order

          One of:
            * uid
            * entityUid
            * createdAt
            * remindAt
            * email
            * groupUid
        style: form
        explode: true
        schema:
          type: array
          items:
            pattern: ^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$
            type: string
      responses:
        '200':
          description: "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers."
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reminder'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Reminder
      - File
      summary: addEntityReminders
      description: ''
      operationId: addEntityReminders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddRemindersRequest'
              description: ''
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Added reminders
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reminder'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/resolutions:
    get:
      tags:
      - Resolution
      summary: getEntityResolutions
      description: ''
      operationId: getEntityResolutions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Resolution list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resolutionDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Resolution
      summary: addEntityResolution
      description: ''
      operationId: addEntityResolution
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resolution-create'
        required: true
      responses:
        '201':
          description: Added resolution
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolutionDefaultOrExpanded'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '409':
          description: Conflict
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/409-conflict1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/resolutions/{resolutionUid}:
    get:
      tags:
      - Resolution
      summary: getResolution
      description: ''
      operationId: getResolution
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      responses:
        '200':
          description: Resolution
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolutionDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Resolution
      summary: updateResolution
      description: ''
      operationId: updateResolution
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resolution-update'
        required: true
      responses:
        '200':
          description: Updated resolution
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolutionDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Resolution
      summary: deleteResolution
      description: ''
      operationId: deleteResolution
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '204':
          description: No content
          headers: {}
          content: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/resolutions/{resolutionUid}/invites:
    get:
      tags:
      - Resolution
      summary: getResolutionInvites
      description: ''
      operationId: getResolutionInvites
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Resolution invite list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resolutionInviteDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Resolution
      summary: addResolutionInvites
      description: ''
      operationId: addResolutionInvites
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/resolution-invite'
              description: ''
              contentMediaType: application/json
        required: true
      responses:
        '201':
          description: Added resolution invites
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/resolutionInviteDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/resolutions/{resolutionUid}/invites/{resolutionInviteUid}:
    get:
      tags:
      - Resolution
      summary: getResolutionInvite
      description: ''
      operationId: getResolutionInvite
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionInviteUid
        in: path
        description: Resolution invite UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      responses:
        '200':
          description: Resolution
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolutionInviteDefaultOrExpanded'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Resolution
      summary: updateResolutionInvite
      description: ''
      operationId: updateResolutionInvite
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionInviteUid
        in: path
        description: Resolution invite UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invite-update'
        required: true
      responses:
        '200':
          description: Updated resolution
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolutionInviteDefaultOrExpanded'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Resolution
      summary: deleteResolutionInvite
      description: ''
      operationId: deleteResolutionInvite
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionUid
        in: path
        description: Resolution UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: resolutionInviteUid
        in: path
        description: Resolution invite UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '204':
          description: No content
          headers: {}
          content: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/entities/{entityUid}/workflows:
    get:
      tags:
      - Workflow
      summary: getEntityWorkflows
      description: ''
      operationId: getEntityWorkflows
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Workflow list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/workflowDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Workflow
      summary: addEntityWorkflow
      description: ''
      operationId: addEntityWorkflow
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: entityUid
        in: path
        description: Entity UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow-create'
        required: true
      responses:
        '201':
          description: Added workflow
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/workflows:
    get:
      tags:
      - Workflow
      summary: getAccountWorkflows
      description: ''
      operationId: getAccountWorkflows
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Workflow list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/workflowDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Workflow
      summary: addWorkflow
      description: ''
      operationId: addWorkflow
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow-create'
        required: true
      responses:
        '201':
          description: Added workflow
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/workflows/all:
    get:
      tags:
      - Workflow
      summary: getAllWorkflows
      description: ''
      operationId: getAllWorkflows
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Workflow list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/workflowDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/workflows/{workflowUid}:
    get:
      tags:
      - Workflow
      summary: getWorkflow
      description: ''
      operationId: getWorkflow
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      responses:
        '200':
          description: Workflow
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Workflow
      summary: updateWorkflow
      description: ''
      operationId: updateWorkflow
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow-update'
        required: true
      responses:
        '200':
          description: Updated workflow
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Workflow
      summary: deleteWorkflow
      description: ''
      operationId: deleteWorkflow
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '204':
          description: No content
          headers: {}
          content: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/workflows/{workflowUid}/versions:
    get:
      tags:
      - Workflow
      summary: getWorkflowVersions
      description: ''
      operationId: getWorkflowVersions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Workflow version list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Workflow
      summary: addWorkflowVersion
      description: ''
      operationId: addWorkflowVersion
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow-version-create'
        required: true
      responses:
        '201':
          description: Added workflow
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/workflows/{workflowUid}/versions/{workflowVersionId}:
    get:
      tags:
      - Workflow
      summary: getWorkflowVersion
      description: ''
      operationId: getWorkflowVersion
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowVersionId
        in: path
        description: Workflow version ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      responses:
        '200':
          description: Workflow version
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Workflow
      summary: updateWorkflowVersion
      description: ''
      operationId: updateWorkflowVersion
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowVersionId
        in: path
        description: Workflow version ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated) from the expanded variant of response.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand3'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow-version-update'
        required: true
      responses:
        '200':
          description: Updated workflow version
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Workflow
      summary: deleteWorkflowVersion
      description: ''
      operationId: deleteWorkflowVersion
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowVersionId
        in: path
        description: Workflow version ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '204':
          description: No content
          headers: {}
          content: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/workflows/{workflowUid}/triggers:
    get:
      tags:
      - Workflow
      summary: getWorkflowTriggers
      description: ''
      operationId: getWorkflowTriggers
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Workflow trigger list
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trigger'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Workflow
      summary: addWorkflowTrigger
      description: ''
      operationId: addWorkflowTrigger
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow-trigger-create'
        required: true
      responses:
        '201':
          description: Added workflow
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/workflows/{workflowUid}/triggers/{workflowTriggerId}:
    get:
      tags:
      - Workflow
      summary: getWorkflowTrigger
      description: ''
      operationId: getWorkflowTrigger
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowTriggerId
        in: path
        description: Workflow trigger ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Workflow trigger
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trigger'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Workflow
      summary: updateWorkflowTrigger
      description: ''
      operationId: updateWorkflowTrigger
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowTriggerId
        in: path
        description: Workflow trigger ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/workflow-trigger-update'
        required: true
      responses:
        '200':
          description: Updated workflow version
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Workflow
      summary: deleteWorkflowTrigger
      description: ''
      operationId: deleteWorkflowTrigger
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowUid
        in: path
        description: Workflow UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: workflowTriggerId
        in: path
        description: Workflow trigger ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '204':
          description: No content
          headers: {}
          content: {}
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/access/users:
    get:
      tags:
      - Share
      summary: getAllUsersWithAccess
      description: ''
      operationId: getAllUsersWithAccess
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Array of other users
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Otheruser'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/shares:
    get:
      tags:
      - Share
      - Account
      summary: listAccountShares
      description: ''
      operationId: listAccountShares
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/accountShare'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Share
      - Account
      summary: shareAccount
      description: ''
      operationId: shareAccount
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsSharesRequest'
        required: true
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountShare'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/shares/{shareUid}:
    get:
      tags:
      - Share
      summary: getShare
      description: ''
      operationId: getShare
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: shareUid
        in: path
        description: Share UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anyShare'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Share
      summary: updateShare
      description: ''
      operationId: updateShare
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: shareUid
        in: path
        description: Share UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsSharesRequest1'
        required: true
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anyShare'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Share
      summary: deleteShare
      description: ''
      operationId: deleteShare
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: shareUid
        in: path
        description: Share UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/anyShare'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/shares/{shareUid}/permissions:
    get:
      tags:
      - Share
      - Permission
      summary: getSharePermissions
      description: ''
      operationId: getSharePermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: shareUid
        in: path
        description: Share UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/share_properties-permissions'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/shares:
    get:
      tags:
      - Share
      - File
      summary: listFileShares
      description: ''
      operationId: listFileShares
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fileShare'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Share
      - File
      summary: shareFile
      description: ''
      operationId: shareFile
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFilesSharesRequest'
        required: true
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fileShare'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/shares:
    get:
      tags:
      - Share
      - Folder
      summary: listFolderShares
      description: ''
      operationId: listFolderShares
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/folderShare'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Share
      - Folder
      summary: shareFolder
      description: ''
      operationId: shareFolder
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsFoldersSharesRequest'
        required: true
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folderShare'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/tags/{tagUid}/shares:
    get:
      tags:
      - Share
      - Tag
      summary: listTagShares
      description: ''
      operationId: listTagShares
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tagShare'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Share
      - Tag
      summary: shareTag
      description: ''
      operationId: shareTag
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: tagUid
        in: path
        description: Tag UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsTagsSharesRequest'
        required: true
      responses:
        '200':
          description: Share info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tagShare'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/access/public:
    get:
      tags:
      - Share
      summary: getAllPublicShares
      description: ''
      operationId: getAllPublicShares
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Array of Shares
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/anyShare'
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/access/unaccepted:
    get:
      tags:
      - Share
      summary: getAllUnacceptedShareEmails
      description: ''
      operationId: getAllUnacceptedShareEmails
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Array of emails
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                description: ''
                contentMediaType: application/json
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups:
    get:
      tags:
      - Group
      summary: getGroups
      description: ''
      operationId: getGroups
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      - name: sort
        in: query
        description: Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example groups.groups)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand8'
          examples:
          - - shares
            - users
      responses:
        '200':
          description: Array of groups
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupDefaultOrExpanded'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Group
      summary: addGroup
      description: ''
      operationId: addGroup
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsGroupsRequest'
        required: true
      responses:
        '200':
          description: Created group
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}:
    get:
      tags:
      - Group
      summary: getGroup
      description: ''
      operationId: getGroup
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example groups.groups)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand8'
          examples:
          - - shares
            - users
      responses:
        '200':
          description: Group info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    put:
      tags:
      - Group
      summary: updateGroup
      description: ''
      operationId: updateGroup
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V2AccountsGroupsRequest'
        required: true
      responses:
        '200':
          description: Group info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    delete:
      tags:
      - Group
      summary: deleteGroup
      description: ''
      operationId: deleteGroup
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Group info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupDefaultOrExpanded'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/permissions:
    get:
      tags:
      - Group
      - Permission
      summary: getGroupPermissions
      description: ''
      operationId: getGroupPermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/group_properties-permissions'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/shares:
    get:
      tags:
      - Group
      - Share
      summary: getGroupSharedItems
      description: ''
      operationId: getGroupSharedItems
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example entity.meta).
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand4'
      responses:
        '200':
          description: Item shares
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/anyShare'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/members:
    get:
      tags:
      - Group
      summary: getGroupMembers
      description: ''
      operationId: getGroupMembers
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Group members
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/groupMember'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Group
      summary: addGroupMember
      description: ''
      operationId: addGroupMember
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/Byemail'
              - $ref: '#/components/schemas/ByuserUid1'
              - $ref: '#/components/schemas/BygroupUid'
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: Member info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupMember'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/members/{memberUid}:
    delete:
      tags:
      - Group
      summary: deleteGroupMember
      description: ''
      operationId: deleteGroupMember
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: memberUid
        in: path
        description: Member UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Member info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/groupMember'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/users:
    get:
      tags:
      - Group
      summary: getGroupUsers
      description: ''
      operationId: getGroupUsers
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Group members (users)
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Groupmemberuser'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Group
      summary: addGroupUser
      description: ''
      operationId: addGroupUser
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/Byemail'
              - $ref: '#/components/schemas/Byuid'
              contentMediaType: application/json
        required: true
      responses:
        '200':
          description: User info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Otheruser'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}:
    delete:
      tags:
      - Group
      summary: deleteGroupUser
      description: ''
      operationId: deleteGroupUser
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: User info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Otheruser'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}/permissions:
    get:
      tags:
      - Group
      - Permission
      summary: getGroupUserPermissions
      description: ''
      operationId: getGroupUserPermissions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: userUid
        in: path
        description: User UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Permissions
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsGroupsUsersUserUidPermissionsResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/children:
    get:
      tags:
      - Group
      summary: getGroupChildren
      description: ''
      operationId: getGroupChildren
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 50
          examples:
          - 10
      responses:
        '200':
          description: Group members (groups)
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Groupmemberchild'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    post:
      tags:
      - Group
      summary: addGroupChild
      description: ''
      operationId: addGroupChild
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Byuid'
        required: true
      responses:
        '200':
          description: Member info
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groupmemberchild'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '422':
          description: Unprocessable entity
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/422-unprocessableEntity1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/groups/{groupUid}/children/{childUid}:
    delete:
      tags:
      - Group
      summary: deleteGroupChild
      description: ''
      operationId: deleteGroupChild
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: groupUid
        in: path
        description: Group UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: childUid
        in: path
        description: Child UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: X-Folderit-Request-Key
        in: header
        description: "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
        style: simple
        schema:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type: string
      responses:
        '200':
          description: Member info (group)
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groupmemberchild'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/plans:
    get:
      tags:
      - Plan
      summary: getPlans
      description: ''
      operationId: getPlans
      parameters:
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Plan array
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
                description: ''
                contentMediaType: application/json
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/search/simple:
    get:
      tags:
      - Search
      - File
      - Folder
      summary: searchAutocomplete
      description: Alternatively, POST request is also supported
      operationId: searchAutocomplete
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example file.meta)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand9'
      responses:
        '200':
          description: Results
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsSearchSimpleResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/search/entities:
    get:
      tags:
      - Search
      - Entity
      summary: searchEntities
      description: Alternatively, POST request is also supported
      operationId: searchEntities
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example file.meta)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand9'
      responses:
        '200':
          description: Results
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsSearchEntitiesResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/search/files:
    get:
      tags:
      - Search
      - File
      summary: searchFiles
      description: Alternatively, POST request is also supported
      operationId: searchFiles
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example file.meta)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand9'
      responses:
        '200':
          description: Results
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsSearchFilesResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/search/folders:
    get:
      tags:
      - Search
      - Folder
      summary: searchFolders
      description: Alternatively, POST request is also supported
      operationId: searchFolders
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained (for example file.meta)
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand9'
      responses:
        '200':
          description: Results
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V2AccountsSearchFoldersResponse'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404-notFound1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/search/extensions:
    get:
      tags:
      - Search
      summary: getUsedFileExtensions
      description: ''
      operationId: getUsedFileExtensions
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      responses:
        '200':
          description: Extensions in use on an account
          headers: {}
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/audit/accountLog:
    get:
      tags:
      - Audit
      - Account
      summary: getAccountRecentAuditTrail
      description: ''
      operationId: getAccountRecentAuditTrail
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: sort
        in: query
        description: 'Default sort: `-id`. If request body contains `id` or `uid` parameter then the default sort is `id`'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/sort'
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained using a dot.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand10'
          examples:
          - - activeUser
      responses:
        '200':
          description: Audit Trail entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  oneOf:
                  - $ref: '#/components/schemas/Fileentries1'
                  - $ref: '#/components/schemas/Folderentries'
                  - $ref: '#/components/schemas/Accountentries'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/audit:
    get:
      tags:
      - Audit
      summary: getAccountAuditTrail
      description: ''
      operationId: getAccountAuditTrail
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: sort
        in: query
        description: Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - name
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      - name: expand
        in: query
        description: Include related information (comma-separated). Can be chained using a dot.
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/expand10'
          examples:
          - - activeUser
      responses:
        '200':
          description: Audit Trail entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Accountentries'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/files/{fileUid}/audit:
    get:
      tags:
      - Audit
      - File
      summary: getFileAuditTrail
      description: ''
      operationId: getFileAuditTrail
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: fileUid
        in: path
        description: File UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: sort
        in: query
        description: Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - name
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Audit Trail entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fileentries1'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/folders/{folderUid}/audit:
    get:
      tags:
      - Audit
      - Folder
      summary: getFolderAuditTrail
      description: ''
      operationId: getFolderAuditTrail
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: folderUid
        in: path
        description: Folder UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: sort
        in: query
        description: Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - name
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Audit Trail entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folderentries'
                description: ''
                contentMediaType: application/json
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
  /v2/accounts/{accountUid}/audit/syncLog:
    get:
      tags:
      - Audit
      - Account
      summary: getFileSyncLog
      description: ''
      operationId: getFileSyncLog
      parameters:
      - name: accountUid
        in: path
        description: Account UID
        required: true
        style: simple
        schema:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
      - name: page
        in: query
        description: Pagination page
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          contentEncoding: int32
          examples:
          - 1
      - name: per-page
        in: query
        description: Pagination page size
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          contentEncoding: int32
          default: 500
          examples:
          - 10
      - name: sort
        in: query
        description: 'Default sort: `-id`. If request body contains `id` or `uid` parameter then the default sort is `id`'
        style: form
        explode: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/sort'
      - name: fields
        in: query
        description: Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
          examples:
          - - uid
            - name
      responses:
        '200':
          description: Audit Trail entries
          headers:
            X-Pagination-Total-Count:
              description: Total number of matches
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of matches
                    contentEncoding: int32
                    examples:
                    - 10
                    contentMediaType: text/plain
                  example: 10
            X-Pagination-Page-Count:
              description: Total number of pages
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Total number of pages
                    contentEncoding: int32
                    examples:
                    - 3
                    contentMediaType: text/plain
                  example: 3
            X-Pagination-Current-Page:
              description: Current page number
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Current page number
                    contentEncoding: int32
                    examples:
                    - 1
                    contentMediaType: text/plain
                  example: 1
            X-Pagination-Per-Page:
              description: Items per page
              content:
                text/plain:
                  schema:
                    type: integer
                    description: Items per page
                    contentEncoding: int32
                    examples:
                    - 20
                    contentMediaType: text/plain
                  example: 20
            Link:
              description: Links for paging through records
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    description: Links for paging through records
                    contentMediaType: application/json
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fileentries'
                description: ''
                contentMediaType: application/json
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400-badRequest1'
        '403':
          description: Forbidden
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403-forbidden1'
        '401':
          description: Unauthorized
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401-unauthorized1'
      deprecated: false
    parameters: []
components:
  schemas:
    Userprovider:
      title: Userprovider
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        providerId:
          type: string
          examples:
          - google
        providerValue:
          type: string
          examples:
          - johnSmith@gmail.com
        providerName:
          type: string
          readOnly: true
          examples:
          - John Smith
    User:
      title: User
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
        email:
          maxLength: 255
          type: string
          readOnly: true
          examples:
          - someEmail@foo.bar
        locale:
          maxLength: 16
          type: string
          examples:
          - en-GB
        planId:
          type: integer
          contentEncoding: int32
          examples:
          - 10
        companyName:
          maxLength: 255
          type: string
          examples:
          - My company name
        phone:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - +123 456 7890
        address:
          maxLength: 255
          type: string
          examples:
          - Street name 10
        zip:
          maxLength: 255
          type: string
          examples:
          - '12345'
        city:
          maxLength: 255
          type: string
          examples:
          - City name
        state:
          maxLength: 255
          type: string
          examples:
          - State name
        countryCode:
          maxLength: 2
          type: string
        taxNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - EE123456789
        registerNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - '12345678'
        title:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Mr.
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
        userType:
          $ref: '#/components/schemas/UserType'
        defaultAccountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        timezone:
          type: string
          examples:
          - Europe/London
          - Europe/Tallinn
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Userprovider'
          description: ''
          readOnly: true
    Userwithexpandfields:
      title: Userwithexpandfields
      type: object
      properties:
        dateFormat:
          type: string
        timeFormat:
          type: string
    Userwithexpandedfields:
      title: Userwithexpandedfields
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
        email:
          maxLength: 255
          type: string
          readOnly: true
          examples:
          - someEmail@foo.bar
        locale:
          maxLength: 16
          type: string
          examples:
          - en-GB
        planId:
          type: integer
          contentEncoding: int32
          examples:
          - 10
        companyName:
          maxLength: 255
          type: string
          examples:
          - My company name
        phone:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - +123 456 7890
        address:
          maxLength: 255
          type: string
          examples:
          - Street name 10
        zip:
          maxLength: 255
          type: string
          examples:
          - '12345'
        city:
          maxLength: 255
          type: string
          examples:
          - City name
        state:
          maxLength: 255
          type: string
          examples:
          - State name
        countryCode:
          maxLength: 2
          type: string
        taxNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - EE123456789
        registerNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - '12345678'
        title:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Mr.
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
        userType:
          $ref: '#/components/schemas/UserType'
        defaultAccountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        timezone:
          type: string
          examples:
          - Europe/London
          - Europe/Tallinn
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Userprovider'
          description: ''
          readOnly: true
        dateFormat:
          type: string
        timeFormat:
          type: string
    Private:
      title: Private
      required:
      - userType
      type: object
      properties:
        userType:
          $ref: '#/components/schemas/UserType'
        address:
          maxLength: 255
          type: string
          examples:
          - Street name 10
        zip:
          maxLength: 255
          type: string
          examples:
          - '12345'
        city:
          maxLength: 255
          type: string
          examples:
          - City name
        state:
          maxLength: 255
          type: string
          examples:
          - State name
        countryCode:
          maxLength: 2
          type: string
        name:
          maxLength: 255
          type: string
    userBillingBase:
      title: userBillingBase
      required:
      - userType
      type: object
      properties:
        userType:
          $ref: '#/components/schemas/UserType'
        address:
          maxLength: 255
          type: string
          examples:
          - Street name 10
        zip:
          maxLength: 255
          type: string
          examples:
          - '12345'
        city:
          maxLength: 255
          type: string
          examples:
          - City name
        state:
          maxLength: 255
          type: string
          examples:
          - State name
        countryCode:
          maxLength: 2
          type: string
    Company:
      title: Company
      required:
      - userType
      type: object
      properties:
        userType:
          $ref: '#/components/schemas/UserType'
        address:
          maxLength: 255
          type: string
          examples:
          - Street name 10
        zip:
          maxLength: 255
          type: string
          examples:
          - '12345'
        city:
          maxLength: 255
          type: string
          examples:
          - City name
        state:
          maxLength: 255
          type: string
          examples:
          - State name
        countryCode:
          maxLength: 2
          type: string
        name:
          maxLength: 255
          type:
          - string
          - 'null'
        companyName:
          maxLength: 255
          type: string
          examples:
          - My company name
        taxNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - EE123456789
        registerNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - '12345678'
    Usersignup:
      title: Usersignup
      required:
      - email
      - countryCode
      type: object
      properties:
        email:
          maxLength: 255
          type: string
          examples:
          - someEmail@foo.bar
        companyName:
          maxLength: 255
          type: string
          examples:
          - My company name
        phone:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - +123 456 7890
        address:
          maxLength: 255
          type: string
          examples:
          - Street name 10
        zip:
          maxLength: 255
          type: string
          examples:
          - '12345'
        city:
          maxLength: 255
          type: string
          examples:
          - City name
        state:
          maxLength: 255
          type: string
          examples:
          - State name
        countryCode:
          maxLength: 2
          type: string
        taxNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - EE123456789
        registerNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - '12345678'
        title:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Mr.
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
        planId:
          type: integer
          contentEncoding: int32
          examples:
          - 10
        locale:
          maxLength: 16
          type: string
          examples:
          - en-GB
        timezone:
          type: string
          examples:
          - Europe/London
          - Europe/Tallinn
        defaultAccountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        options:
          type: array
          items:
            $ref: '#/components/schemas/Genericaction'
          description: ''
    newUserSignup:
      title: newUserSignup
      required:
      - email
      - companyName
      - countryCode
      type: object
      properties:
        email:
          maxLength: 255
          type: string
          examples:
          - someEmail@foo.bar
        companyName:
          maxLength: 255
          type: string
          examples:
          - My company name
        phone:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - +123 456 7890
        address:
          maxLength: 255
          type: string
          examples:
          - Street name 10
        zip:
          maxLength: 255
          type: string
          examples:
          - '12345'
        city:
          maxLength: 255
          type: string
          examples:
          - City name
        state:
          maxLength: 255
          type: string
          examples:
          - State name
        countryCode:
          maxLength: 2
          type: string
        taxNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - EE123456789
        registerNo:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - '12345678'
        title:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Mr.
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
        planId:
          type: integer
          contentEncoding: int32
          examples:
          - 10
        locale:
          maxLength: 16
          type: string
          examples:
          - en-GB
        timezone:
          type: string
          examples:
          - Europe/London
          - Europe/Tallinn
        defaultAccountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        options:
          type: array
          items:
            $ref: '#/components/schemas/Genericaction'
          description: ''
    Otheruser:
      title: Otheruser
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: User UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          description: User name
        email:
          maxLength: 255
          type: string
          description: User email
          readOnly: true
          examples:
          - someEmail@foo.bar
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
    Teamuser:
      title: Teamuser
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
        email:
          maxLength: 255
          type: string
          readOnly: true
          examples:
          - someEmail@foo.bar
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
    Group:
      title: Group
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          examples:
          - My group
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/group_properties-permissions'
    shareRole:
      title: shareRole
      enum:
      - READ
      - EDIT
      - PREVIEW
      - CUSTOM
      type: string
    Sharesettings:
      title: Sharesettings
      type: object
      properties:
        isRecursive:
          type: boolean
          description: Apply these settings to entities below current target level
          examples:
          - true
        accountRead:
          type: boolean
          description: View account-related data (groups, meta, ...)
          examples:
          - false
        accountDownload:
          type: boolean
          description: Download whole account contents at once
          examples:
          - false
        accountUpdate:
          type: boolean
          description: Update account settings, groups, ...
          examples:
          - false
        accountShare:
          type: boolean
          description: Share account to other users
          examples:
          - false
        accountAudit:
          type: boolean
          description: View account audit data
          examples:
          - false
        accountGroups:
          type: boolean
          description: Manage groups
          examples:
          - false
        accountUsers:
          type: boolean
          description: Manage users
          examples:
          - false
        accountMeta:
          type: boolean
          description: Manage meta
          examples:
          - false
        accountRecycleBin:
          type: boolean
          description: Manage recycle bin
          examples:
          - false
        accountNumbering:
          type: boolean
          description: Manage numbering
          examples:
          - false
        accountIdp:
          type: boolean
          description: Manage IdP
          examples:
          - false
        accountPasswordPolicy:
          type: boolean
          description: Manage password policy
          examples:
          - false
        folderCreate:
          type: boolean
          description: Create a new folder
          examples:
          - false
        folderRead:
          type: boolean
          description: List folders in a folder
          examples:
          - true
        folderDownload:
          type: boolean
          description: Download a folder
          examples:
          - true
        folderUpdate:
          type: boolean
          description: Update folder data
          examples:
          - false
        folderMove:
          type: boolean
          description: Move folder to new location (requires folderCreate permission at new location)
          examples:
          - false
        folderDelete:
          type: boolean
          description: Delete a folder
          examples:
          - false
        folderDuplicate:
          type: boolean
          description: Duplicate folder (requires folderCreate permission at target)
          examples:
          - false
        folderShare:
          type: boolean
          description: Share a folder
          examples:
          - false
        folderPublicShare:
          type: boolean
          description: Create a public link for a folder (requires folderShare permission)
          examples:
          - false
        folderAudit:
          type: boolean
          description: View folder audit trail
          examples:
          - true
        fileCreate:
          type: boolean
          description: Add a file
          examples:
          - true
        fileRead:
          type: boolean
          description: List files in a folder
          examples:
          - true
        filePreview:
          type: boolean
          description: View preview of a file
          examples:
          - true
        fileDownload:
          type: boolean
          description: Download a file
          examples:
          - true
        fileUpdate:
          type: boolean
          description: Update name, meta, ... of a file
          examples:
          - false
        fileUpdateContent:
          type: boolean
          description: Manage file versions
          examples:
          - false
        fileMove:
          type: boolean
          description: Move file to new location (requires fileCreate permission at new location)
          examples:
          - false
        fileDelete:
          type: boolean
          description: Delete a file
          examples:
          - false
        fileDuplicate:
          type: boolean
          description: Duplicate file (requires fileCreate permission at target)
          examples:
          - false
        fileShare:
          type: boolean
          description: Share a file
          examples:
          - false
        filePublicShare:
          type: boolean
          description: Create a public link for a file (requires folderShare permission)
          examples:
          - false
        fileAudit:
          type: boolean
          description: View file audit trail
          examples:
          - true
    Share:
      title: Share
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: UID of shared item, be it account, entity (file, folder, ...), tag...
          readOnly: true
          examples:
          - Abc_123-XY
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        public:
          type: boolean
          readOnly: true
        link:
          type:
          - string
          - 'null'
          description: URL to shared entity, null if not a public share
          readOnly: true
        role:
          $ref: '#/components/schemas/shareRole'
        status:
          $ref: '#/components/schemas/Status'
        group:
          type:
          - string
          - 'null'
          description: null, if not a group share
          readOnly: true
          examples:
          - My group
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        email:
          maxLength: 255
          type:
          - string
          - 'null'
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        settings:
          $ref: '#/components/schemas/Sharesettings'
    Groupwithexpandedfields:
      title: Groupwithexpandedfields
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/Otheruser'
          description: ''
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: ''
        shares:
          type: array
          items:
            $ref: '#/components/schemas/Share'
          description: ''
    Groupwithexpandedfields2:
      title: Groupwithexpandedfields2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          examples:
          - My group
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/group_properties-permissions'
        users:
          type: array
          items:
            $ref: '#/components/schemas/Otheruser'
          description: ''
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
          description: ''
        shares:
          type: array
          items:
            $ref: '#/components/schemas/Share'
          description: ''
    Teamuserwithexpandedfields:
      title: Teamuserwithexpandedfields
      type: object
      properties:
        remoteUsername:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - someEmail@foo.bar
        status:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Status1'
          - {}
        groups:
          type: array
          items:
            $ref: '#/components/schemas/groupDefaultOrExpanded'
          description: ''
        position:
          maxLength: 250
          type:
          - string
          - 'null'
    Teamuserwithexpandedfields2:
      title: Teamuserwithexpandedfields2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
        email:
          maxLength: 255
          type: string
          readOnly: true
          examples:
          - someEmail@foo.bar
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
        remoteUsername:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - someEmail@foo.bar
        status:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Status1'
          - {}
        groups:
          type: array
          items:
            $ref: '#/components/schemas/groupDefaultOrExpanded'
          description: ''
        position:
          maxLength: 250
          type:
          - string
          - 'null'
    Account:
      title: Account
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - Account name
        owner:
          $ref: '#/components/schemas/Otheruser'
        canGetSections:
          type: boolean
        inboxFolderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        inboxEmailName:
          type:
          - string
          - 'null'
        teamFolderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        indexing:
          type: boolean
          examples:
          - true
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        language:
          type: string
          description: OCR language
          examples:
          - eng
        permissions:
          $ref: '#/components/schemas/permissions'
    accountShare:
      title: accountShare
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: UID of shared item, be it account, entity (file, folder, ...), tag...
          readOnly: true
          examples:
          - Abc_123-XY
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        public:
          type: boolean
          readOnly: true
        link:
          type:
          - string
          - 'null'
          description: URL to shared entity, null if not a public share
          readOnly: true
        role:
          $ref: '#/components/schemas/shareRole'
        status:
          $ref: '#/components/schemas/Status'
        group:
          type:
          - string
          - 'null'
          description: null, if not a group share
          readOnly: true
          examples:
          - My group
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        email:
          maxLength: 255
          type:
          - string
          - 'null'
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
    Accountstats:
      title: Accountstats
      type: object
      properties:
        folders:
          minimum: 0
          type:
          - integer
          - 'null'
          contentEncoding: int32
        files:
          minimum: 0
          type:
          - integer
          - 'null'
          contentEncoding: int32
        size:
          minimum: 0
          type:
          - integer
          - 'null'
          contentEncoding: int32
        collaboratorCount:
          minimum: 5
          type:
          - integer
          - 'null'
          contentEncoding: int32
        time:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    Accountwithexpandedfields:
      title: Accountwithexpandedfields
      type: object
      properties:
        shares:
          type: array
          items:
            $ref: '#/components/schemas/accountShare'
          description: ''
        stats:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Accountstats'
          - {}
    Accountwithexpandedfields2:
      title: Accountwithexpandedfields2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - Account name
        owner:
          $ref: '#/components/schemas/Otheruser'
        canGetSections:
          type: boolean
        inboxFolderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        inboxEmailName:
          type:
          - string
          - 'null'
        teamFolderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        indexing:
          type: boolean
          examples:
          - true
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        language:
          type: string
          description: OCR language
          examples:
          - eng
        permissions:
          $ref: '#/components/schemas/permissions'
        shares:
          type: array
          items:
            $ref: '#/components/schemas/accountShare'
          description: ''
        stats:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Accountstats'
          - {}
    Partiallysharedaccount:
      title: Partiallysharedaccount
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - Account name
        owner:
          $ref: '#/components/schemas/Otheruser'
        canGetSections:
          type: boolean
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    permissions:
      title: permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
        canDownload:
          type: boolean
          examples:
          - true
        canCreateGroup:
          type: boolean
          examples:
          - true
        canCreateMeta:
          type: boolean
          examples:
          - true
        canCreateSection:
          type: boolean
          examples:
          - true
        canAudit:
          type: boolean
          examples:
          - true
        canShareCustomPermissions:
          type: boolean
          examples:
          - true
        canManageGroups:
          type: boolean
          examples:
          - true
        canManageUsers:
          type: boolean
          examples:
          - true
        canManageMeta:
          type: boolean
          examples:
          - true
        canManageRecycleBin:
          type: boolean
          examples:
          - true
        canManageNumbering:
          type: boolean
          examples:
          - true
        canManageIdp:
          type: boolean
          examples:
          - true
        canManagePasswordPolicy:
          type: boolean
          examples:
          - true
    AccountUser:
      title: AccountUser
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          readOnly: true
        email:
          maxLength: 255
          type: string
          readOnly: true
          examples:
          - someEmail@foo.bar
        position:
          maxLength: 250
          type:
          - string
          - 'null'
        teamUser:
          type: boolean
          readOnly: true
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    AccountUserwithexpandedfields:
      title: AccountUserwithexpandedfields
      type: object
      properties:
        teamUserStatus:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Status1'
          - {}
    AccountUserwithexpandedfields2:
      title: AccountUserwithexpandedfields2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          readOnly: true
        email:
          maxLength: 255
          type: string
          readOnly: true
          examples:
          - someEmail@foo.bar
        position:
          maxLength: 250
          type:
          - string
          - 'null'
        teamUser:
          type: boolean
          readOnly: true
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        teamUserStatus:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Status1'
          - {}
    fileShare:
      title: fileShare
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: UID of shared item, be it account, entity (file, folder, ...), tag...
          readOnly: true
          examples:
          - Abc_123-XY
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        public:
          type: boolean
          readOnly: true
        link:
          type:
          - string
          - 'null'
          description: URL to shared entity, null if not a public share
          readOnly: true
        role:
          $ref: '#/components/schemas/shareRole'
        status:
          $ref: '#/components/schemas/Status'
        group:
          type:
          - string
          - 'null'
          description: null, if not a group share
          readOnly: true
          examples:
          - My group
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        email:
          maxLength: 255
          type:
          - string
          - 'null'
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
    folderShareRole:
      title: folderShareRole
      enum:
      - READ
      - EDIT
      - PREVIEW
      - UPLOAD
      - CUSTOM
      type: string
    folderShare:
      title: folderShare
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: UID of shared item, be it account, entity (file, folder, ...), tag...
          readOnly: true
          examples:
          - Abc_123-XY
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        public:
          type: boolean
          readOnly: true
        link:
          type:
          - string
          - 'null'
          description: URL to shared entity, null if not a public share
          readOnly: true
        role:
          $ref: '#/components/schemas/shareRole'
        status:
          $ref: '#/components/schemas/Status'
        group:
          type:
          - string
          - 'null'
          description: null, if not a group share
          readOnly: true
          examples:
          - My group
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        email:
          maxLength: 255
          type:
          - string
          - 'null'
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
    tagShare:
      title: tagShare
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: UID of shared item, be it account, entity (file, folder, ...), tag...
          readOnly: true
          examples:
          - Abc_123-XY
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        public:
          type: boolean
          readOnly: true
        link:
          type:
          - string
          - 'null'
          description: URL to shared entity, null if not a public share
          readOnly: true
        role:
          $ref: '#/components/schemas/shareRole'
        status:
          $ref: '#/components/schemas/Status'
        group:
          type:
          - string
          - 'null'
          description: null, if not a group share
          readOnly: true
          examples:
          - My group
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        email:
          maxLength: 255
          type:
          - string
          - 'null'
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        tagUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
    index-root:
      title: index-root
      type: object
      properties:
        entities:
          minItems: 1
          type: array
          items:
            pattern: '[a-zA-Z0-9_-]{10}'
            type: string
          description: ''
    source:
      title: source
      enum:
      - createdAt
      - updatedAt
      - date
      - dueDate
      - approvedAt
      - signedAt
      - acknowledgedAt
      - reviewedAt
      - meta:<uid>
      type: string
      description: Source field for generating the end time
    Entity:
      title: Entity
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        type:
          $ref: '#/components/schemas/type'
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        deletedAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        purgeTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        retentionEnd:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retentionEnd'
          - description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
        retentionIsCustom:
          type: boolean
          description: Indicates whether the retentionEnd is overridden from the default
          readOnly: true
        retention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retention'
          - description: Recycle/Permanently delete/Archive items after x time, counting from the time uploaded
        activeRetention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/activeRetention'
          - {}
          readOnly: true
    AttributeColumn:
      title: AttributeColumn
      type: object
      properties:
        field:
          $ref: '#/components/schemas/Field'
    retention:
      title: retention
      required:
      - time
      - action
      - isRecursive
      type: object
      properties:
        time:
          maxLength: 30
          type: string
          description: "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention"
          examples:
          - 1m5d
        action:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/action'
          - {}
        isRecursive:
          type:
          - boolean
          - 'null'
        target:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Archival target
          examples:
          - Abc_123-XY
        keepStructure:
          type: boolean
          description: Keep folder structure on archiving with isRecursive active
        source:
          allOf:
          - $ref: '#/components/schemas/source'
          - description: Source field for generating the end time
      description: Recycle/Permanently delete/Archive items after x time, counting from the time uploaded
    activeRetention:
      title: activeRetention
      required:
      - time
      - action
      - entityUid
      - isRecursive
      type: object
      properties:
        time:
          maxLength: 30
          type: string
          description: "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention"
          examples:
          - 1m5d
        action:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/action'
          - {}
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: UID of an entity from where the retention originates from
          examples:
          - Abc_123-XY
        isRecursive:
          type:
          - boolean
          - 'null'
        source:
          allOf:
          - $ref: '#/components/schemas/source'
          - description: Source field for generating the end time
        target:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        keepStructure:
          type: boolean
          description: Keep folder structure on archiving with isRecursive active
    Mail-inaddress:
      title: Mail-inaddress
      type: object
      properties:
        address:
          type: string
          readOnly: true
          examples:
          - some-random-address@folderit.com
        active:
          type: boolean
    Folder:
      title: Folder
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My folder name
        visibleColumns:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/folderColumn'
          description: Array of columns to be shown by the client
        size:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        language:
          type: string
          description: OCR language
          examples:
          - eng
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        deletedAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        purgeTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        retention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retention'
          - description: Recycle/Permanently delete/Archive items after x time, counting from the time uploaded
        activeRetention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/activeRetention'
          - {}
          readOnly: true
        mailInAddress:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Mail-inaddress'
          - {}
        permissions:
          $ref: '#/components/schemas/folder_properties-permissions'
    MetaBase:
      title: MetaBase
      required:
      - type
      type: object
      properties:
        type:
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Stringmeta:
      title: Stringmeta
      required:
      - type
      type: object
      properties:
        type:
          const: string
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entitystringmeta:
      title: Entitystringmeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Stringmeta'
        value:
          maxLength: 512
          minLength: 1
          type: string
          examples:
          - meta value
    Textmeta:
      title: Textmeta
      required:
      - type
      type: object
      properties:
        type:
          const: text
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entitytextmeta:
      title: Entitytextmeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Textmeta'
        value:
          minLength: 1
          type: string
          examples:
          - meta value
    Integermeta:
      title: Integermeta
      required:
      - type
      type: object
      properties:
        type:
          const: integer
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entityintegermeta:
      title: Entityintegermeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Integermeta'
        value:
          type: integer
          contentEncoding: int64
          examples:
          - 42
    Integermeta1:
      title: Integermeta1
      required:
      - type
      type: object
      properties:
        type:
          const: float
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        decimalScale:
          maximum: 18
          minimum: 1
          type: integer
          contentEncoding: int32
    Entitydecimalmeta:
      title: Entitydecimalmeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Integermeta1'
        value:
          type: string
          examples:
          - '42.50'
        scale:
          maximum: 18
          minimum: 1
          type: integer
          contentEncoding: int32
    Datemeta:
      title: Datemeta
      required:
      - type
      type: object
      properties:
        type:
          const: date
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entitydatemeta:
      title: Entitydatemeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Datemeta'
        value:
          type: string
          contentEncoding: date
    Datetimemeta:
      title: Datetimemeta
      required:
      - type
      type: object
      properties:
        type:
          const: datetime
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entitydatetimemeta:
      title: Entitydatetimemeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Datetimemeta'
        value:
          type: string
          contentEncoding: date-time
    Timemeta:
      title: Timemeta
      required:
      - type
      type: object
      properties:
        type:
          const: time
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entitytimemeta:
      title: Entitytimemeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Timemeta'
        value:
          type: string
          examples:
          - 17:32:28
    Booleanmeta:
      title: Booleanmeta
      required:
      - type
      type: object
      properties:
        type:
          const: boolean
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          description: Boolean meta does not support setting this property to `true`
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entitybooleanmeta:
      title: Entitybooleanmeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Booleanmeta'
        value:
          type: boolean
    URLmeta:
      title: URLmeta
      required:
      - type
      type: object
      properties:
        type:
          const: url
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    EntityURLmeta:
      title: EntityURLmeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/URLmeta'
        value:
          type: string
    Emailmeta:
      title: Emailmeta
      required:
      - type
      type: object
      properties:
        type:
          const: email
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Entityemailmeta:
      title: Entityemailmeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Emailmeta'
        value:
          type: string
    MetaSelectOption:
      title: MetaSelectOption
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        value:
          maxLength: 255
          type: string
          examples:
          - meta name
        order:
          maximum: 65535
          minimum: 0
          type: integer
          contentEncoding: int32
          examples:
          - 1
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        isUsed:
          type: boolean
    Selectmeta:
      title: Selectmeta
      required:
      - type
      type: object
      properties:
        type:
          const: select
          type: string
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        multiple:
          type: boolean
          examples:
          - false
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        options:
          type: array
          items:
            $ref: '#/components/schemas/MetaSelectOption'
          description: Options list
    Entityselectmeta:
      title: Entityselectmeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        meta:
          $ref: '#/components/schemas/Selectmeta'
        value:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Option UID
          examples:
          - Abc_123-XY
    Entity1:
      title: Entity1
      type: object
      properties:
        number:
          maxLength: 255
          type:
          - string
          - 'null'
        numberingSchemeUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        mailSender:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        mailSenderName:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        mailContent:
          maxLength: 65535
          type:
          - string
          - 'null'
          readOnly: true
        mailSubject:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        note:
          maxLength: 65535
          type:
          - string
          - 'null'
        date:
          type:
          - string
          - 'null'
          contentEncoding: date
        dueDate:
          type:
          - string
          - 'null'
          contentEncoding: date
    FolderStats:
      title: FolderStats
      type: object
      properties:
        folders:
          minimum: 0
          type: integer
          contentEncoding: int32
          examples:
          - 1
        files:
          minimum: 0
          type: integer
          contentEncoding: int32
          examples:
          - 1
        missingMeta:
          minimum: 0
          type: integer
          contentEncoding: int32
          examples:
          - 1
        size:
          minimum: 0
          type: integer
          contentEncoding: int32
          examples:
          - 3
        time:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    Folderwithexpandedfields2:
      title: Folderwithexpandedfields2
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        parent:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Folder'
          - deprecated: true
        meta:
          type: array
          items:
            $ref: '#/components/schemas/entityMeta'
          description: ''
        shares:
          type: array
          items:
            $ref: '#/components/schemas/folderShare'
          description: ''
        extra:
          $ref: '#/components/schemas/Entity1'
        sectionOrder:
          maximum: 32767
          minimum: -32768
          type:
          - integer
          - 'null'
          description: User-configurable value for manually ordering sections
          contentEncoding: int32
        inboxFolder:
          type: boolean
        teamFolder:
          type: boolean
        folderStats:
          $ref: '#/components/schemas/FolderStats'
        visibleColumnsWithMeta:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/folderColumnWithMeta'
          description: Array of columns to be shown by the client
        sort:
          type: string
          description: Column names, prefixed with a dash (`-`) for descending order, separated with a comma
          examples:
          - name
          - -meta:metaUID
          - meta:metaUID,-date,-size
        viewType:
          allOf:
          - $ref: '#/components/schemas/viewType'
          - description: View type of a folder listing
    Folderwithexpandedfields:
      title: Folderwithexpandedfields
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My folder name
        visibleColumns:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/folderColumn'
          description: Array of columns to be shown by the client
        size:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        language:
          type: string
          description: OCR language
          examples:
          - eng
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        deletedAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        purgeTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        retention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retention'
          - description: Recycle/Permanently delete/Archive items after x time, counting from the time uploaded
        activeRetention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/activeRetention'
          - {}
          readOnly: true
        mailInAddress:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Mail-inaddress'
          - {}
        permissions:
          $ref: '#/components/schemas/folder_properties-permissions'
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        parent:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Folder'
          - deprecated: true
        meta:
          type: array
          items:
            $ref: '#/components/schemas/entityMeta'
          description: ''
        shares:
          type: array
          items:
            $ref: '#/components/schemas/folderShare'
          description: ''
        extra:
          $ref: '#/components/schemas/Entity1'
        sectionOrder:
          maximum: 32767
          minimum: -32768
          type:
          - integer
          - 'null'
          description: User-configurable value for manually ordering sections
          contentEncoding: int32
        inboxFolder:
          type: boolean
        teamFolder:
          type: boolean
        folderStats:
          $ref: '#/components/schemas/FolderStats'
        visibleColumnsWithMeta:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/folderColumnWithMeta'
          description: Array of columns to be shown by the client
        sort:
          type: string
          description: Column names, prefixed with a dash (`-`) for descending order, separated with a comma
          examples:
          - name
          - -meta:metaUID
          - meta:metaUID,-date,-size
        viewType:
          allOf:
          - $ref: '#/components/schemas/viewType'
          - description: View type of a folder listing
    type:
      title: type
      enum:
      - folder
      - file
      - link
      type: string
    retentionEnd:
      title: retentionEnd
      required:
      - end
      - action
      type: object
      properties:
        end:
          type:
          - integer
          - 'null'
          description: null value for both end and action results in forced infinite retention
          contentEncoding: int32
          examples:
          - 1537177837
        action:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/action'
          - {}
        target:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Archival target
          examples:
          - Abc_123-XY
        source:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/source'
          - description: Indicates the source field for generating the end time
          readOnly: true
      description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
    File:
      title: File
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        type:
          $ref: '#/components/schemas/type'
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        extension:
          type: string
          readOnly: true
          examples:
          - txt
        mimeType:
          type: string
          readOnly: true
          examples:
          - text/plain
        size:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        number:
          maxLength: 255
          type:
          - string
          - 'null'
        versionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        numberingSchemeUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        date:
          type:
          - string
          - 'null'
          contentEncoding: date
        dueDate:
          type:
          - string
          - 'null'
          contentEncoding: date
        note:
          maxLength: 65535
          type:
          - string
          - 'null'
        isLocked:
          type: boolean
          description: A file could be locked without specific user, in that case the lockedBy attribute will stay null
          readOnly: true
        lockId:
          maxLength: 2048
          type:
          - string
          - 'null'
        lockedBy:
          type:
          - string
          - 'null'
        lockTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        isSentByMail:
          type: boolean
          readOnly: true
        mailSender:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        mailSenderName:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        mailContent:
          maxLength: 65535
          type:
          - string
          - 'null'
          readOnly: true
        mailSubject:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        previewAvailable:
          type: boolean
          description: Indicates whether preview is available for the current version
        hash:
          allOf:
          - $ref: '#/components/schemas/hash'
          - {}
          readOnly: true
        deletedAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        purgeTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        retentionEnd:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retentionEnd'
          - description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
        retentionIsCustom:
          type: boolean
          description: Indicates whether the retentionEnd is overridden from the default
          readOnly: true
        language:
          type: string
          description: OCR language
          examples:
          - eng
        approvalStatus:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/ApprovalStatus'
          - {}
        permissions:
          $ref: '#/components/schemas/properties-permissions'
        supports:
          $ref: '#/components/schemas/Supports'
    Tag:
      title: Tag
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - myTag
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Person:
      title: Person
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - Johnny Smith
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
    Reminder1:
      title: Reminder1
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        remindAt:
          type: string
          description: Unix timestamp
          examples:
          - '1537177837'
        content:
          maxLength: 65535
          type: string
          examples:
          - Hello
        type:
          $ref: '#/components/schemas/type'
        recurrence:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Recurrence'
          - {}
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    reminder:
      title: reminder
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        remindAt:
          type: string
          description: Unix timestamp
          examples:
          - '1537177837'
        content:
          maxLength: 65535
          type: string
          examples:
          - Hello
        type:
          $ref: '#/components/schemas/type'
        recurrence:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Recurrence'
          - {}
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        groupUid:
          type:
          - string
          - 'null'
          description: Group UID
          examples:
          - Abc_123-XY
        email:
          maxLength: 255
          type: string
          description: Email
          readOnly: true
          examples:
          - someEmail@foo.bar
    Relateditem:
      title: Relateditem
      required:
      - fileUid
      - entityUid
      - user
      - createdAt
      - type
      type: object
      properties:
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        user:
          $ref: '#/components/schemas/Otheruser'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        type:
          $ref: '#/components/schemas/type'
    hash:
      title: hash
      type: object
      properties:
        md5:
          type: string
          examples:
          - d571828bd7c88787c98cf0112f8cc7f1
        sha256:
          type: string
          examples:
          - 8a9f51d294e88ee1c600452542397cdac4c1064972e000c198e83e9a5052f488
    Fileversion:
      title: Fileversion
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        filename:
          type: string
          readOnly: true
          examples:
          - sample.txt
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        mimeType:
          type: string
          readOnly: true
          examples:
          - text/plain
        previewAvailable:
          type: boolean
          description: Indicates whether preview is available for the version
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        hash:
          allOf:
          - $ref: '#/components/schemas/hash'
          - {}
          readOnly: true
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        size:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
    Filethumbnails:
      title: Filethumbnails
      type: object
      properties:
        avif_128:
          type: string
        avif_400:
          type: string
        jpg_128:
          type: string
        jpg_400:
          type: string
    Fileversionwithexpandedfields2:
      title: Fileversionwithexpandedfields2
      type: object
      properties:
        isActive:
          type: boolean
          description: Indicates if the version is active for the file
        thumbnails:
          $ref: '#/components/schemas/Filethumbnails'
    Fileversionwithexpandedfields:
      title: Fileversionwithexpandedfields
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        filename:
          type: string
          readOnly: true
          examples:
          - sample.txt
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        mimeType:
          type: string
          readOnly: true
          examples:
          - text/plain
        previewAvailable:
          type: boolean
          description: Indicates whether preview is available for the version
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        hash:
          allOf:
          - $ref: '#/components/schemas/hash'
          - {}
          readOnly: true
        approvalStatus:
          $ref: '#/components/schemas/ApprovalStatus'
        size:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        isActive:
          type: boolean
          description: Indicates if the version is active for the file
        thumbnails:
          $ref: '#/components/schemas/Filethumbnails'
    Filewithexpandedfields2:
      title: Filewithexpandedfields2
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: ''
        people:
          type: array
          items:
            $ref: '#/components/schemas/Person'
          description: ''
        meta:
          type: array
          items:
            $ref: '#/components/schemas/entityMeta'
          description: ''
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/reminder'
          description: ''
        parent:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Folder'
          - deprecated: true
        shares:
          type: array
          items:
            $ref: '#/components/schemas/fileShare'
          description: ''
        fileRelations:
          type: array
          items:
            $ref: '#/components/schemas/Relateditem'
          description: ''
        version:
          allOf:
          - $ref: '#/components/schemas/fileVersionDefaultOrExpanded'
          - {}
        thumbnails:
          $ref: '#/components/schemas/Filethumbnails'
    Filewithexpandedfields:
      title: Filewithexpandedfields
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        type:
          $ref: '#/components/schemas/type'
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        extension:
          type: string
          readOnly: true
          examples:
          - txt
        mimeType:
          type: string
          readOnly: true
          examples:
          - text/plain
        size:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        number:
          maxLength: 255
          type:
          - string
          - 'null'
        versionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        numberingSchemeUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        date:
          type:
          - string
          - 'null'
          contentEncoding: date
        dueDate:
          type:
          - string
          - 'null'
          contentEncoding: date
        note:
          maxLength: 65535
          type:
          - string
          - 'null'
        isLocked:
          type: boolean
          description: A file could be locked without specific user, in that case the lockedBy attribute will stay null
          readOnly: true
        lockId:
          maxLength: 2048
          type:
          - string
          - 'null'
        lockedBy:
          type:
          - string
          - 'null'
        lockTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        isSentByMail:
          type: boolean
          readOnly: true
        mailSender:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        mailSenderName:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        mailContent:
          maxLength: 65535
          type:
          - string
          - 'null'
          readOnly: true
        mailSubject:
          maxLength: 512
          type:
          - string
          - 'null'
          readOnly: true
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        previewAvailable:
          type: boolean
          description: Indicates whether preview is available for the current version
        hash:
          allOf:
          - $ref: '#/components/schemas/hash'
          - {}
          readOnly: true
        deletedAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        purgeTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        retentionEnd:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retentionEnd'
          - description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
        retentionIsCustom:
          type: boolean
          description: Indicates whether the retentionEnd is overridden from the default
          readOnly: true
        language:
          type: string
          description: OCR language
          examples:
          - eng
        approvalStatus:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/ApprovalStatus'
          - {}
        permissions:
          $ref: '#/components/schemas/properties-permissions'
        supports:
          $ref: '#/components/schemas/Supports'
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: ''
        people:
          type: array
          items:
            $ref: '#/components/schemas/Person'
          description: ''
        meta:
          type: array
          items:
            $ref: '#/components/schemas/entityMeta'
          description: ''
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/reminder'
          description: ''
        parent:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Folder'
          - deprecated: true
        shares:
          type: array
          items:
            $ref: '#/components/schemas/fileShare'
          description: ''
        fileRelations:
          type: array
          items:
            $ref: '#/components/schemas/Relateditem'
          description: ''
        version:
          allOf:
          - $ref: '#/components/schemas/fileVersionDefaultOrExpanded'
          - {}
        thumbnails:
          $ref: '#/components/schemas/Filethumbnails'
    Link:
      title: Link
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My link name
        address:
          type: string
        embedded:
          type: boolean
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        deletedAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        purgeTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        retentionIsCustom:
          type: boolean
          description: Indicates whether the retentionEnd is overridden from the default
          readOnly: true
        retentionEnd:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retentionEnd'
          - description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
        permissions:
          $ref: '#/components/schemas/Permissions9'
    Resolutionmethod:
      title: Resolutionmethod
      enum:
      - approval
      - DocuSign
      - eID
      - acknowledgement
      - eSign
      - review
      type: string
    Resolution:
      title: Resolution
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Entity UID
          readOnly: true
          examples:
          - Abc_123-XY
        fileVersionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
          description: File version UID
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        status:
          $ref: '#/components/schemas/Status3'
        method:
          $ref: '#/components/schemas/Resolutionmethod'
        type:
          $ref: '#/components/schemas/Type2'
        note:
          type:
          - string
          - 'null'
        showMeta:
          type: boolean
        showRelatedEntities:
          type: boolean
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        initiatorUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        lastActivityAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        timeoutAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        isWorkflowManaged:
          type: boolean
    Resolutionwithexpandedfields2:
      title: Resolutionwithexpandedfields2
      type: object
      properties:
        permissions:
          $ref: '#/components/schemas/Permissions10'
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        fileVersion:
          allOf:
          - $ref: '#/components/schemas/fileVersionDefaultOrExpanded'
          - {}
    Resolutionwithexpandedfields:
      title: Resolutionwithexpandedfields
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Entity UID
          readOnly: true
          examples:
          - Abc_123-XY
        fileVersionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
          description: File version UID
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        status:
          $ref: '#/components/schemas/Status3'
        method:
          $ref: '#/components/schemas/Resolutionmethod'
        type:
          $ref: '#/components/schemas/Type2'
        note:
          type:
          - string
          - 'null'
        showMeta:
          type: boolean
        showRelatedEntities:
          type: boolean
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        initiatorUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        lastActivityAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        timeoutAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        isWorkflowManaged:
          type: boolean
        permissions:
          $ref: '#/components/schemas/Permissions10'
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        fileVersion:
          allOf:
          - $ref: '#/components/schemas/fileVersionDefaultOrExpanded'
          - {}
    Workflow:
      title: Workflow
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        name:
          maxLength: 255
          minLength: 1
          type:
          - string
          - 'null'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        isActive:
          type: boolean
        isRecursive:
          type: boolean
          description: Not applicable without entityUid
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    Version:
      title: Version
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        isActive:
          type: boolean
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    stepBase:
      title: stepBase
      required:
      - type
      type: object
      properties:
        type:
          type: string
        params:
          type: object
    moveStep:
      title: moveStep
      required:
      - type
      - params
      type: object
      properties:
        type:
          const: move
          type: string
        params:
          $ref: '#/components/schemas/Params'
    resolutionStep:
      title: resolutionStep
      required:
      - type
      - params
      type: object
      properties:
        type:
          const: resolution
          type: string
        params:
          $ref: '#/components/schemas/Params1'
        onFailure:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
        onSuccess:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
        onTimeout:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
    addInvitesStep:
      title: addInvitesStep
      required:
      - type
      - params
      type: object
      properties:
        type:
          const: addInvites
          type: string
        params:
          $ref: '#/components/schemas/Params2'
        onFailure:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
        onSuccess:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
        onTimeout:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
    resolutionCompleteStep:
      title: resolutionCompleteStep
      required:
      - type
      - params
      type: object
      properties:
        type:
          const: resolutionComplete
          type: string
        params:
          $ref: '#/components/schemas/Params3'
    delayStep:
      title: delayStep
      required:
      - type
      - params
      type: object
      properties:
        type:
          const: delay
          type: string
        params:
          $ref: '#/components/schemas/Params4'
    Versionwithexpandedfields2:
      title: Versionwithexpandedfields2
      type: object
      properties:
        steps:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
    Versionwithexpandedfields:
      title: Versionwithexpandedfields
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        isActive:
          type: boolean
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        steps:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
    Workflowtriggerevent:
      title: Workflowtriggerevent
      enum:
      - entityNew
      - entityDelete
      - entityRestore
      - entityMove
      - entityName
      - entityNote
      - entityDescription
      - entityNumber
      - entityDate
      - entityDueDate
      - entityMetaNew
      - entityMetaDelete
      - entityMetaValue
      - entityTagNew
      - entityTagDelete
      - entityRelationNew
      - entityRelationDelete
      - fileVersionNew
      - fileVersionDelete
      - fileVersionRestore
      - fileSigneeNew
      - fileSigneeDelete
      - folderLanguage
      - folderMetaUpdate
      - linkAddress
      - linkEmbedded
      - resolutionResponse
      - resolutionComplete
      - shareNew
      - shareDelete
      - shareUpdate
      type: string
    resolutionStatus:
      title: resolutionStatus
      enum:
      - deleted
      - preparing
      - active
      - inProgress
      - complete
      - rejected
      type: string
    Sourceofevent:
      title: Sourceofevent
      type: object
      properties:
        resolution:
          $ref: '#/components/schemas/Resolution1'
    Entityname:
      title: Entityname
      required:
      - caseSensitive
      - operator
      - value
      type: object
      properties:
        caseSensitive:
          type: boolean
        operator:
          $ref: '#/components/schemas/Operator'
        value:
          type: string
    Trigger:
      title: Trigger
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        events:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Workflowtriggerevent'
          description: ''
        condition:
          type: array
          items:
            $ref: '#/components/schemas/condition'
          description: ''
    Workflowwithexpandedfields2:
      title: Workflowwithexpandedfields2
      type: object
      properties:
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        version:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
          - {}
        versions:
          type: array
          items:
            $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
          description: ''
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
          description: ''
    Workflowwithexpandedfields:
      title: Workflowwithexpandedfields
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        name:
          maxLength: 255
          minLength: 1
          type:
          - string
          - 'null'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        isActive:
          type: boolean
        isRecursive:
          type: boolean
          description: Not applicable without entityUid
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        permissions:
          $ref: '#/components/schemas/metaBase_properties-permissions'
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        version:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
          - {}
        versions:
          type: array
          items:
            $ref: '#/components/schemas/workflowVersionDefaultOrExpanded'
          description: ''
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/Trigger'
          description: ''
    Entitywithexpandedfields2:
      title: Entitywithexpandedfields2
      type: object
      properties:
        folder:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/folderDefaultOrExpanded'
          - {}
        file:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        link:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Link'
          - {}
        asic:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        shares:
          type: array
          items:
            $ref: '#/components/schemas/Share'
          description: ''
        extra:
          $ref: '#/components/schemas/Entity1'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/entityMeta'
          description: ''
        account:
          $ref: '#/components/schemas/Account'
        sectionOrder:
          maximum: 32767
          minimum: -32768
          type:
          - integer
          - 'null'
          description: User-configurable value for manually ordering sections
          contentEncoding: int32
        inboxFolder:
          type: boolean
        teamFolder:
          type: boolean
        folderStats:
          $ref: '#/components/schemas/FolderStats'
        isRoot:
          type: boolean
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: ''
        extension:
          type: string
          readOnly: true
          examples:
          - txt
        size:
          type:
          - integer
          - 'null'
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        creator:
          $ref: '#/components/schemas/Otheruser'
        icon:
          $ref: '#/components/schemas/icon'
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/reminder'
          description: ''
        entityRelations:
          type: array
          items:
            $ref: '#/components/schemas/Relateditem'
          description: ''
        resolutions:
          type: array
          items:
            $ref: '#/components/schemas/resolutionDefaultOrExpanded'
          description: ''
        resolutionSupport:
          type: object
          additionalProperties:
            type: boolean
          description: List of supported resolution methods, which could be initiated on this entity
          examples:
          - approval: true
            acknowledgement: true
            esign: false
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/workflowDefaultOrExpanded'
          description: ''
    Entitywithexpandedfields:
      title: Entitywithexpandedfields
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        type:
          $ref: '#/components/schemas/type'
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        deletedAt:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        purgeTime:
          type:
          - integer
          - 'null'
          contentEncoding: int32
        retentionEnd:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retentionEnd'
          - description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
        retentionIsCustom:
          type: boolean
          description: Indicates whether the retentionEnd is overridden from the default
          readOnly: true
        retention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retention'
          - description: Recycle/Permanently delete/Archive items after x time, counting from the time uploaded
        activeRetention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/activeRetention'
          - {}
          readOnly: true
        folder:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/folderDefaultOrExpanded'
          - {}
        file:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        link:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Link'
          - {}
        asic:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        shares:
          type: array
          items:
            $ref: '#/components/schemas/Share'
          description: ''
        extra:
          $ref: '#/components/schemas/Entity1'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/entityMeta'
          description: ''
        account:
          $ref: '#/components/schemas/Account'
        sectionOrder:
          maximum: 32767
          minimum: -32768
          type:
          - integer
          - 'null'
          description: User-configurable value for manually ordering sections
          contentEncoding: int32
        inboxFolder:
          type: boolean
        teamFolder:
          type: boolean
        folderStats:
          $ref: '#/components/schemas/FolderStats'
        isRoot:
          type: boolean
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          description: ''
        extension:
          type: string
          readOnly: true
          examples:
          - txt
        size:
          type:
          - integer
          - 'null'
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        creator:
          $ref: '#/components/schemas/Otheruser'
        icon:
          $ref: '#/components/schemas/icon'
        reminders:
          type: array
          items:
            $ref: '#/components/schemas/reminder'
          description: ''
        entityRelations:
          type: array
          items:
            $ref: '#/components/schemas/Relateditem'
          description: ''
        resolutions:
          type: array
          items:
            $ref: '#/components/schemas/resolutionDefaultOrExpanded'
          description: ''
        resolutionSupport:
          type: object
          additionalProperties:
            type: boolean
          description: List of supported resolution methods, which could be initiated on this entity
          examples:
          - approval: true
            acknowledgement: true
            esign: false
        workflows:
          type: array
          items:
            $ref: '#/components/schemas/workflowDefaultOrExpanded'
          description: ''
    Relateditemwithexpandedfields:
      title: Relateditemwithexpandedfields
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
    Relateditemwithexpandedfields2:
      title: Relateditemwithexpandedfields2
      required:
      - fileUid
      - entityUid
      - user
      - createdAt
      - type
      type: object
      properties:
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        user:
          $ref: '#/components/schemas/Otheruser'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        type:
          $ref: '#/components/schemas/type'
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
    duplication-options:
      title: duplication-options
      type: object
      properties:
        filePeople:
          type: boolean
          description: Include file people/signees
          default: true
        files:
          type: boolean
          description: Include files inside folders
          default: true
        meta:
          type: boolean
          description: Include meta
          default: true
        relations:
          type: boolean
          description: Include relations
          default: false
        reminders:
          type: boolean
          description: Include reminders
          default: false
        resolutions:
          type: boolean
          description: Include resolutions
          default: false
        shares:
          type: boolean
          description: Include shares
          default: false
        tags:
          type: boolean
          description: Include tags
          default: true
        workflows:
          type: boolean
          description: Include workflows
          default: false
    duplicate:
      title: duplicate
      required:
      - entities
      - locationUid
      type: object
      properties:
        entities:
          minItems: 1
          type: array
          items:
            pattern: '[a-zA-Z0-9_-]{10}'
            type: string
          description: ''
        locationUid:
          pattern: '[a-zA-Z0-9_-]{10}'
          type: string
        options:
          $ref: '#/components/schemas/duplication-options'
    duplicationStatus:
      title: duplicationStatus
      required:
      - status
      - progress
      - total
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status4'
        progress:
          minimum: 0
          type: integer
          contentEncoding: int32
        total:
          minimum: 1
          type: integer
          contentEncoding: int32
        failedEntity:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        duplicates:
          minItems: 1
          type: array
          items:
            maxLength: 10
            minLength: 10
            pattern: ^[a-zA-Z0-9_-]+$
            type: string
          description: Contains a list of duplicated entities in the original order
    errorResponse:
      title: errorResponse
      type: object
      properties:
        name:
          type: string
          description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          type: integer
          description: Error status code
          contentEncoding: int32
    fileUploadCreateBase:
      title: fileUploadCreateBase
      required:
      - action
      - fileSize
      - fileName
      - contentType
      type: object
      properties:
        action:
          const: create
          type: string
        fileSize:
          maximum: 5497558138880
          type: number
        fileName:
          type: string
        contentType:
          type: string
        parts:
          type: object
          description: Keys are part numbers, values are content lengths (number type)
    File1:
      title: File1
      required:
      - action
      - fileSize
      - fileName
      - contentType
      - folderUid
      type: object
      properties:
        action:
          const: create
          type: string
        fileSize:
          maximum: 5497558138880
          type: number
        fileName:
          type: string
        contentType:
          type: string
        parts:
          type: object
          description: Keys are part numbers, values are content lengths (number type)
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Fileversion1:
      title: Fileversion1
      required:
      - action
      - fileSize
      - fileName
      - contentType
      - fileUid
      type: object
      properties:
        action:
          const: create
          type: string
        fileSize:
          maximum: 5497558138880
          type: number
        fileName:
          type: string
        contentType:
          type: string
        parts:
          type: object
          description: Keys are part numbers, values are content lengths (number type)
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Archiveunpack:
      title: Archiveunpack
      required:
      - action
      - fileSize
      - fileName
      - contentType
      - folderUid
      - unpack
      type: object
      properties:
        action:
          const: create
          type: string
        fileSize:
          maximum: 21474836480
          type: number
        fileName:
          type: string
        contentType:
          type: string
        parts:
          type: object
          description: Keys are part numbers, values are content lengths (number type)
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        unpack:
          allOf:
          - $ref: '#/components/schemas/Unpack'
          - description: Unpacking options
    Part:
      title: Part
      required:
      - action
      - uploadId
      - key
      - partNumber
      - contentLength
      type: object
      properties:
        action:
          const: part
          type: string
        uploadId:
          type: string
        key:
          type: string
        partNumber:
          maximum: 10000
          minimum: 1
          type: number
        contentLength:
          maximum: 5368709120
          minimum: 1
          type: number
    Abort:
      title: Abort
      required:
      - action
      - uploadId
      - key
      type: object
      properties:
        action:
          const: abort
          type: string
        uploadId:
          type: string
        key:
          type: string
    fileUploadCompleteBase:
      title: fileUploadCompleteBase
      required:
      - action
      - uploadId
      - key
      - fileSize
      - fileName
      type: object
      properties:
        action:
          const: complete
          type: string
        uploadId:
          type: string
        key:
          type: string
        fileSize:
          maximum: 5497558138880
          type: number
        fileName:
          type: string
    File2:
      title: File2
      required:
      - action
      - uploadId
      - key
      - fileSize
      - fileName
      - folderUid
      type: object
      properties:
        action:
          const: complete
          type: string
        uploadId:
          type: string
        key:
          type: string
        fileSize:
          maximum: 5497558138880
          type: number
        fileName:
          type: string
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Fileversion2:
      title: Fileversion2
      required:
      - action
      - uploadId
      - key
      - fileSize
      - fileName
      - fileUid
      type: object
      properties:
        action:
          const: complete
          type: string
        uploadId:
          type: string
        key:
          type: string
        fileSize:
          maximum: 5497558138880
          type: number
        fileName:
          type: string
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Archiveunpack1:
      title: Archiveunpack1
      required:
      - action
      - uploadId
      - key
      - fileSize
      - fileName
      - folderUid
      - unpack
      type: object
      properties:
        action:
          const: complete
          type: string
        uploadId:
          type: string
        key:
          type: string
        fileSize:
          maximum: 21474836480
          type: number
        fileName:
          type: string
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        unpack:
          allOf:
          - $ref: '#/components/schemas/Unpack'
          - description: Unpacking options
    Uploadedparts:
      title: Uploadedparts
      required:
      - action
      - uploadId
      - key
      type: object
      properties:
        action:
          const: parts
          type: string
        uploadId:
          type: string
        key:
          type: string
    properties-permissions:
      title: properties-permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canUpdateContent:
          type: boolean
          description: Add/manage versions
          examples:
          - true
        canUpdateOnline:
          type: boolean
          description: Edit file in the cloud
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
        canDownload:
          type: boolean
          examples:
          - true
        canPreview:
          type: boolean
          examples:
          - true
        canLock:
          type: boolean
          examples:
          - true
        canUpdateRetentionEnd:
          type: boolean
          examples:
          - true
        canAudit:
          type: boolean
          examples:
          - true
    Filemeta:
      title: Filemeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        metaUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        value:
          oneOf:
          - maxLength: 512
            minLength: 1
            type: string
            examples:
            - meta value
          - minLength: 1
            type: string
            examples:
            - meta value
          - type: integer
            contentEncoding: int64
            examples:
            - 42
          - type: number
            examples:
            - 42.5
          - type: string
            contentEncoding: date
          - type: string
            contentEncoding: date-time
          - type: string
            examples:
            - 17:32:28
          - type: boolean
          - type: string
          - type: string
          - maxLength: 10
            minLength: 10
            pattern: ^[a-zA-Z0-9_-]+$
            type: string
            examples:
            - Abc_123-XY
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    Person1:
      title: Person1
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - Johnny Smith
    Tag1:
      title: Tag1
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - myTag
    File3:
      title: File3
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        versionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          examples:
          - myFile.txt
        extension:
          type: string
          readOnly: true
          examples:
          - txt
        mimeType:
          type: string
          readOnly: true
          examples:
          - text/plain
        size:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 123
        number:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Sample 1.1
        date:
          type:
          - string
          - 'null'
          contentEncoding: date
        dueDate:
          type:
          - string
          - 'null'
          contentEncoding: date
        note:
          maxLength: 65535
          type:
          - string
          - 'null'
          examples:
          - My note
        isSentByMail:
          type: boolean
          readOnly: true
        mailSender:
          type:
          - string
          - 'null'
          readOnly: true
        mailSenderName:
          type:
          - string
          - 'null'
          readOnly: true
        mailContent:
          type:
          - string
          - 'null'
          readOnly: true
        mailSubject:
          type:
          - string
          - 'null'
          readOnly: true
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        hash:
          allOf:
          - $ref: '#/components/schemas/hash'
          - {}
          readOnly: true
        language:
          type: string
          description: OCR language
          examples:
          - eng
        meta:
          type: array
          items:
            $ref: '#/components/schemas/Filemeta'
          description: ''
        people:
          type: array
          items:
            $ref: '#/components/schemas/Person1'
          description: ''
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag1'
          description: ''
    viewType:
      title: viewType
      enum:
      - list
      - thumbnail
      type: string
      description: View type of a folder listing
    folder_properties-permissions:
      title: folder_properties-permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
        canDownload:
          type: boolean
          examples:
          - true
        canCreateFolder:
          type: boolean
          examples:
          - true
        canCreateFile:
          type: boolean
          examples:
          - true
        canUpdateRetention:
          type: boolean
          examples:
          - true
        canAudit:
          type: boolean
          examples:
          - true
    group_properties-permissions:
      title: group_properties-permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
        canViewMembers:
          type: boolean
          examples:
          - true
        canAddMember:
          type: boolean
          examples:
          - true
    Groupmemberuser:
      title: Groupmemberuser
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: User UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          description: User name
        email:
          maxLength: 255
          type: string
          description: User email
          readOnly: true
          examples:
          - someEmail@foo.bar
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
        type:
          $ref: '#/components/schemas/Type4'
        permissions:
          $ref: '#/components/schemas/Permissions12'
    Groupmemberchild:
      title: Groupmemberchild
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Group UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          description: Group name
          examples:
          - My group
        type:
          $ref: '#/components/schemas/Type5'
        permissions:
          $ref: '#/components/schemas/Permissions12'
    metaType:
      title: metaType
      enum:
      - string
      - text
      - integer
      - float
      - date
      - datetime
      - time
      - boolean
      - url
      - email
      - select
      type: string
    metaBase_properties-permissions:
      title: metaBase_properties-permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
    Foldermeta:
      title: Foldermeta
      type: object
      properties:
        meta:
          allOf:
          - $ref: '#/components/schemas/meta'
          - {}
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        isRequired:
          type: boolean
          examples:
          - false
        isRecursive:
          type: boolean
          examples:
          - false
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        includeFiles:
          type: boolean
          examples:
          - true
        includeLinks:
          type: boolean
          examples:
          - true
        includeFolders:
          type: boolean
          examples:
          - false
    person_properties-permissions:
      title: person_properties-permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
    Plan:
      title: Plan
      type: object
      properties:
        id:
          type: integer
          contentEncoding: int32
          examples:
          - 1
        name:
          type: string
          examples:
          - Free plan
        priceBase:
          type: number
          examples:
          - 10
        yearDiscount:
          type: number
          examples:
          - 0.9
    icon:
      title: icon
      enum:
      - folder
      - file
      - picture
      - chart
      - asic
      - link
      type: string
    SearchResult:
      title: SearchResult
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        type:
          $ref: '#/components/schemas/type'
        icon:
          $ref: '#/components/schemas/icon'
        score:
          type: number
          examples:
          - 1.5
        sort:
          type: array
          items:
            oneOf:
            - type: string
            - type: string
              contentEncoding: base64
          description: ''
        path:
          type: string
          description: UID Path tree
          examples:
          - /someUid123/someUid124
        pathUid:
          type: string
          description: UID Path tree
          examples:
          - /someUid123/someUid124
          deprecated: true
        mimeType:
          type:
          - string
          - 'null'
        createdAt:
          type: string
          contentEncoding: date-time
    SearchResultwithexpandedfields:
      title: SearchResultwithexpandedfields
      type: object
      properties:
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        folder:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/folderDefaultOrExpanded'
          - {}
        file:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        link:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Link'
          - {}
        asic:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        highlight:
          type: string
    SearchResultwithexpandedfields2:
      title: SearchResultwithexpandedfields2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        type:
          $ref: '#/components/schemas/type'
        icon:
          $ref: '#/components/schemas/icon'
        score:
          type: number
          examples:
          - 1.5
        sort:
          type: array
          items:
            oneOf:
            - type: string
            - type: string
              contentEncoding: base64
          description: ''
        path:
          type: string
          description: UID Path tree
          examples:
          - /someUid123/someUid124
        pathUid:
          type: string
          description: UID Path tree
          examples:
          - /someUid123/someUid124
          deprecated: true
        mimeType:
          type:
          - string
          - 'null'
        createdAt:
          type: string
          contentEncoding: date-time
        entity:
          allOf:
          - $ref: '#/components/schemas/entityDefaultOrExpanded'
          - {}
        folder:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/folderDefaultOrExpanded'
          - {}
        file:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        link:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Link'
          - {}
        asic:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/fileDefaultOrExpanded'
          - {}
        highlight:
          type: string
    andOperator:
      title: andOperator
      required:
      - andOperator
      type: object
      properties:
        andOperator:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/andOperator'
            - $ref: '#/components/schemas/orOperator'
            - $ref: '#/components/schemas/notOperator'
            - $ref: '#/components/schemas/filterItem3'
          description: ''
      description: Require all items
    orOperator:
      title: orOperator
      required:
      - orOperator
      type: object
      properties:
        orOperator:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/andOperator'
            - $ref: '#/components/schemas/orOperator'
            - $ref: '#/components/schemas/notOperator'
            - $ref: '#/components/schemas/filterItem3'
          description: ''
      description: Require one of items
    notOperator:
      title: notOperator
      required:
      - notOperator
      type: object
      properties:
        notOperator:
          oneOf:
          - $ref: '#/components/schemas/andOperator'
          - $ref: '#/components/schemas/orOperator'
          - $ref: '#/components/schemas/notOperator'
          - $ref: '#/components/schemas/filterItem3'
      description: Require item to not exist
    tag_properties-permissions:
      title: tag_properties-permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
    share_properties-permissions:
      title: share_properties-permissions
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
    publicShareRole:
      title: publicShareRole
      enum:
      - READ
      - PREVIEW
      type: string
    auditTrailFileEntryBase:
      title: auditTrailFileEntryBase
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    Entity2:
      title: Entity2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        type:
          $ref: '#/components/schemas/type'
    Audittrailtag:
      title: Audittrailtag
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Tag UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          description: Tag name
          examples:
          - myTag
    Audittrailperson:
      title: Audittrailperson
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Person UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          description: Person name
          examples:
          - Johnny Smith
    auditTrailShare:
      title: auditTrailShare
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Share UID
          readOnly: true
          examples:
          - Abc_123-XY
        role:
          $ref: '#/components/schemas/shareRole'
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Group UID
          readOnly: true
          examples:
          - Abc_123-XY
        groupName:
          type: string
          description: Group name
          examples:
          - My group
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
          description: User UID
        email:
          maxLength: 255
          type: string
          description: Email
          readOnly: true
          examples:
          - someEmail@foo.bar
        public:
          type: boolean
    Audittrailfilemeta:
      title: Audittrailfilemeta
      required:
      - uid
      - metaUid
      - type
      - multiple
      - name
      - value
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
        metaUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
        type:
          $ref: '#/components/schemas/metaType1'
        multiple:
          type: boolean
        name:
          maxLength: 255
          type: string
        value:
          oneOf:
          - type: boolean
          - type: string
            contentEncoding: date
          - type: string
            contentEncoding: date-time
          - type: string
          - type: string
          - type: integer
            contentEncoding: int64
          - maxLength: 10
            minLength: 10
            pattern: ^[a-zA-Z0-9_-]+$
            type: string
            examples:
            - Abc_123-XY
          - type: string
          - minLength: 1
            type: string
          - type: string
          - type: string
        decimalScale:
          maximum: 18
          minimum: 1
          type: integer
          contentEncoding: int32
    Audittrailfileapproval:
      title: Audittrailfileapproval
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Resolutionmethod'
        name:
          type: string
        versionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
        resolutionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
        inviteUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
        invitee:
          maxLength: 255
          type:
          - string
          - 'null'
        inviteeUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        text:
          type:
          - string
          - 'null'
        comment:
          type:
          - string
          - 'null'
      description: inviteId, invitee, inviteeId and text properties are only filled for approval responses
    auditTrailFolderEntryBase:
      title: auditTrailFolderEntryBase
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Audittrailfoldermeta:
      title: Audittrailfoldermeta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: FolderMeta UID
          readOnly: true
          examples:
          - Abc_123-XY
        metaUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Meta UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          description: Meta name
          examples:
          - meta name
        isRequired:
          type:
          - boolean
          - 'null'
          examples:
          - false
        isRecursive:
          type:
          - boolean
          - 'null'
          examples:
          - false
    Audittrailfolderautomatedworkflow:
      title: Audittrailfolderautomatedworkflow
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status5'
          - examples:
            - active
        isRecursive:
          type: boolean
          examples:
          - true
        type:
          allOf:
          - $ref: '#/components/schemas/Type8'
          - examples:
            - parallel
        text:
          maxLength: 500
          type: string
    Audittrailautomatedfilenumbering:
      title: Audittrailautomatedfilenumbering
      type: object
      properties:
        scheme:
          type: string
          examples:
          - Document 1.{number}
        isRecursive:
          type: boolean
          examples:
          - true
        name:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - This is my custom numbering
        resetType:
          allOf:
          - $ref: '#/components/schemas/ResetType'
          - examples:
            - yearly
        resetMonth:
          maximum: 12
          minimum: 1
          type:
          - integer
          - 'null'
          description: Used with yearly reset
          contentEncoding: int32
          examples:
          - 1
        resetDay:
          maximum: 31
          minimum: 0
          type:
          - integer
          - 'null'
          description: >-
            0 -> last day of month

            Used with yearly and monthly reset
          contentEncoding: int32
          examples:
          - 1
        resetWeekday:
          maximum: 7
          minimum: 1
          type:
          - integer
          - 'null'
          description: Used with weekly reset
          contentEncoding: int32
        number:
          minimum: 1
          type: integer
          description: Next number to be used
          contentEncoding: int32
        applyFiles:
          type: boolean
          description: Apply numbering to files
          examples:
          - 'true'
          - 'false'
        applyLinks:
          type: boolean
          description: Apply numbering to links
          examples:
          - 'true'
          - 'false'
        applyFolders:
          type: boolean
          description: Apply numbering to folders
          examples:
          - 'true'
          - 'false'
    auditTrailAccountEntryBase:
      title: auditTrailAccountEntryBase
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Audittrailmeta:
      title: Audittrailmeta
      type: object
      properties:
        metaUid:
          maxLength: 10
          minLength: 10
          type: string
          examples:
          - abcdefghij
        type:
          allOf:
          - $ref: '#/components/schemas/metaType1'
          - description: Meta type
        multiple:
          type: boolean
          description: Meta multiple
          examples:
          - false
        name:
          type: string
          examples:
          - Owner
        description:
          type:
          - string
          - 'null'
          examples:
          - Owner of the file
    Audittrailuser:
      title: Audittrailuser
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: User UID
          readOnly: true
          examples:
          - Abc_123-XY
        email:
          maxLength: 255
          type: string
          description: User email
          readOnly: true
          examples:
          - someEmail@foo.bar
    Audittrailgroup:
      title: Audittrailgroup
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Group UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          description: Group name
          examples:
          - My group
        oldName:
          type:
          - string
          - 'null'
    Audittrailgroupuser:
      title: Audittrailgroupuser
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: User UID
          readOnly: true
          examples:
          - Abc_123-XY
        email:
          maxLength: 255
          type: string
          description: User email
          readOnly: true
          examples:
          - someEmail@foo.bar
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Group UID
          readOnly: true
          examples:
          - Abc_123-XY
        groupName:
          type: string
          description: Group name
          examples:
          - My group
    Audittrailgroupuser1:
      title: Audittrailgroupuser1
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Child group UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          description: Child group name
          examples:
          - My group
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Group UID
          readOnly: true
          examples:
          - Abc_123-XY
        groupName:
          type: string
          description: Group name
          examples:
          - My group
    Fileentries:
      title: Fileentries
      required:
      - id
      - uid
      - accountUid
      - entityUid
      - event
      - time
      - requestKey
      - type
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        event:
          const: fileNew
          type: string
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          pattern: ^[a-zA-Z0-9]+$
          type:
          - string
          - 'null'
        type:
          const: folder
          type: string
        data:
          allOf:
          - $ref: '#/components/schemas/Data18'
          - description: Either source or target can be null, in which case it was or became a section
    resolution-invite:
      title: resolution-invite
      required:
      - email
      - userUid
      - groupUid
      type: object
      properties:
        order:
          minimum: 1
          type: integer
          contentEncoding: int32
        email:
          type: string
        userUid:
          pattern: '[a-zA-Z0-9_-]{10}'
          type: string
        groupUid:
          pattern: '[a-zA-Z0-9_-]{10}'
          type: string
    resolution-create:
      title: resolution-create
      required:
      - type
      - method
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type2'
        invites:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/resolution-invite'
          description: ''
        method:
          $ref: '#/components/schemas/Resolutionmethod'
        note:
          type: string
        showMeta:
          type: boolean
        showRelatedEntities:
          type: boolean
        timeoutTime:
          type: string
          contentEncoding: date-time
    resolution-update:
      title: resolution-update
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type2'
        note:
          type: string
        showMeta:
          type: boolean
        showRelatedEntities:
          type: boolean
        timeoutTime:
          type: string
          contentEncoding: date-time
    Resolutioninvite1:
      title: Resolutioninvite1
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        order:
          minimum: 1
          type: integer
          contentEncoding: int32
        email:
          maxLength: 255
          type: string
          description: User email
          readOnly: true
          examples:
          - someEmail@foo.bar
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        delegateUserUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        status:
          $ref: '#/components/schemas/Status6'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
    Resolutioninvitewithexpandedfields:
      title: Resolutioninvitewithexpandedfields
      type: object
      properties:
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        delegateUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
    Resolutioninvitewithexpandedfields2:
      title: Resolutioninvitewithexpandedfields2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        order:
          minimum: 1
          type: integer
          contentEncoding: int32
        email:
          maxLength: 255
          type: string
          description: User email
          readOnly: true
          examples:
          - someEmail@foo.bar
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        delegateUserUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        status:
          $ref: '#/components/schemas/Status6'
        createdAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        updatedAt:
          type: integer
          description: UNIX timestamp
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        delegateUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
    invite-update:
      title: invite-update
      type: object
      properties:
        order:
          minimum: 1
          type: integer
          contentEncoding: int32
    workflow-create:
      title: workflow-create
      type: object
      properties:
        entityUid:
          pattern: '[a-zA-Z0-9_-]{10}'
          type:
          - string
          - 'null'
        isActive:
          type: boolean
        isRecursive:
          type: boolean
        name:
          maxLength: 255
          type:
          - string
          - 'null'
        steps:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/workflow-trigger-create'
          description: ''
    workflow-update:
      title: workflow-update
      type: object
      properties:
        isActive:
          type: boolean
        isRecursive:
          type: boolean
        name:
          maxLength: 255
          type:
          - string
          - 'null'
        steps:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
    workflow-version-create:
      title: workflow-version-create
      required:
      - steps
      type: object
      properties:
        steps:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/step'
          description: ''
    workflow-version-update:
      title: workflow-version-update
      type: object
      properties:
        isActive:
          type: boolean
    workflow-trigger-create:
      title: workflow-trigger-create
      required:
      - events
      type: object
      properties:
        condition:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/condition'
          description: ''
        events:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Workflowtriggerevent'
          description: ''
    workflow-trigger-update:
      title: workflow-trigger-update
      type: object
      properties:
        condition:
          type:
          - array
          - 'null'
          items:
            $ref: '#/components/schemas/condition'
          description: ''
        events:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Workflowtriggerevent'
          description: ''
    400-badRequest1:
      title: 400-badRequest1
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name2'
          - description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          allOf:
          - $ref: '#/components/schemas/Status9'
          - description: Error status code
    401-unauthorized1:
      title: 401-unauthorized1
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          - description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          allOf:
          - $ref: '#/components/schemas/Status7'
          - description: Error status code
    403-forbidden1:
      title: 403-forbidden1
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name4'
          - description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          allOf:
          - $ref: '#/components/schemas/Status11'
          - description: Error status code
    404-notFound1:
      title: 404-notFound1
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name3'
          - description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          allOf:
          - $ref: '#/components/schemas/Status10'
          - description: Error status code
    409-conflict1:
      title: 409-conflict1
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name5'
          - description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          allOf:
          - $ref: '#/components/schemas/Status12'
          - description: Error status code
    422-unprocessableEntity1:
      title: 422-unprocessableEntity1
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name1'
          - description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          allOf:
          - $ref: '#/components/schemas/Status8'
          - description: Error status code
    500-serverError1:
      title: 500-serverError1
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name6'
          - description: Error name
        message:
          type: string
          description: Error message
          examples:
          - This is an error message explaining the issue
        code:
          type: integer
          description: Not used
          contentEncoding: int32
        status:
          allOf:
          - $ref: '#/components/schemas/Status13'
          - description: Error status code
    Accountcreated:
      title: Accountcreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Accountdeleted:
      title: Accountdeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Accountdownloaded:
      title: Accountdownloaded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountDownload
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Accountinboxtoggled:
      title: Accountinboxtoggled
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountInbox
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: boolean
          examples:
          - false
    Accountindexingchanged:
      title: Accountindexingchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountIndexing
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: boolean
          examples:
          - true
    AccountOCRlanguagechanged:
      title: AccountOCRlanguagechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountLanguage
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: string
          examples:
          - English
    Accountrenamed:
      title: Accountrenamed
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: string
          examples:
          - New account name
    Accountsectionsreordered:
      title: Accountsectionsreordered
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountSectionOrder
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Accountshared:
      title: Accountshared
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: shareNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Accountteamfoldertoggled:
      title: Accountteamfoldertoggled
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamFolder
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: boolean
          examples:
          - false
    Accountwatermarkingtoggled:
      title: Accountwatermarkingtoggled
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountWatermarking
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: boolean
          examples:
          - false
    action:
      title: action
      enum:
      - delete
      - purge
      - archive
      type: string
    Action3:
      title: Action3
      const: activate
      type: string
    Activatemail-inaddress:
      title: Activatemail-inaddress
      type: object
      properties:
        action:
          $ref: '#/components/schemas/Action3'
    Activatedmail-inaddress:
      title: Activatedmail-inaddress
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderEmailActivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Data15'
    Active:
      title: Active
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status15'
          - description: Unpacking currently active
        text:
          $ref: '#/components/schemas/Text2'
        progress:
          type:
          - number
          - 'null'
        progressMax:
          type:
          - number
          - 'null'
        currentPath:
          type:
          - string
          - 'null'
    AddRemindersRequest:
      title: AddRemindersRequest
      required:
      - content
      - remindAt
      - email
      - groupUid
      type: object
      properties:
        content:
          maxLength: 65535
          type: string
          examples:
          - Hello
        remindAt:
          type: string
          description: Unix timestamp
          examples:
          - '1537177837'
        recurrence:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Recurrence'
          - {}
        email:
          type: string
          examples:
          - someEmail@foo.bar
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    ApprovalStatus:
      title: ApprovalStatus
      enum:
      - active
      - inProgress
      - approved
      - rejected
      - deleted
      type: string
    Archiveuncompressed:
      title: Archiveuncompressed
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderUncompress
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: string
          examples:
          - Archive name
    Archiveunpack2:
      title: Archiveunpack2
      type: object
      properties:
        key:
          type: string
          description: Unpack key, check status from [`GET /accounts/{accountUid}/files/unpack-status/{key}`](#tag/File/operation/getUnpackStatus)
          examples:
          - GpW5kHBr
    AutomatedFileNumberingdisabled:
      title: AutomatedFileNumberingdisabled
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: numberingInherit
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    AutomatedFileNumberingenabled:
      title: AutomatedFileNumberingenabled
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: numberingActivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedFileNumberingnamechanged:
      title: AutomatedFileNumberingnamechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: numberingName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedFileNumberingnextnumberchanged:
      title: AutomatedFileNumberingnextnumberchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: numberingNumber
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedFileNumberingresetchanged:
      title: AutomatedFileNumberingresetchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: numberingReset
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedFileNumberingschemechanged:
      title: AutomatedFileNumberingschemechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: numberingScheme
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingactivated:
      title: AutomatedNumberingactivated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingActivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingdeactivated:
      title: AutomatedNumberingdeactivated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingDeactivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberinginclusionoffileschanged:
      title: AutomatedNumberinginclusionoffileschanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingApplyFiles
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberinginclusionoffolderschanged:
      title: AutomatedNumberinginclusionoffolderschanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingApplyFolders
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberinginclusionoflinkschanged:
      title: AutomatedNumberinginclusionoflinkschanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingApplyLinks
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingnamechanged:
      title: AutomatedNumberingnamechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingnextnumberchanged:
      title: AutomatedNumberingnextnumberchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingNumber
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingrecursionchanged:
      title: AutomatedNumberingrecursionchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingRecursive
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingresetchanged:
      title: AutomatedNumberingresetchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingReset
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingschemechanged:
      title: AutomatedNumberingschemechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingScheme
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailautomatedfilenumbering'
    AutomatedNumberingsettoinherit:
      title: AutomatedNumberingsettoinherit
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: numberingInherit
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Boolean:
      title: Boolean
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator9'
        value:
          type: boolean
    Byemail:
      title: Byemail
      required:
      - email
      type: object
      properties:
        email:
          type: string
          examples:
          - newMember@foo.bar
    BygroupUid:
      title: BygroupUid
      required:
      - groupUid
      type: object
      properties:
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Byname:
      title: Byname
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - Johnny Smith
    Byuid:
      title: Byuid
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    ByuserUid:
      title: ByuserUid
      required:
      - userUid
      - email
      type: object
      properties:
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        email:
          maxLength: 255
          type: string
          examples:
          - someEmail@foo.bar
    ByuserUid1:
      title: ByuserUid1
      required:
      - userUid
      type: object
      properties:
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Cause:
      title: Cause
      const: retention
      type: string
      description: Used for marking actions performed by background processes
    Conflictingfile:
      title: Conflictingfile
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status19'
          - description: Found a conflicting file
        text:
          $ref: '#/components/schemas/Text6'
        progress:
          type:
          - string
          - 'null'
        progressMax:
          type:
          - string
          - 'null'
        currentPath:
          type: string
          examples:
          - ./someFile.txt
    Create:
      title: Create
      type: object
      properties:
        uploadId:
          type: string
        key:
          type: string
    CreatewithURLs:
      title: CreatewithURLs
      type: object
      properties:
        uploadId:
          type: string
        key:
          type: string
        urls:
          type: object
          description: List of URLs, same as from the "part" action
    Createdmail-inaddress:
      title: Createdmail-inaddress
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderEmailNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Data15'
    createdFrom:
      title: createdFrom
      required:
      - createdFrom
      type: object
      properties:
        createdFrom:
          allOf:
          - $ref: '#/components/schemas/createdFrom1'
          - description: From upload date
    createdTo:
      title: createdTo
      required:
      - createdTo
      type: object
      properties:
        createdTo:
          allOf:
          - $ref: '#/components/schemas/createdTo1'
          - description: To upload date
    Data:
      title: Data
      type: object
      properties:
        fileVersionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        email:
          type:
          - string
          - 'null'
        token:
          type:
          - string
          - 'null'
    Data2:
      title: Data2
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: FileVersion UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          type: string
          description: File name
          readOnly: true
          examples:
          - sample.txt
    Data5:
      title: Data5
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Item UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Item name
          examples:
          - My entity name
        type:
          allOf:
          - $ref: '#/components/schemas/type6'
          - description: Item type
    Data7:
      title: Data7
      type: object
      properties:
        source:
          $ref: '#/components/schemas/Sourcefolder'
        target:
          $ref: '#/components/schemas/Targetfolder'
    Data8:
      title: Data8
      type: object
      properties:
        end:
          type:
          - integer
          - 'null'
          description: null value for both end and action results in forced infinite retention
          contentEncoding: int32
          examples:
          - 1537177837
        action:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/action'
          - {}
        custom:
          type: boolean
          description: Indicates whether the retentionEnd is overridden from the default
          readOnly: true
        target:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Data9:
      title: Data9
      type: object
      properties:
        source:
          $ref: '#/components/schemas/Sourcefolder'
        target:
          $ref: '#/components/schemas/Targetfolder'
      description: Either source or target can be null, in which case it was or became a section
    Data10:
      title: Data10
      type: object
      properties:
        folder:
          $ref: '#/components/schemas/Folderthatmoved'
        target:
          $ref: '#/components/schemas/Targetfolder'
      description: Target can be null, in which case it became a section
    Data11:
      title: Data11
      type: object
      properties:
        folder:
          $ref: '#/components/schemas/Folderthatmoved'
        source:
          $ref: '#/components/schemas/Sourcefolder'
      description: Source can be null, in which case it was a section
    Data12:
      title: Data12
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File4'
        folder:
          $ref: '#/components/schemas/Folder1'
    Data14:
      title: Data14
      type: object
      properties:
        time:
          maxLength: 30
          type: string
          description: "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention"
          examples:
          - 1m5d
        action:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/action'
          - {}
        isRecursive:
          type:
          - boolean
          - 'null'
        target:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        keepStructure:
          type: boolean
          description: Keep folder structure on archiving with isRecursive active
    Data15:
      title: Data15
      type: object
      properties:
        address:
          type: string
    Data18:
      title: Data18
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: File name
          examples:
          - My entity name
        source:
          $ref: '#/components/schemas/Sourcefolder'
        target:
          $ref: '#/components/schemas/Targetfolder'
      description: Either source or target can be null, in which case it was or became a section
    Date:
      title: Date
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator4'
        value:
          type: string
          contentEncoding: date
    Datechanged:
      title: Datechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileDate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          type: string
          contentEncoding: date
    dateDueFrom:
      title: dateDueFrom
      required:
      - dateDueFrom
      type: object
      properties:
        dateDueFrom:
          allOf:
          - $ref: '#/components/schemas/dateDueFrom1'
          - description: From date due
    dateDueTo:
      title: dateDueTo
      required:
      - dateDueTo
      type: object
      properties:
        dateDueTo:
          allOf:
          - $ref: '#/components/schemas/dateDueTo1'
          - description: To date due
    dateFrom:
      title: dateFrom
      required:
      - dateFrom
      type: object
      properties:
        dateFrom:
          allOf:
          - $ref: '#/components/schemas/dateFrom1'
          - description: From date
    dateOrCreatedFrom:
      title: dateOrCreatedFrom
      required:
      - dateOrCreatedFrom
      type: object
      properties:
        dateOrCreatedFrom:
          allOf:
          - $ref: '#/components/schemas/dateFrom1'
          - description: From date
    dateOrCreatedTo:
      title: dateOrCreatedTo
      required:
      - dateOrCreatedTo
      type: object
      properties:
        dateOrCreatedTo:
          allOf:
          - $ref: '#/components/schemas/dateTo1'
          - description: To date
    Datetime:
      title: Datetime
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator4'
        value:
          type: string
          contentEncoding: date-time
    dateTo:
      title: dateTo
      required:
      - dateTo
      type: object
      properties:
        dateTo:
          allOf:
          - $ref: '#/components/schemas/dateTo1'
          - description: To date
    Deactivatemail-inaddress:
      title: Deactivatemail-inaddress
      required:
      - action
      type: object
      properties:
        action:
          const: deactivate
          type: string
    Deactivatedmail-inaddress:
      title: Deactivatedmail-inaddress
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderEmailDeactivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Data15'
    Decimal:
      title: Decimal
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator4'
        value:
          type: string
          examples:
          - '42.50'
    Duedatechanged:
      title: Duedatechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileDueDate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          type: string
          contentEncoding: date
    Duplicatedfile:
      title: Duplicatedfile
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfileDuplicate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Duplicatedsubfolder:
      title: Duplicatedsubfolder
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfolderDuplicate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    E-mail:
      title: E-mail
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator2'
        value:
          type: string
    Endpoint:
      title: Endpoint
      enum:
      - frontend
      - api
      type: string
    Exists:
      title: Exists
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator1'
    expand:
      title: expand
      enum:
      - dateFormat
      - timeFormat
      type: string
    expand1:
      title: expand1
      enum:
      - remoteUsername
      - status
      type: string
    expand2:
      title: expand2
      enum:
      - shares
      - stats
      type: string
    expand3:
      title: expand3
      enum:
      - property1
      - property2
      - property3
      type: string
    expand4:
      title: expand4
      enum:
      - entity
      - account
      - tag
      type: string
    expand5:
      title: expand5
      enum:
      - parent
      - meta
      - people
      - tags
      - reminders
      - shares
      - fileRelations
      - version
      type: string
    expand6:
      title: expand6
      enum:
      - parent
      - meta
      - shares
      - extra
      - sectionOrder
      - inboxFolder
      - teamFolder
      - folderStats
      - sort
      - viewType
      type: string
    expand7:
      title: expand7
      enum:
      - parent
      - meta
      - people
      - tags
      - reminders
      - shares
      - fileRelations
      type: string
    expand8:
      title: expand8
      enum:
      - users
      - groups
      - shares
      type: string
    expand9:
      title: expand9
      enum:
      - entity
      - folder
      - file
      - link
      - asic
      - highlight
      type: string
    expand10:
      title: expand10
      const: activeUser
      type: string
    extension:
      title: extension
      required:
      - extension
      type: object
      properties:
        extension:
          allOf:
          - $ref: '#/components/schemas/properties-extension'
          - description: Extension
    Extra:
      title: Extra
      type: object
      properties:
        number:
          maxLength: 255
          type:
          - string
          - 'null'
        note:
          maxLength: 65535
          type:
          - string
          - 'null'
        date:
          type:
          - string
          - 'null'
          contentEncoding: date
        dueDate:
          type:
          - string
          - 'null'
          contentEncoding: date
    Failure:
      title: Failure
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status16'
          - description: Unpacking failed
        text:
          $ref: '#/components/schemas/Text3'
        progress:
          type:
          - string
          - 'null'
        progressMax:
          type:
          - string
          - 'null'
        currentPath:
          type:
          - string
          - 'null'
    Field:
      title: Field
      enum:
      - name
      - tags
      - date
      - due_date
      - created_at
      - updated_at
      - signees
      - id
      - size
      - mail_sender
      - retention_end
      - language
      - number
      - note
      - creator
      - extension
      - approved_at
      - signed_at
      - acknowledged_at
      type: string
    Field1:
      title: Field1
      enum:
      - score
      - id
      - uid
      - name
      - size
      - number
      - date
      - dueDate
      - mailSender
      - mailSenderName
      - mailSubject
      - extension
      - mimeType
      - address
      - meta:<uid>
      type: string
    FileApprovalapproved:
      title: FileApprovalapproved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileResolutionApproved
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Audittrailfileapproval'
          - description: inviteId, invitee, inviteeId and text properties are only filled for approval responses
    FileApprovalcancelled:
      title: FileApprovalcancelled
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileResolutionDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Audittrailfileapproval'
          - description: inviteId, invitee, inviteeId and text properties are only filled for approval responses
    FileApprovalrejected:
      title: FileApprovalrejected
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileResolutionRejected
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Audittrailfileapproval'
          - description: inviteId, invitee, inviteeId and text properties are only filled for approval responses
    FileApprovalresponseapproved:
      title: FileApprovalresponseapproved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileResolutionResponseApproved
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Audittrailfileapproval'
          - description: inviteId, invitee, inviteeId and text properties are only filled for approval responses
    FileApprovalresponserejected:
      title: FileApprovalresponserejected
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileResolutionResponseRejected
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Audittrailfileapproval'
          - description: inviteId, invitee, inviteeId and text properties are only filled for approval responses
    FileApprovalstarted:
      title: FileApprovalstarted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileResolutionNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Audittrailfileapproval'
          - description: inviteId, invitee, inviteeId and text properties are only filled for approval responses
    Filedeleted:
      title: Filedeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    Filedeleted1:
      title: Filedeleted1
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfileDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Filedownloaded:
      title: Filedownloaded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileDownload
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Data'
          - {}
    Fileduplicated:
      title: Fileduplicated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileDuplicate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Filelocked:
      title: Filelocked
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileLock
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    Filemoved:
      title: Filemoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileMove
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Data7'
    Filemovedaway:
      title: Filemovedaway
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfileMove
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Data12'
    Filemovedin:
      title: Filemovedin
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfileMoveTarget
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Data12'
    Filenumberchanged:
      title: Filenumberchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileNumber
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          maxLength: 255
          type:
          - string
          - 'null'
    FileOCRlanguagechanged:
      title: FileOCRlanguagechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileLanguage
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          type: string
          examples:
          - English
    Fileopenedforonlineediting:
      title: Fileopenedforonlineediting
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileOnlineEdit
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    Fileopenedforonlineviewing:
      title: Fileopenedforonlineviewing
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileOnlineView
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    Filepreviewdownloaded:
      title: Filepreviewdownloaded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: filePreviewDownload
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Data'
          - {}
    Filerenamed:
      title: Filerenamed
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          type: string
          examples:
          - New file name
    Fileretentionchanged:
      title: Fileretentionchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileRetentionEnd
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Data8'
    Fileretentionchanged1:
      title: Fileretentionchanged1
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileRetentionEnd
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    Fileshared:
      title: Fileshared
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: shareNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Filetoolarge:
      title: Filetoolarge
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status17'
          - description: File inside the archive is too large to unpack
        text:
          $ref: '#/components/schemas/Text4'
        progress:
          type:
          - string
          - 'null'
        progressMax:
          type:
          - string
          - 'null'
        currentPath:
          type: string
          examples:
          - ./someFile.txt
    Fileunlocked:
      title: Fileunlocked
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileUnlock
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    Fileuploaded:
      title: Fileuploaded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
    File4:
      title: File4
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: File name
          examples:
          - My entity name
    FileMetacreated:
      title: FileMetacreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileMetaRequired
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfilemeta'
    FileMetadeleted:
      title: FileMetadeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileMetaDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfilemeta'
    FileMetavaluechanged:
      title: FileMetavaluechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileMetaValue
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfilemeta'
    filterItem:
      title: filterItem
      required:
      - tag
      type: object
      properties:
        tag:
          allOf:
          - $ref: '#/components/schemas/properties-tag'
          - description: Tag
    filterItem1:
      title: filterItem1
      required:
      - person
      type: object
      properties:
        person:
          allOf:
          - $ref: '#/components/schemas/properties-person'
          - description: Person
    filterItem2:
      title: filterItem2
      required:
      - number
      type: object
      properties:
        number:
          type: string
          description: Number
        operator:
          $ref: '#/components/schemas/Operator13'
    FolderAutomatedWorkflowactivated:
      title: FolderAutomatedWorkflowactivated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderResolutionActivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfolderautomatedworkflow'
    FolderAutomatedWorkflowdeactivated:
      title: FolderAutomatedWorkflowdeactivated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderResolutionDeactivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfolderautomatedworkflow'
    FolderAutomatedWorkflowmethodchanged:
      title: FolderAutomatedWorkflowmethodchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderResolutionMethod
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfolderautomatedworkflow'
    FolderAutomatedWorkflowrecursionchanged:
      title: FolderAutomatedWorkflowrecursionchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderResolutionRecursive
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfolderautomatedworkflow'
    FolderAutomatedWorkflowsettoinherit:
      title: FolderAutomatedWorkflowsettoinherit
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderResolutionInherit
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    FolderAutomatedWorkflowtextchanged:
      title: FolderAutomatedWorkflowtextchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderResolutionText
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfolderautomatedworkflow'
    FolderAutomatedWorkflowtypechanged:
      title: FolderAutomatedWorkflowtypechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderResolutionType
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfolderautomatedworkflow'
    Foldercreated:
      title: Foldercreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Folderdeleted:
      title: Folderdeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Folderdownloaded:
      title: Folderdownloaded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderDownload
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Folderduplicated:
      title: Folderduplicated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderDuplicate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Foldermoved:
      title: Foldermoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderMove
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Data9'
          - description: Either source or target can be null, in which case it was or became a section
    FolderOCRlanguagechanged:
      title: FolderOCRlanguagechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderLanguage
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: string
          examples:
          - English
    Folderrename:
      title: Folderrename
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          type: string
          examples:
          - New folder name
    Folderretentionchanged:
      title: Folderretentionchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderRetention
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Data14'
    Foldershared:
      title: Foldershared
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: shareNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Folderthatmoved:
      title: Folderthatmoved
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Folder name
          examples:
          - My folder name
    Foldervisiblecolumnschanged:
      title: Foldervisiblecolumnschanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderVisibleColumns
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Folder1:
      title: Folder1
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Folder name
          examples:
          - My folder name
    Folder3:
      title: Folder3
      required:
      - name
      - parentUid
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My folder name
        visibleColumns:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/folderColumn'
          description: Array of columns to be shown by the client
        language:
          type: string
          description: OCR language
          examples:
          - eng
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    FolderMetacreated:
      title: FolderMetacreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderMetaNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfoldermeta'
    FolderMetadeleted:
      title: FolderMetadeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderMetaDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfoldermeta'
    FolderMetarecursivechanged:
      title: FolderMetarecursivechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderMetaRecursive
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfoldermeta'
    FolderMetarequiredchanged:
      title: FolderMetarequiredchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderMetaRequired
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailfoldermeta'
    Genericaction:
      title: Genericaction
      required:
      - action
      type: object
      properties:
        action:
          type: string
    Groupcreated:
      title: Groupcreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountGroupAdd
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailgroup'
    Groupdeleted:
      title: Groupdeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountGroupDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailgroup'
    Groupmemberchildadded:
      title: Groupmemberchildadded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountGroupChildAdd
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailgroupuser1'
    Groupmemberchildremoved:
      title: Groupmemberchildremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountGroupChildDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailgroupuser1'
    Groupmemberuseradded:
      title: Groupmemberuseradded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountGroupUserAdd
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailgroupuser'
    Groupmemberuserremoved:
      title: Groupmemberuserremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountGroupUserDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailgroupuser'
    Grouprenamed:
      title: Grouprenamed
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountGroupName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailgroup'
    hasRelations:
      title: hasRelations
      required:
      - hasRelations
      type: object
      properties:
        hasRelations:
          type: boolean
          description: Find files that have or don't have related files set
    Integer:
      title: Integer
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator4'
        value:
          type: integer
          contentEncoding: int64
          examples:
          - 42
    language:
      title: language
      required:
      - language
      type: object
      properties:
        language:
          type: string
          description: OCR language
          examples:
          - eng
    Lockedfile:
      title: Lockedfile
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status20'
          - description: Found a locked file
        text:
          $ref: '#/components/schemas/Text7'
        progress:
          type:
          - string
          - 'null'
        progressMax:
          type:
          - string
          - 'null'
        currentPath:
          type: string
          examples:
          - ./someFile.txt
    mailContent:
      title: mailContent
      required:
      - mailContent
      type: object
      properties:
        mailContent:
          type: string
          description: Mail Content
    mailSenderEmail:
      title: mailSenderEmail
      required:
      - mailSenderEmail
      type: object
      properties:
        mailSenderEmail:
          type: string
          description: Mail Sender e-mail
    mailSenderName:
      title: mailSenderName
      required:
      - mailSenderName
      type: object
      properties:
        mailSenderName:
          type: string
          description: Mail Sender Name
    mailSubject:
      title: mailSubject
      required:
      - mailSubject
      type: object
      properties:
        mailSubject:
          type: string
          description: Mail Subject
    Meta:
      title: Meta
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Meta UID
          examples:
          - Abc_123-XY
        name:
          type: string
          description: Meta name
    MetaColumn:
      title: MetaColumn
      type: object
      properties:
        meta:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Meta UID
          examples:
          - Abc_123-XY
    MetaColumn1:
      title: MetaColumn1
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/Meta'
    Metacreated:
      title: Metacreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: metaNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailmeta'
    Metadeleted:
      title: Metadeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: metaDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailmeta'
    Metadescriptionchanged:
      title: Metadescriptionchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: metaDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailmeta'
    Metanamechanged:
      title: Metanamechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: metaName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailmeta'
    meta1:
      title: meta1
      required:
      - meta
      type: object
      properties:
        meta:
          type: array
          items:
            $ref: '#/components/schemas/properties-meta'
          description: Include meta
    metaType1:
      title: metaType1
      enum:
      - string
      - text
      - integer
      - float
      - date
      - datetime
      - time
      - boolean
      - url
      - email
      - select
      type: string
      description: Meta type
    Name:
      title: Name
      const: Unauthorized
      type: string
      description: Error name
    Name1:
      title: Name1
      const: Unprocessable entity
      type: string
      description: Error name
    Name2:
      title: Name2
      const: Bad Request
      type: string
      description: Error name
    Name3:
      title: Name3
      const: Not Found
      type: string
      description: Error name
    Name4:
      title: Name4
      const: Forbidden
      type: string
      description: Error name
    Name5:
      title: Name5
      const: Conflict
      type: string
      description: Error name
    Name6:
      title: Name6
      const: Internal Server Error
      type: string
      description: Error name
    Newfile:
      title: Newfile
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfileNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Newsubfolder:
      title: Newsubfolder
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfolderNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Notechanged:
      title: Notechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileNote
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          type: string
          examples:
          - New file note
    Operator:
      title: Operator
      enum:
      - contains
      - equals
      type: string
    Operator1:
      title: Operator1
      const: exists
      type: string
    Operator2:
      title: Operator2
      enum:
      - has
      - is
      - prefix
      - wildcard
      type: string
    Operator4:
      title: Operator4
      enum:
      - is
      - lt
      - lte
      - gt
      - gte
      type: string
    Operator9:
      title: Operator9
      const: is
      type: string
    Operator13:
      title: Operator13
      const: has
      type: string
    Order:
      title: Order
      enum:
      - asc
      - desc
      type: string
    Otheruser1:
      title: Otheruser1
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: User UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          type: string
          description: User name
        email:
          maxLength: 255
          type: string
          description: User email
          readOnly: true
          examples:
          - someEmail@foo.bar
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
      description: Indicates that a substitute user performed the action
    Outofspace:
      title: Outofspace
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status18'
          - description: Account does not have enough space to uncompress the archive
        text:
          $ref: '#/components/schemas/Text5'
        progress:
          type:
          - string
          - 'null'
        progressMax:
          type:
          - string
          - 'null'
        currentPath:
          type:
          - string
          - 'null'
    Params:
      title: Params
      required:
      - destination
      type: object
      properties:
        destination:
          pattern: '[a-zA-Z0-9_-]{10}'
          type: string
    Params1:
      title: Params1
      required:
      - type
      - invites
      - method
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Type2'
        invites:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/resolution-invite'
          description: ''
        keepActive:
          type: boolean
        method:
          $ref: '#/components/schemas/Resolutionmethod'
        note:
          type: string
        showMeta:
          type: boolean
        showRelatedEntities:
          type: boolean
        timeout:
          allOf:
          - $ref: '#/components/schemas/timeoutValue'
          - {}
    Params2:
      title: Params2
      required:
      - invites
      - method
      type: object
      properties:
        invites:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/resolution-invite'
          description: ''
        method:
          $ref: '#/components/schemas/Resolutionmethod'
        timeout:
          allOf:
          - $ref: '#/components/schemas/timeoutValue'
          - {}
    Params3:
      title: Params3
      required:
      - method
      type: object
      properties:
        method:
          $ref: '#/components/schemas/Resolutionmethod'
    Params4:
      title: Params4
      required:
      - amount
      type: object
      properties:
        amount:
          minimum: 1
          type: integer
          description: Amount of seconds to delay
          contentEncoding: int32
    parentUid:
      title: parentUid
      required:
      - parentUid
      type: object
      properties:
        parentUid:
          type: string
          description: Search from this parent
          examples:
          - someUid123
    Partdata:
      title: Partdata
      type: object
      properties:
        partNumber:
          type: number
        contentLength:
          type: number
        lastModified:
          type: integer
          contentEncoding: int32
          examples:
          - 1537177837
    Part1:
      title: Part1
      type: object
      properties:
        url:
          type: string
          description: Send file data as PUT request to this url
    Permissions9:
      title: Permissions9
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
        canShare:
          type: boolean
          examples:
          - true
        canUpdateRetention:
          type: boolean
          examples:
          - true
        canAudit:
          type: boolean
          examples:
          - true
    Permissions10:
      title: Permissions10
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canUpdate:
          type: boolean
          examples:
          - true
        canAddInvites:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
    Permissions12:
      title: Permissions12
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
    Personadded:
      title: Personadded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileSigneeNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailperson'
    Personcreated:
      title: Personcreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: signeeNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Persondeleted:
      title: Persondeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: signeeDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Personnamechanged:
      title: Personnamechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: signeeName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Personremoved:
      title: Personremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileSigneeDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailperson'
    Person2:
      title: Person2
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    properties-sort:
      title: properties-sort
      type: object
      properties:
        field:
          $ref: '#/components/schemas/Field1'
        order:
          $ref: '#/components/schemas/Order'
    query:
      title: query
      required:
      - query
      type: object
      properties:
        query:
          type: string
        queryFilter:
          type: array
          items:
            $ref: '#/components/schemas/queryFilter'
          description: Query filter
    queryFilter:
      title: queryFilter
      enum:
      - id
      - uid
      - name
      - meta
      - tag
      - person
      - content
      - note
      - number
      - mailSubject
      - mailSenderEmail
      - mailSenderName
      - mailContent
      type: string
    Recurrence:
      title: Recurrence
      enum:
      - daily
      - weekly
      - monthly
      - quarterly
      - semi-yearly
      - yearly
      type: string
    Relateditemadded:
      title: Relateditemadded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileRelationNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Data5'
    Relateditemremoved:
      title: Relateditemremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileRelationDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Data5'
    relatedUid:
      title: relatedUid
      required:
      - relatedUid
      type: object
      properties:
        relatedUid:
          type: array
          items:
            maxLength: 10
            minLength: 10
            pattern: ^[a-zA-Z0-9_-]+$
            type: string
          description: Return only the ones with specified related file UIDs
    Resetmail-inaddress:
      title: Resetmail-inaddress
      required:
      - action
      type: object
      properties:
        action:
          const: reset
          type: string
    ResetType:
      title: ResetType
      enum:
      - never
      - yearly
      - monthly
      - weekly
      - daily
      type: string
      examples:
      - yearly
    Resolution1:
      title: Resolution1
      type: object
      properties:
        status:
          $ref: '#/components/schemas/resolutionStatus'
        uid:
          pattern: '[a-zA-Z0-9_-]{10}'
          type: string
    Section:
      title: Section
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My folder name
        visibleColumns:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/folderColumn'
          description: Array of columns to be shown by the client
        language:
          type: string
          description: OCR language
          examples:
          - eng
    Sectioncreated:
      title: Sectioncreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountSectionNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Sectiondeleted:
      title: Sectiondeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountSectionDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Sectionduplicated:
      title: Sectionduplicated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountSectionDuplicate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Select:
      title: Select
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator9'
        value:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Shareactivated:
      title: Shareactivated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: shareActivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareactivated1:
      title: Shareactivated1
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: shareActivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareactivated2:
      title: Shareactivated2
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: shareActivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Sharedeactivated:
      title: Sharedeactivated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: shareDeactivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Sharedeactivated1:
      title: Sharedeactivated1
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: shareDeactivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Sharedeactivated2:
      title: Sharedeactivated2
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: shareDeactivate
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareexpirationchanged:
      title: Shareexpirationchanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: shareExpiration
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareexpirationchanged1:
      title: Shareexpirationchanged1
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: shareExpiration
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareexpirationchanged2:
      title: Shareexpirationchanged2
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: shareExpiration
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareremoved:
      title: Shareremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: shareDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareremoved1:
      title: Shareremoved1
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: shareDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Shareremoved2:
      title: Shareremoved2
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: shareDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Sharerolechanged:
      title: Sharerolechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: shareRole
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Sharerolechanged1:
      title: Sharerolechanged1
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: shareRole
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    Sharerolechanged2:
      title: Sharerolechanged2
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: shareRole
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/auditTrailShare'
    sort:
      title: sort
      enum:
      - id
      - -id
      type: string
    Sourcefolder:
      title: Sourcefolder
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Folder name
          examples:
          - My folder name
    Status:
      title: Status
      enum:
      - ACTIVE
      - DEACTIVATED
      - PENDING
      - DELETED
      type: string
    Status1:
      title: Status1
      enum:
      - active
      - inactive
      - invite
      - invite-inactive
      type: string
    Status3:
      title: Status3
      enum:
      - preparing
      - active
      - inProgress
      - complete
      - rejected
      type: string
    Status4:
      title: Status4
      enum:
      - success
      - active
      - failure
      type: string
    Status5:
      title: Status5
      enum:
      - inherit
      - active
      - inactive
      type: string
      examples:
      - active
    Status6:
      title: Status6
      enum:
      - pending
      - pendingInvite
      - active
      - approved
      - rejected
      type: string
    Status7:
      title: Status7
      const: 401
      type: integer
      description: Error status code
    Status8:
      title: Status8
      const: 422
      type: integer
      description: Error status code
    Status9:
      title: Status9
      const: 400
      type: integer
      description: Error status code
    Status10:
      title: Status10
      const: 404
      type: integer
      description: Error status code
    Status11:
      title: Status11
      const: 403
      type: integer
      description: Error status code
    Status12:
      title: Status12
      const: 409
      type: integer
      description: Error status code
    Status13:
      title: Status13
      const: 500
      type: integer
      description: Error status code
    Status14:
      title: Status14
      const: 0
      type: integer
      description: Unpacking finished
    Status15:
      title: Status15
      const: 1
      type: integer
      description: Unpacking currently active
    Status16:
      title: Status16
      const: 2
      type: integer
      description: Unpacking failed
    Status17:
      title: Status17
      const: 3
      type: integer
      description: File inside the archive is too large to unpack
    Status18:
      title: Status18
      const: 4
      type: integer
      description: Account does not have enough space to uncompress the archive
    Status19:
      title: Status19
      const: 5
      type: integer
      description: Found a conflicting file
    Status20:
      title: Status20
      const: 6
      type: integer
      description: Found a locked file
    Status21:
      title: Status21
      enum:
      - ACTIVE
      - DEACTIVATED
      type: string
    String:
      title: String
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator2'
        value:
          maxLength: 512
          minLength: 1
          type: string
          examples:
          - meta value
    Subfolderdeleted:
      title: Subfolderdeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfolderDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Entity2'
    Subfoldermovedaway:
      title: Subfoldermovedaway
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfolderMove
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Data10'
          - description: Target can be null, in which case it became a section
    Subfoldermovedin:
      title: Subfoldermovedin
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: folder
          type: string
        event:
          const: folderSubfolderMoveTarget
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          allOf:
          - $ref: '#/components/schemas/Data11'
          - description: Source can be null, in which case it was a section
    Success:
      title: Success
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/Status14'
          - description: Unpacking finished
        text:
          $ref: '#/components/schemas/Text1'
        progress:
          type: number
          examples:
          - 5
        progressMax:
          type: number
          examples:
          - 25
        currentPath:
          type:
          - string
          - 'null'
    Supports:
      title: Supports
      type: object
      properties:
        versioning:
          type: boolean
          description: Indicates whether file support versioning with version, versionUid and previewAvailable
        locking:
          type: boolean
          description: Indicates whether file supports locking
    Tagadded:
      title: Tagadded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileTagNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Tagcreated:
      title: Tagcreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: tagNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Tagdeleted:
      title: Tagdeleted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: tagDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Tagnamechanged:
      title: Tagnamechanged
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: tagName
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Tagremoved:
      title: Tagremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileTagDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailtag'
    Tag2:
      title: Tag2
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    Tag3:
      title: Tag3
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - myTag
    tagUid:
      title: tagUid
      required:
      - tagUid
      type: object
      properties:
        tagUid:
          type: array
          items:
            type: string
          description: Required tag uid list
    Targetfolder:
      title: Targetfolder
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Folder UID
          readOnly: true
          examples:
          - Abc_123-XY
        name:
          maxLength: 255
          minLength: 1
          type: string
          description: Folder name
          examples:
          - My folder name
    Teamuseraccepted:
      title: Teamuseraccepted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserAccept
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Teamuseradoptionaccepted:
      title: Teamuseradoptionaccepted
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserManagedAccept
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Teamuseradoptioninvitation:
      title: Teamuseradoptioninvitation
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserManagedInvite
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailuser'
    Teamuseradoptioninvitationremoval:
      title: Teamuseradoptioninvitationremoval
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserManagedInviteDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailuser'
    Teamuseradoptionrejected:
      title: Teamuseradoptionrejected
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserManagedReject
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Teamusercreated:
      title: Teamusercreated
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserAdd
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailuser'
    Teamuserrejected:
      title: Teamuserrejected
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserReject
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
    Teamuserremoved:
      title: Teamuserremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: account
          type: string
        event:
          const: accountTeamUserDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        data:
          $ref: '#/components/schemas/Audittrailuser'
    Text:
      title: Text
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator2'
        value:
          minLength: 1
          type: string
          examples:
          - meta value
    Text1:
      title: Text1
      const: success
      type: string
    Text2:
      title: Text2
      const: active
      type: string
    Text3:
      title: Text3
      const: failure
      type: string
    Text4:
      title: Text4
      const: oversize
      type: string
    Text5:
      title: Text5
      const: freespace
      type: string
    Text6:
      title: Text6
      const: conflict
      type: string
    Text7:
      title: Text7
      const: locked
      type: string
    Time:
      title: Time
      required:
      - uid
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator4'
        value:
          type: string
          examples:
          - 17:32:28
    Type2:
      title: Type2
      enum:
      - parallel
      - serial
      - custom
      type: string
    Type4:
      title: Type4
      const: user
      type: string
    Type5:
      title: Type5
      const: child
      type: string
    type6:
      title: type6
      enum:
      - folder
      - file
      - link
      type: string
      description: Item type
    Type8:
      title: Type8
      enum:
      - parallel
      - serial
      type: string
      examples:
      - parallel
    Unpack:
      title: Unpack
      required:
      - overwrite
      - newFolder
      type: object
      properties:
        overwrite:
          type: boolean
          description: Overwrite existing files (add new version)
          examples:
          - false
        newFolder:
          type: boolean
          description: Create a new folder for the archive
          examples:
          - true
      description: Unpacking options
    URL:
      title: URL
      type: object
      properties:
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        operator:
          $ref: '#/components/schemas/Operator2'
        value:
          type: string
    UserType:
      title: UserType
      enum:
      - private
      - company
      type: string
    V2AccountsEntitiesActionDuplicateResponse:
      title: V2AccountsEntitiesActionDuplicateResponse
      type: object
      properties:
        url:
          type: string
    V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest:
      title: V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest
      type: object
      properties:
        value:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          - type: boolean
          - {}
    V2AccountsEntitiesMetaMetaUidRequest:
      title: V2AccountsEntitiesMetaMetaUidRequest
      type: object
      properties:
        value:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          - type: boolean
          - {}
    V2AccountsEntitiesMetaRequest:
      title: V2AccountsEntitiesMetaRequest
      required:
      - metaUid
      - value
      type: object
      properties:
        metaUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        value:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          - type: boolean
          - type: array
            items:
              oneOf:
              - type: string
              - type: integer
                contentEncoding: int32
              - type: boolean
          - {}
    V2AccountsEntitiesRelatedRequest:
      title: V2AccountsEntitiesRelatedRequest
      required:
      - entityUid
      type: object
      properties:
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    V2AccountsEntitiesRequest:
      title: V2AccountsEntitiesRequest
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        retention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retention'
          - description: Recycle/Permanently delete/Archive items after x time, counting from the time uploaded
        retentionEnd:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retentionEnd'
          - description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
        extra:
          $ref: '#/components/schemas/Extra'
        sectionOrder:
          maximum: 32767
          minimum: -32768
          type: integer
          description: User-configurable value for manually ordering sections
          contentEncoding: int32
          examples:
          - 0
    V2AccountsEntitiesRestoreRequest:
      title: V2AccountsEntitiesRestoreRequest
      type: object
      properties:
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
    V2AccountsEntitiesTagsRequest:
      title: V2AccountsEntitiesTagsRequest
      required:
      - tags
      type: object
      properties:
        tags:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/Byname'
            - $ref: '#/components/schemas/Tag2'
          description: ''
    V2AccountsFilesDownloadResponse:
      title: V2AccountsFilesDownloadResponse
      type: object
      properties:
        url:
          type: string
    V2AccountsFilesLockRequest:
      title: V2AccountsFilesLockRequest
      type: object
      properties:
        time:
          type:
          - integer
          - 'null'
          description: When supplied, either a specific end time for lock or null for infinite lock duration
          contentEncoding: int32
        lockId:
          maxLength: 2048
          type:
          - string
          - 'null'
    V2AccountsFilesMetaMetaUidFileMetaUidRequest:
      title: V2AccountsFilesMetaMetaUidFileMetaUidRequest
      type: object
      properties:
        value:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          - type: boolean
          - {}
    V2AccountsFilesMetaMetaUidRequest:
      title: V2AccountsFilesMetaMetaUidRequest
      type: object
      properties:
        value:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          - type: boolean
          - {}
    V2AccountsFilesMetaRequest:
      title: V2AccountsFilesMetaRequest
      required:
      - metaUid
      - value
      type: object
      properties:
        metaUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        value:
          oneOf:
          - type: string
          - type: integer
            contentEncoding: int32
          - type: boolean
          - type: array
            items:
              oneOf:
              - type: string
              - type: integer
                contentEncoding: int32
              - type: boolean
          - {}
    V2AccountsFilesPeopleRequest:
      title: V2AccountsFilesPeopleRequest
      required:
      - people
      type: object
      properties:
        people:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/Byname'
            - $ref: '#/components/schemas/Person2'
          description: ''
    V2AccountsFilesPreviewResponse:
      title: V2AccountsFilesPreviewResponse
      type: object
      properties:
        url:
          type: string
    V2AccountsFilesRelatedRequest:
      title: V2AccountsFilesRelatedRequest
      required:
      - fileUid
      type: object
      properties:
        fileUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    V2AccountsFilesRequest:
      title: V2AccountsFilesRequest
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My entity name
        date:
          type:
          - string
          - 'null'
          contentEncoding: date
        dueDate:
          type:
          - string
          - 'null'
          contentEncoding: date
        note:
          maxLength: 65535
          type:
          - string
          - 'null'
        number:
          maxLength: 255
          type:
          - string
          - 'null'
        versionUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        retentionEnd:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retentionEnd'
          - description: "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
    V2AccountsFilesRestoreRequest:
      title: V2AccountsFilesRestoreRequest
      type: object
      properties:
        folderUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
    V2AccountsFilesSharesRequest:
      title: V2AccountsFilesSharesRequest
      required:
      - groupUid
      - userUid
      - email
      - role
      - settings
      - public
      type: object
      properties:
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        email:
          type: string
          examples:
          - someEmail@foo.bar
        role:
          $ref: '#/components/schemas/shareRole'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        public:
          const: 'True'
          type: string
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
    V2AccountsFilesTagsRequest:
      title: V2AccountsFilesTagsRequest
      required:
      - tags
      type: object
      properties:
        tags:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/Tag3'
            - $ref: '#/components/schemas/Tag2'
          description: ''
    V2AccountsFilesUnlockRequest:
      title: V2AccountsFilesUnlockRequest
      type: object
      properties:
        lockId:
          maxLength: 2048
          type:
          - string
          - 'null'
    V2AccountsFilesUnpackRequest:
      title: V2AccountsFilesUnpackRequest
      required:
      - overwrite
      - newFolder
      type: object
      properties:
        overwrite:
          type: boolean
          description: Overwrite existing files (add new version)
          examples:
          - false
        newFolder:
          type: boolean
          description: Create a new folder for the archive
          examples:
          - true
    V2AccountsFilesUnpackResponse:
      title: V2AccountsFilesUnpackResponse
      type: object
      properties:
        key:
          type: string
          examples:
          - GpW5kHBr
    V2AccountsFilesVersionsFileVersionUidDownloadResponse:
      title: V2AccountsFilesVersionsFileVersionUidDownloadResponse
      type: object
      properties:
        url:
          type: string
    V2AccountsFilesVersionsFileVersionUidPreviewResponse:
      title: V2AccountsFilesVersionsFileVersionUidPreviewResponse
      type: object
      properties:
        url:
          type: string
    V2AccountsFoldersMetaMetaUidRequest:
      title: V2AccountsFoldersMetaMetaUidRequest
      type: object
      properties:
        isRequired:
          type: boolean
          examples:
          - false
        isRecursive:
          type: boolean
          examples:
          - false
        includeFiles:
          type: boolean
          examples:
          - true
        includeLinks:
          type: boolean
          examples:
          - true
        includeFolders:
          type: boolean
          examples:
          - false
    V2AccountsFoldersMetaRequest:
      title: V2AccountsFoldersMetaRequest
      required:
      - metaUid
      type: object
      properties:
        metaUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        isRequired:
          type: boolean
          examples:
          - false
        isRecursive:
          type: boolean
          examples:
          - false
        includeFiles:
          type: boolean
          examples:
          - true
        includeLinks:
          type: boolean
          examples:
          - true
        includeFolders:
          type: boolean
          examples:
          - false
    V2AccountsFoldersRelatedRequest:
      title: V2AccountsFoldersRelatedRequest
      required:
      - entityUid
      type: object
      properties:
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    V2AccountsFoldersRequest:
      title: V2AccountsFoldersRequest
      type: object
      properties:
        name:
          maxLength: 255
          minLength: 1
          type: string
          examples:
          - My folder name
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
        visibleColumns:
          minItems: 3
          type: array
          items:
            $ref: '#/components/schemas/folderColumn'
          description: Array of columns to be shown by the client
        retention:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/retention'
          - description: Recycle/Permanently delete/Archive items after x time, counting from the time uploaded
        extra:
          $ref: '#/components/schemas/Extra'
        sectionOrder:
          maximum: 32767
          minimum: -32768
          type: integer
          description: User-configurable value for manually ordering sections
          contentEncoding: int32
          examples:
          - 0
        sort:
          type: string
          description: Column names, prefixed with a dash (`-`) for descending order, separated with a comma
          examples:
          - name
          - -meta:metaUID
          - meta:metaUID,-date,-size
        viewType:
          allOf:
          - $ref: '#/components/schemas/viewType'
          - description: View type of a folder listing
    V2AccountsFoldersRestoreRequest:
      title: V2AccountsFoldersRestoreRequest
      type: object
      properties:
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
    V2AccountsFoldersSharesRequest:
      title: V2AccountsFoldersSharesRequest
      required:
      - groupUid
      - userUid
      - email
      - role
      - settings
      - public
      type: object
      properties:
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        email:
          type: string
          examples:
          - someEmail@foo.bar
        role:
          $ref: '#/components/schemas/folderShareRole'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        public:
          const: 'True'
          type: string
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
    V2AccountsGroupsRequest:
      title: V2AccountsGroupsRequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
          examples:
          - My group
    V2AccountsGroupsUsersUserUidPermissionsResponse:
      title: V2AccountsGroupsUsersUserUidPermissionsResponse
      type: object
      properties:
        canView:
          type: boolean
          examples:
          - true
        canDelete:
          type: boolean
          examples:
          - true
    V2AccountsMetaOptionsOptionUidRequest:
      title: V2AccountsMetaOptionsOptionUidRequest
      required:
      - value
      type: object
      properties:
        value:
          maxLength: 255
          type: string
          examples:
          - meta name
        order:
          maximum: 65535
          minimum: 0
          type: integer
          contentEncoding: int32
          examples:
          - 1
    V2AccountsMetaOptionsRequest:
      title: V2AccountsMetaOptionsRequest
      required:
      - value
      type: object
      properties:
        value:
          maxLength: 255
          type: string
          examples:
          - meta name
        order:
          maximum: 65535
          minimum: 0
          type: integer
          contentEncoding: int32
          examples:
          - 1
    V2AccountsMetaRequest:
      title: V2AccountsMetaRequest
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        type:
          $ref: '#/components/schemas/metaType'
        multiple:
          type: boolean
          examples:
          - false
    V2AccountsPeopleRequest:
      title: V2AccountsPeopleRequest
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - Johnny Smith
    V2AccountsRemindersRequest:
      title: V2AccountsRemindersRequest
      type: object
      properties:
        email:
          maxLength: 255
          type: string
          readOnly: true
          examples:
          - someEmail@foo.bar
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        content:
          maxLength: 65535
          type: string
          examples:
          - Hello
        remindAt:
          type: string
          description: Unix timestamp
          examples:
          - '1537177837'
        recurrence:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Recurrence'
          - {}
    V2AccountsRequest:
      title: V2AccountsRequest
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - Account name
        indexing:
          type: boolean
          examples:
          - true
        language:
          type: string
          description: OCR language
          examples:
          - eng
    V2AccountsSearchEntitiesResponse:
      title: V2AccountsSearchEntitiesResponse
      type: object
      properties:
        hits:
          type: number
          examples:
          - 1
        entities:
          type: array
          items:
            $ref: '#/components/schemas/elasticEntityDefaultOrExpanded'
          description: ''
    V2AccountsSearchFilesResponse:
      title: V2AccountsSearchFilesResponse
      type: object
      properties:
        hits:
          type: number
          examples:
          - 1
        files:
          type: array
          items:
            $ref: '#/components/schemas/elasticEntityDefaultOrExpanded'
          description: ''
    V2AccountsSearchFoldersResponse:
      title: V2AccountsSearchFoldersResponse
      type: object
      properties:
        hits:
          type: number
          examples:
          - 1
        folders:
          type: array
          items:
            $ref: '#/components/schemas/elasticEntityDefaultOrExpanded'
          description: ''
    V2AccountsSearchSimpleResponse:
      title: V2AccountsSearchSimpleResponse
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/elasticEntityDefaultOrExpanded'
          description: ''
        files:
          type: array
          items:
            $ref: '#/components/schemas/elasticEntityDefaultOrExpanded'
          description: ''
    V2AccountsSharedItemsResponse:
      title: V2AccountsSharedItemsResponse
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/folderDefaultOrExpanded'
          description: ''
          readOnly: true
        files:
          type: array
          items:
            $ref: '#/components/schemas/fileDefaultOrExpanded'
          description: ''
          readOnly: true
    V2AccountsSharesRequest:
      title: V2AccountsSharesRequest
      required:
      - groupUid
      - userUid
      - email
      - role
      - settings
      type: object
      properties:
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        email:
          type: string
          examples:
          - someEmail@foo.bar
        role:
          $ref: '#/components/schemas/shareRole'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
    V2AccountsTagsRequest:
      title: V2AccountsTagsRequest
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - myTag
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
    V2AccountsTagsSharesRequest:
      title: V2AccountsTagsSharesRequest
      required:
      - groupUid
      - userUid
      - email
      - role
      - settings
      type: object
      properties:
        groupUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        userUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
        email:
          type: string
          examples:
          - someEmail@foo.bar
        role:
          $ref: '#/components/schemas/shareRole'
        settings:
          $ref: '#/components/schemas/Sharesettings'
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
    V2AccountsUnpackCheckRequest:
      title: V2AccountsUnpackCheckRequest
      required:
      - name
      type: object
      properties:
        name:
          type: string
          examples:
          - test.zip
    V2AccountsUsersRequest:
      title: V2AccountsUsersRequest
      type: object
      properties:
        position:
          maxLength: 250
          type:
          - string
          - 'null'
    V2UserPermissionsResponse:
      title: V2UserPermissionsResponse
      type: object
      properties:
        canCreateAccount:
          type: boolean
          examples:
          - true
    V2UserRequest:
      title: V2UserRequest
      type: object
      properties:
        title:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Mr.
        firstName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - John
        lastName:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - Smith
        phone:
          maxLength: 255
          type:
          - string
          - 'null'
          examples:
          - +123 456 7890
        defaultAccountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        locale:
          maxLength: 16
          type: string
          examples:
          - en-GB
        timezone:
          type: string
          examples:
          - Europe/London
          - Europe/Tallinn
    V2AccountsRequest1:
      title: V2AccountsRequest1
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - Account name
        indexing:
          type: boolean
          examples:
          - true
        language:
          type: string
          description: OCR language
          examples:
          - eng
        applyLanguageRecursive:
          type: boolean
          description: Apply account language to all child items
        applyLanguageFiles:
          type: boolean
          description: Apply account language to all files
        applyLanguageFolders:
          type: boolean
          description: Apply account language to all folders
    V2AccountsFilesRelatedRequest1:
      title: V2AccountsFilesRelatedRequest1
      required:
      - entityUid
      type: object
      properties:
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          examples:
          - Abc_123-XY
    V2AccountsMetaRequest1:
      title: V2AccountsMetaRequest1
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - meta name
        description:
          maxLength: 255
          type:
          - string
          - 'null'
        multiple:
          type: boolean
          examples:
          - false
    V2AccountsTagsRequest1:
      title: V2AccountsTagsRequest1
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          examples:
          - myTag
        parentUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type:
          - string
          - 'null'
    V2AccountsSharesRequest1:
      title: V2AccountsSharesRequest1
      type: object
      properties:
        role:
          $ref: '#/components/schemas/shareRole'
        status:
          $ref: '#/components/schemas/Status21'
        expiration:
          type:
          - integer
          - 'null'
          description: UTC timestamp
          contentEncoding: int32
          examples:
          - 1537177837
        settings:
          $ref: '#/components/schemas/Sharesettings'
    Versionadded:
      title: Versionadded
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileVersionNew
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Data2'
    Versionremoved:
      title: Versionremoved
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileVersionDelete
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Data2'
    Versionrestored:
      title: Versionrestored
      required:
      - id
      - uid
      - endpoint
      - user
      - ip
      - type
      - event
      - entityUid
      - accountUid
      - time
      - data
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1
        uid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          readOnly: true
          examples:
          - Abc_123-XY
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        user:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser'
          - {}
        activeUser:
          allOf:
          - oneOf:
            - {}
            - $ref: '#/components/schemas/Otheruser1'
          - {}
        ip:
          type: string
        type:
          const: file
          type: string
        event:
          const: fileVersionRestore
          type: string
        entityUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: File UID
          readOnly: true
          examples:
          - Abc_123-XY
        accountUid:
          maxLength: 10
          minLength: 10
          pattern: ^[a-zA-Z0-9_-]+$
          type: string
          description: Account UID
          readOnly: true
          examples:
          - Abc_123-XY
        time:
          type: integer
          contentEncoding: int32
          readOnly: true
          examples:
          - 1537177837
        requestKey:
          maxLength: 4
          type: string
          readOnly: true
        cause:
          allOf:
          - $ref: '#/components/schemas/Cause'
          - description: Used for marking actions performed by background processes
          readOnly: true
        data:
          $ref: '#/components/schemas/Data2'
    userDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/User'
      - $ref: '#/components/schemas/Userwithexpandedfields'
    groupDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Group'
      - $ref: '#/components/schemas/Groupwithexpandedfields2'
    teamUserDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Teamuser'
      - $ref: '#/components/schemas/Teamuserwithexpandedfields2'
    teamUserSignup:
      oneOf:
      - $ref: '#/components/schemas/ByuserUid'
      - $ref: '#/components/schemas/Usersignup'
    accountDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Account'
      - $ref: '#/components/schemas/Accountwithexpandedfields2'
    accountUserDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/AccountUser'
      - $ref: '#/components/schemas/AccountUserwithexpandedfields2'
    anyShare:
      oneOf:
      - $ref: '#/components/schemas/fileShare'
      - $ref: '#/components/schemas/folderShare'
      - $ref: '#/components/schemas/accountShare'
      - $ref: '#/components/schemas/tagShare'
    folderColumn:
      oneOf:
      - $ref: '#/components/schemas/AttributeColumn'
      - $ref: '#/components/schemas/MetaColumn'
    entityDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Entity'
      - $ref: '#/components/schemas/Entitywithexpandedfields'
    entityMeta:
      oneOf:
      - $ref: '#/components/schemas/Entitystringmeta'
      - $ref: '#/components/schemas/Entitytextmeta'
      - $ref: '#/components/schemas/Entityintegermeta'
      - $ref: '#/components/schemas/Entitydecimalmeta'
      - $ref: '#/components/schemas/Entitydatemeta'
      - $ref: '#/components/schemas/Entitydatetimemeta'
      - $ref: '#/components/schemas/Entitytimemeta'
      - $ref: '#/components/schemas/Entitybooleanmeta'
      - $ref: '#/components/schemas/EntityURLmeta'
      - $ref: '#/components/schemas/Entityemailmeta'
      - $ref: '#/components/schemas/Entityselectmeta'
    folderColumnWithMeta:
      oneOf:
      - $ref: '#/components/schemas/AttributeColumn'
      - $ref: '#/components/schemas/MetaColumn1'
    folderDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Folder'
      - $ref: '#/components/schemas/Folderwithexpandedfields'
    fileVersionDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Fileversion'
      - $ref: '#/components/schemas/Fileversionwithexpandedfields'
    fileDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/File'
      - $ref: '#/components/schemas/Filewithexpandedfields'
    resolutionDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Resolution'
      - $ref: '#/components/schemas/Resolutionwithexpandedfields'
    stepsArray:
      $ref: '#/components/schemas/step'
    timeoutValue:
      oneOf:
      - minimum: 0
        type: integer
        contentEncoding: int32
      - type: string
        contentEncoding: date-time
      - pattern: ^(\+\s*\d+\s*(second|minute|hour|day|week|month|year)s?)(\s+\+\s*\d+\s*(second|minute|hour|day|week|month|year)s?)*$
        type: string
    step:
      oneOf:
      - $ref: '#/components/schemas/moveStep'
      - $ref: '#/components/schemas/resolutionStep'
      - $ref: '#/components/schemas/addInvitesStep'
      - $ref: '#/components/schemas/resolutionCompleteStep'
      - $ref: '#/components/schemas/delayStep'
    workflowVersionDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Version'
      - $ref: '#/components/schemas/Versionwithexpandedfields'
    condition:
      oneOf:
      - $ref: '#/components/schemas/Sourceofevent'
      - minItems: 1
        type: array
        items:
          $ref: '#/components/schemas/type'
      - $ref: '#/components/schemas/Entityname'
    Conditions:
      $ref: '#/components/schemas/condition'
    workflowDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Workflow'
      - $ref: '#/components/schemas/Workflowwithexpandedfields'
    relatedEntityDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Relateditem'
      - $ref: '#/components/schemas/Relateditemwithexpandedfields2'
    Create1:
      oneOf:
      - $ref: '#/components/schemas/File1'
      - $ref: '#/components/schemas/Fileversion1'
      - $ref: '#/components/schemas/Archiveunpack'
    Complete:
      oneOf:
      - $ref: '#/components/schemas/File2'
      - $ref: '#/components/schemas/Fileversion2'
      - $ref: '#/components/schemas/Archiveunpack1'
    visibleColumns:
      allOf:
      - $ref: '#/components/schemas/folderColumn'
      - description: Array of columns to be shown by the client
    groupMember:
      oneOf:
      - $ref: '#/components/schemas/Groupmemberuser'
      - $ref: '#/components/schemas/Groupmemberchild'
    meta:
      oneOf:
      - $ref: '#/components/schemas/Stringmeta'
      - $ref: '#/components/schemas/Textmeta'
      - $ref: '#/components/schemas/Integermeta'
      - $ref: '#/components/schemas/Integermeta1'
      - $ref: '#/components/schemas/Datemeta'
      - $ref: '#/components/schemas/Datetimemeta'
      - $ref: '#/components/schemas/Timemeta'
      - $ref: '#/components/schemas/Booleanmeta'
      - $ref: '#/components/schemas/URLmeta'
      - $ref: '#/components/schemas/Emailmeta'
      - $ref: '#/components/schemas/Selectmeta'
      discriminator:
        propertyName: type
        mapping:
          string: Stringmeta
          text: Textmeta
          integer: Integermeta
          float: Integermeta1
          date: Datemeta
          datetime: Datetimemeta
          time: Timemeta
          boolean: Booleanmeta
          url: URLmeta
          email: Emailmeta
          select: Selectmeta
    elasticEntityDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/SearchResult'
      - $ref: '#/components/schemas/SearchResultwithexpandedfields2'
    createdFrom1:
      oneOf:
      - type: string
        contentEncoding: date-time
      - type: string
        contentEncoding: date
      description: From upload date
    createdTo1:
      oneOf:
      - type: string
        contentEncoding: date-time
      - type: string
        contentEncoding: date
      description: To upload date
    dateFrom1:
      oneOf:
      - type: string
        contentEncoding: date-time
      - type: string
        contentEncoding: date
      description: From date
    dateTo1:
      oneOf:
      - type: string
        contentEncoding: date-time
      - type: string
        contentEncoding: date
      description: To date
    properties-extension:
      oneOf:
      - type: string
        examples:
        - txt
      - type: array
        items:
          type: string
        examples:
        - - txt
          - doc
      description: Extension
    properties-tag:
      oneOf:
      - type: string
      - type: array
        items:
          type: string
      description: Tag
    properties-person:
      oneOf:
      - type: string
      - type: array
        items:
          type: string
      description: Person
    properties-meta:
      oneOf:
      - $ref: '#/components/schemas/Exists'
      - $ref: '#/components/schemas/String'
      - $ref: '#/components/schemas/Text'
      - $ref: '#/components/schemas/Integer'
      - $ref: '#/components/schemas/Decimal'
      - $ref: '#/components/schemas/Date'
      - $ref: '#/components/schemas/Datetime'
      - $ref: '#/components/schemas/Time'
      - $ref: '#/components/schemas/Boolean'
      - $ref: '#/components/schemas/URL'
      - $ref: '#/components/schemas/E-mail'
      - $ref: '#/components/schemas/Select'
      description: Include meta
    elasticEntity_properties-sort:
      oneOf:
      - type: string
      - type: string
        contentEncoding: base64
    dateDueFrom1:
      oneOf:
      - type: string
        contentEncoding: date-time
      - type: string
        contentEncoding: date
      description: From date due
    dateDueTo1:
      oneOf:
      - type: string
        contentEncoding: date-time
      - type: string
        contentEncoding: date
      description: To date due
    filterItem3:
      oneOf:
      - $ref: '#/components/schemas/query'
      - $ref: '#/components/schemas/createdFrom'
      - $ref: '#/components/schemas/createdTo'
      - $ref: '#/components/schemas/dateFrom'
      - $ref: '#/components/schemas/dateTo'
      - $ref: '#/components/schemas/dateOrCreatedFrom'
      - $ref: '#/components/schemas/dateOrCreatedTo'
      - $ref: '#/components/schemas/dateDueFrom'
      - $ref: '#/components/schemas/dateDueTo'
      - $ref: '#/components/schemas/extension'
      - $ref: '#/components/schemas/filterItem'
      - $ref: '#/components/schemas/tagUid'
      - $ref: '#/components/schemas/filterItem1'
      - $ref: '#/components/schemas/filterItem2'
      - $ref: '#/components/schemas/parentUid'
      - $ref: '#/components/schemas/meta1'
      - $ref: '#/components/schemas/relatedUid'
      - $ref: '#/components/schemas/hasRelations'
      - $ref: '#/components/schemas/mailSubject'
      - $ref: '#/components/schemas/mailSenderEmail'
      - $ref: '#/components/schemas/mailSenderName'
      - $ref: '#/components/schemas/mailContent'
      - $ref: '#/components/schemas/language'
    Fileentries1:
      oneOf:
      - $ref: '#/components/schemas/Fileuploaded'
      - $ref: '#/components/schemas/Fileduplicated'
      - $ref: '#/components/schemas/Filedownloaded'
      - $ref: '#/components/schemas/Filepreviewdownloaded'
      - $ref: '#/components/schemas/Filedeleted'
      - $ref: '#/components/schemas/Filerenamed'
      - $ref: '#/components/schemas/Notechanged'
      - $ref: '#/components/schemas/Datechanged'
      - $ref: '#/components/schemas/Duedatechanged'
      - $ref: '#/components/schemas/Versionadded'
      - $ref: '#/components/schemas/Versionremoved'
      - $ref: '#/components/schemas/Versionrestored'
      - $ref: '#/components/schemas/Relateditemadded'
      - $ref: '#/components/schemas/Relateditemremoved'
      - $ref: '#/components/schemas/Tagadded'
      - $ref: '#/components/schemas/Tagremoved'
      - $ref: '#/components/schemas/Personadded'
      - $ref: '#/components/schemas/Personremoved'
      - $ref: '#/components/schemas/Filemoved'
      - $ref: '#/components/schemas/Filelocked'
      - $ref: '#/components/schemas/Fileunlocked'
      - $ref: '#/components/schemas/Fileshared'
      - $ref: '#/components/schemas/Shareremoved'
      - $ref: '#/components/schemas/Sharerolechanged'
      - $ref: '#/components/schemas/Shareactivated'
      - $ref: '#/components/schemas/Sharedeactivated'
      - $ref: '#/components/schemas/Shareexpirationchanged'
      - $ref: '#/components/schemas/FileMetacreated'
      - $ref: '#/components/schemas/FileMetadeleted'
      - $ref: '#/components/schemas/FileMetavaluechanged'
      - oneOf:
        - $ref: '#/components/schemas/Fileretentionchanged'
        - $ref: '#/components/schemas/Fileretentionchanged1'
      - $ref: '#/components/schemas/FileApprovalstarted'
      - $ref: '#/components/schemas/FileApprovalcancelled'
      - $ref: '#/components/schemas/FileApprovalapproved'
      - $ref: '#/components/schemas/FileApprovalrejected'
      - $ref: '#/components/schemas/FileApprovalresponseapproved'
      - $ref: '#/components/schemas/FileApprovalresponserejected'
      - $ref: '#/components/schemas/FileOCRlanguagechanged'
      - $ref: '#/components/schemas/Filenumberchanged'
      - $ref: '#/components/schemas/Fileopenedforonlineviewing'
      - $ref: '#/components/schemas/Fileopenedforonlineediting'
    Folderentries:
      oneOf:
      - $ref: '#/components/schemas/Foldercreated'
      - $ref: '#/components/schemas/Folderduplicated'
      - $ref: '#/components/schemas/Folderdownloaded'
      - $ref: '#/components/schemas/Folderdeleted'
      - $ref: '#/components/schemas/Folderrename'
      - $ref: '#/components/schemas/Foldervisiblecolumnschanged'
      - $ref: '#/components/schemas/Foldermoved'
      - $ref: '#/components/schemas/Newfile'
      - $ref: '#/components/schemas/Duplicatedfile'
      - $ref: '#/components/schemas/Newsubfolder'
      - $ref: '#/components/schemas/Duplicatedsubfolder'
      - $ref: '#/components/schemas/Filedeleted1'
      - $ref: '#/components/schemas/Subfolderdeleted'
      - $ref: '#/components/schemas/Subfoldermovedaway'
      - $ref: '#/components/schemas/Subfoldermovedin'
      - $ref: '#/components/schemas/Filemovedaway'
      - $ref: '#/components/schemas/Filemovedin'
      - $ref: '#/components/schemas/Foldershared'
      - $ref: '#/components/schemas/Shareremoved1'
      - $ref: '#/components/schemas/Sharerolechanged1'
      - $ref: '#/components/schemas/Shareactivated1'
      - $ref: '#/components/schemas/Sharedeactivated1'
      - $ref: '#/components/schemas/Shareexpirationchanged1'
      - $ref: '#/components/schemas/FolderMetacreated'
      - $ref: '#/components/schemas/FolderMetadeleted'
      - $ref: '#/components/schemas/FolderMetarequiredchanged'
      - $ref: '#/components/schemas/FolderMetarecursivechanged'
      - $ref: '#/components/schemas/Archiveuncompressed'
      - $ref: '#/components/schemas/Folderretentionchanged'
      - $ref: '#/components/schemas/FolderAutomatedWorkflowactivated'
      - $ref: '#/components/schemas/FolderAutomatedWorkflowdeactivated'
      - $ref: '#/components/schemas/FolderAutomatedWorkflowsettoinherit'
      - $ref: '#/components/schemas/FolderAutomatedWorkflowmethodchanged'
      - $ref: '#/components/schemas/FolderAutomatedWorkflowtypechanged'
      - $ref: '#/components/schemas/FolderAutomatedWorkflowrecursionchanged'
      - $ref: '#/components/schemas/FolderAutomatedWorkflowtextchanged'
      - $ref: '#/components/schemas/FolderOCRlanguagechanged'
      - $ref: '#/components/schemas/AutomatedNumberingactivated'
      - $ref: '#/components/schemas/AutomatedNumberingdeactivated'
      - $ref: '#/components/schemas/AutomatedNumberingsettoinherit'
      - $ref: '#/components/schemas/AutomatedNumberingschemechanged'
      - $ref: '#/components/schemas/AutomatedNumberingnamechanged'
      - $ref: '#/components/schemas/AutomatedNumberingresetchanged'
      - $ref: '#/components/schemas/AutomatedNumberingnextnumberchanged'
      - $ref: '#/components/schemas/AutomatedNumberingrecursionchanged'
      - $ref: '#/components/schemas/AutomatedNumberinginclusionoffileschanged'
      - $ref: '#/components/schemas/AutomatedNumberinginclusionoflinkschanged'
      - $ref: '#/components/schemas/AutomatedNumberinginclusionoffolderschanged'
      - $ref: '#/components/schemas/Createdmail-inaddress'
      - $ref: '#/components/schemas/Activatedmail-inaddress'
      - $ref: '#/components/schemas/Deactivatedmail-inaddress'
    Accountentries:
      oneOf:
      - $ref: '#/components/schemas/Accountcreated'
      - $ref: '#/components/schemas/Accountdeleted'
      - $ref: '#/components/schemas/Accountrenamed'
      - $ref: '#/components/schemas/Accountindexingchanged'
      - $ref: '#/components/schemas/Accountteamfoldertoggled'
      - $ref: '#/components/schemas/Accountinboxtoggled'
      - $ref: '#/components/schemas/Accountwatermarkingtoggled'
      - $ref: '#/components/schemas/Accountdownloaded'
      - $ref: '#/components/schemas/Sectioncreated'
      - $ref: '#/components/schemas/Sectionduplicated'
      - $ref: '#/components/schemas/Sectiondeleted'
      - $ref: '#/components/schemas/Accountshared'
      - $ref: '#/components/schemas/Shareremoved2'
      - $ref: '#/components/schemas/Sharerolechanged2'
      - $ref: '#/components/schemas/Shareactivated2'
      - $ref: '#/components/schemas/Sharedeactivated2'
      - $ref: '#/components/schemas/Shareexpirationchanged2'
      - $ref: '#/components/schemas/Tagcreated'
      - $ref: '#/components/schemas/Tagdeleted'
      - $ref: '#/components/schemas/Tagnamechanged'
      - $ref: '#/components/schemas/Personcreated'
      - $ref: '#/components/schemas/Persondeleted'
      - $ref: '#/components/schemas/Personnamechanged'
      - $ref: '#/components/schemas/Metacreated'
      - $ref: '#/components/schemas/Metadeleted'
      - $ref: '#/components/schemas/Metanamechanged'
      - $ref: '#/components/schemas/Metadescriptionchanged'
      - $ref: '#/components/schemas/Teamusercreated'
      - $ref: '#/components/schemas/Teamuserremoved'
      - $ref: '#/components/schemas/Teamuseraccepted'
      - $ref: '#/components/schemas/Teamuserrejected'
      - $ref: '#/components/schemas/Teamuseradoptioninvitation'
      - $ref: '#/components/schemas/Teamuseradoptioninvitationremoval'
      - $ref: '#/components/schemas/Teamuseradoptionaccepted'
      - $ref: '#/components/schemas/Teamuseradoptionrejected'
      - $ref: '#/components/schemas/Groupcreated'
      - $ref: '#/components/schemas/Groupdeleted'
      - $ref: '#/components/schemas/Grouprenamed'
      - $ref: '#/components/schemas/Groupmemberuseradded'
      - $ref: '#/components/schemas/Groupmemberuserremoved'
      - $ref: '#/components/schemas/Groupmemberchildadded'
      - $ref: '#/components/schemas/Groupmemberchildremoved'
      - $ref: '#/components/schemas/AccountOCRlanguagechanged'
      - $ref: '#/components/schemas/Accountsectionsreordered'
      - $ref: '#/components/schemas/AutomatedFileNumberingenabled'
      - $ref: '#/components/schemas/AutomatedFileNumberingdisabled'
      - $ref: '#/components/schemas/AutomatedFileNumberingschemechanged'
      - $ref: '#/components/schemas/AutomatedFileNumberingnamechanged'
      - $ref: '#/components/schemas/AutomatedFileNumberingresetchanged'
      - $ref: '#/components/schemas/AutomatedFileNumberingnextnumberchanged'
    resolutionInviteDefaultOrExpanded:
      oneOf:
      - $ref: '#/components/schemas/Resolutioninvite1'
      - $ref: '#/components/schemas/Resolutioninvitewithexpandedfields2'
    Conditions1:
      $ref: '#/components/schemas/condition'
  securitySchemes:
    openIdConnect:
      type: http
      description: "This API uses [OpenID Connect](https://openid.net/connect/) for authentication.  \nAccess Tokens should be used as a Bearer credential and transmitted in an HTTP Authorization header to the API.\n"
      scheme: bearer
    OAuth:
      type: oauth2
      description: "This API uses [OAuth 2.0](https://oauth.net/2/) for authentication. Available grant types are described below.  \nAccess Tokens should be used as a Bearer credential and transmitted in an HTTP Authorization header to the API.\n"
      flows:
        clientCredentials:
          tokenUrl: https://auth.folderit.com/oauth2/token
          scopes: {}
        authorizationCode:
          authorizationUrl: https://auth.folderit.com/oauth2/auth
          tokenUrl: https://auth.folderit.com/oauth2/token
          scopes: {}
security:
- openIdConnect: []
- OAuth: []
tags:
- name: User
  description: User-related operations
- name: Account
  description: Account-related operations
- name: Entity
  description: Entity-related operations
- name: Folder
  description: Folder-related operations
- name: File
  description: File-related operators
- name: Meta
  description: Meta-related operations
- name: Tag
  description: Tag-related operations
- name: Person
  description: Person-related operations
- name: Reminder
  description: Reminder-related operations
- name: Resolution
  description: Resolution-related operations
- name: Workflow
  description: Workflow-related operations
- name: Share
  description: Share-related operations
- name: Group
  description: Group-related operations
- name: Plan
  description: Plan-related operations
- name: Search
  description: Search-related operations
- name: Audit
  description: Audit-related operations
- name: Permission
  description: Permission-related operations
