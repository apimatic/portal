{
  "swaggerVersion": "1.2",
  "basePath": "https://api.folderit.com",
  "resourcePath": "/",
  "apis": [
    {
      "path": "/v2/user",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns user details",
          "nickname": "getUser",
          "parameters": [
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include additional information (comma-separated).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "editUser",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2UserRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include additional information (comma-separated).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/user/billing",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "editUserBilling",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/user/countries",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSupportedCountries",
          "parameters": [],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "string"
        }
      ]
    },
    {
      "path": "/v2/user/countries/{locale}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSupportCountriesInLocale",
          "parameters": [
            {
              "name": "locale",
              "description": "Locale",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "string"
        }
      ]
    },
    {
      "path": "/v2/user/locales",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSupportedLocales",
          "parameters": [],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "string"
        }
      ]
    },
    {
      "path": "/v2/user/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getUserPermissions",
          "parameters": [],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2UserPermissionsResponse"
        }
      ]
    },
    {
      "path": "/v2/users",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "signupUser",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "newUserSignup"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Otheruser"
        }
      ]
    },
    {
      "path": "/v2/users/{userUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getUserByUid",
          "parameters": [
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Otheruser"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/users/{userUid}/shares",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getUserShares",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "cursor",
              "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/users/{userUid}/access",
      "operations": [
        {
          "method": "GET",
          "summary": "All shares (including through groups) accessible by an user",
          "nickname": "getAllUserShares",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "cursor",
              "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/team-users",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getTeamUsers",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include additional information (comma-separated).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "100",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * email\n  * name",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addTeamUser",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include additional information (comma-separated).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/team-users/{userUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getTeamUser",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include additional information (comma-separated).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts",
      "operations": [
        {
          "method": "GET",
          "summary": "Returns available accounts",
          "nickname": "getAccounts",
          "parameters": [
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained using a dot.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "createAccount",
          "parameters": [
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained using a dot.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAccount",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained using a dot.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateAccount",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsRequest1"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained using a dot.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteAccount",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained using a dot.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAccountPermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "permissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/users",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAccountUsers",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/users/{userUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAccountUser",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateAccountUser",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsUsersRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteAccountUser",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/section-order",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSectionOrder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "PUT",
          "summary": "Unlisted sections will be ordered by name after listed sections",
          "nickname": "updateSectionOrder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/download",
      "operations": [
        {
          "method": "GET",
          "summary": "To download whole account, omit files and folders properties  \nAlternatively, POST request is also supported\n",
          "nickname": "downloadFilesAndFoldersBundle",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/octet-stream",
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntities",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt\n  * type\n  * retentionEnd",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntity",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateEntity",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteEntity",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/entities",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntitiesByParent",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "sort",
              "description": "Comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * date\n  * due_date\n  * size\n  * mail_sender\n  * retention_end\n  * language\n  * number\n  * created_at\n  * updated_at\n  * recycle_date\n  * creator\n  * extension\n  * meta:{uid}",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "sort-folders-first",
              "description": "Set folders to be sorted first in results",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "extension",
              "description": "Filter by extension",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/all",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAllEntities",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "cursor",
              "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "folders",
              "description": "Include folders. If only specifying one, the other is opposite value",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "files",
              "description": "Include files. If only specifying one, the other is opposite value",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "parentUid",
              "description": "Limit response to entities below specific parent",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "extension",
              "description": "Filter by extension",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/parents",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntityParents",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/related",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntityRelatedItems",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Pagination",
              "description": "If present (any value), the response is a paginated, sortable list",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * createdAt\n  * entityUid",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addEntityRelatedItem",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesRelatedRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteEntityRelatedItem",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesRelatedRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/restore",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "restoreEntity",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesRestoreRequest"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/purge",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "deleteEntityPermanently",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/action/duplicate",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "duplicateEntities",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "duplicate"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "duplicationStatus"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/action/duplicate/{statusKey}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getDuplicationStatus",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "statusKey",
              "description": "Duplication status key",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "duplicationStatus"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/recycle-bin",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getRecycledEntities",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "parentUid",
              "description": "Limit response to entities below specific parent",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "DELETE",
          "summary": "Purge all entities from the recycle bin",
          "nickname": "emptyRecycleBin",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 500,
              "responseModel": "500serverError1",
              "message": "Internal Server Error"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/shared-entities",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSharedEntities",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/tags/{tagUid}/entities",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntitiesByTag",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "cursor",
              "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "extension",
              "description": "Filter by extension",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/files",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFilesByParent",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/reports/file-list",
      "operations": [
        {
          "method": "GET",
          "summary": "Use [`GET /v2/accounts/{accountUid}/entities/all`](#tag/Entity/operation/getAllEntities) instead",
          "nickname": "getAccountFileReport",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "limit",
              "description": "File count limit",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "10000",
              "minimum": "1",
              "maximum": "100000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "last",
              "description": "Start output after this UID",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "File3"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "createFolder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateFolder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFoldersRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFolder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/email",
      "operations": [
        {
          "method": "POST",
          "summary": "Request body is optional, action defaults to `activate`",
          "nickname": "configureFolderEmail",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Mailinaddress"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFolderEmail",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Mailinaddress"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "requestNewFolderEmailAddress",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Mailinaddress"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolderPermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "folder_propertiespermissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/folders",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolderByParent",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/related",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolderRelatedItems",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFolderRelatedItem",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFoldersRelatedRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFolderRelatedItem",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFoldersRelatedRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/restore",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "restoreFolder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFoldersRestoreRequest"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/purge",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "deleteFolderPermanently",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/recycle-bin/folders",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getRecycledFolders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/shared-items",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSharedFilesAndFolders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountsSharedItemsResponse"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/upload",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "uploadFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "Upload process:  \n* Send a \"create\" action, You'll receive an `uploadId` and `key`  \n  `Parts` property is optional: if present, upload URLs are provided with the \"create\" action response.  \n  `Unpack` property is optional: include to test for archive support and size limit before commencing upload process\n\n* Request upload URLs with the \"part\" action for every part you require, min part size (except for last part) is 5 MB, max part size is 5 GB  \n  Parts are counted up from 1  \n  Maximum number of parts: 10000\n\n* Send part content to received URLs with a PUT request\n* After all parts have been uploaded, send a \"complete\" request to the API, which will finalize file creation.  \n  Failure to do so will result in deletion of the uploaded parts.\n\n* Each URL has a lifetime of 48 hours and can be re-requested, if necessary\n* Sending an \"abort\" action will remove all uploaded parts immediately",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFilePermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "propertiespermissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/lock",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "lockFilePost",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesLockRequest"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "lockFilePut",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesLockRequest"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "unlockFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/unlock",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "unlockFile2",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesUnlockRequest"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/related",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileRelatedItems",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFileRelatedItem",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFileRelatedItem",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/restore",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "restoreFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesRestoreRequest"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/purge",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "deleteFilePermanently",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/versions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileVersions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Pagination",
              "description": "If present (any value), the response is a paginated, sortable list",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * createdAt\n  * uid\n  * size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFileVersion",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileVersionUid",
              "description": "File Version UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/download",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileDownloadUrl",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/download",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileVersionDownloadUrl",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileVersionUid",
              "description": "File Version UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/preview",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFilePreviewDownloadUrl",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/preview",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileVersionPreviewDownloadUrl",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileVersionUid",
              "description": "File Version UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/recycle-bin/files",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getRecycledFiles",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/unpack",
      "operations": [
        {
          "method": "POST",
          "summary": "After initiating unpacking, check status with received key",
          "nickname": "unpackArchiveFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesUnpackRequest"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountsFilesUnpackResponse"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/unpack/status/{key}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getUnpackStatus",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "key",
              "description": "Unpack key",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/unpack/check",
      "operations": [
        {
          "method": "POST",
          "summary": "Send a filename to check if system supports unpacking it",
          "nickname": "checkUnpackSupport",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsUnpackCheckRequest"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "boolean"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/document-languages",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getDocumentOcrLanguages",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "string"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/meta",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getMetas",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsMetaRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/meta/{metaUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsMetaRequest1"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/meta/{metaUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getMetaPermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/meta/{metaUid}/options",
      "operations": [
        {
          "method": "POST",
          "summary": "",
          "nickname": "addMetaOptions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsMetaOptionsRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "MetaSelectOption"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/meta/{metaUid}/options/{optionUid}",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateMetaOption",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "optionUid",
              "description": "Meta Select Option UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsMetaOptionsOptionUidRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "MetaSelectOption"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteMetaOption",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "optionUid",
              "description": "Meta Select Option UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "MetaSelectOption"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/meta",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntityMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addEntityMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesMetaRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}",
      "operations": [
        {
          "method": "PUT",
          "summary": "In case of having multiple file metas referencing the same meta, the selection of affected entity meta is undetermined, use [`PUT /accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}/{entityMetaUid}`](#tag/Entity/operation/editSpecificEntityMeta) instead.",
          "nickname": "editEntityMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesMetaMetaUidRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteEntityMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}/{entityMetaUid}",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "editSpecificEntityMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityMetaUid",
              "description": "Entity Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteSpecificEntityMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityMetaUid",
              "description": "Entity Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/active-meta",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getActiveEntityMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Foldermeta"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/meta",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFileMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesMetaRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}",
      "operations": [
        {
          "method": "PUT",
          "summary": "In case of having multiple file metas referencing the same meta, the selection of affected file meta is undetermined, use [`PUT /accounts/{accountUid}files/{fileUid}/meta/{metaUid}/{fileMetaUid}`](#tag/Meta/operation/updateSpecificFileMeta) instead.",
          "nickname": "updateFileMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesMetaMetaUidRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFileMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}/{fileMetaUid}",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateSpecificFileMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileMetaUid",
              "description": "File Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesMetaMetaUidFileMetaUidRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteSpecificFileMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileMetaUid",
              "description": "File Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/active-meta",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileActiveMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Foldermeta"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/meta",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolderMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Foldermeta"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFolderMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFoldersMetaRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Foldermeta"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/meta/{metaUid}",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateFolderMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFoldersMetaMetaUidRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Foldermeta"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFolderMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "metaUid",
              "description": "Meta UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Foldermeta"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/active-meta",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolderActiveMeta",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Foldermeta"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/tags",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addTag",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsTagsRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Tag"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/tags/root",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getRootTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/tags/{tagUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getTag",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Tag"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateTag",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsTagsRequest1"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Tag"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteTag",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Tag"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/tags/{tagUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getTagPermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "tag_propertiespermissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/tags/{tagUid}/tags",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSubTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/tags",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntityTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addEntityTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsEntitiesTagsRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/tags/{tagUid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteEntityTag",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Tag"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/tags",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFileTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesTagsRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/tags/{tagUid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFileTags",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Tag"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/people",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getPeople",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Person"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addPerson",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsPeopleRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Person"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/people/{personUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getPerson",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "personUid",
              "description": "Person UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Person"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updatePerson",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "personUid",
              "description": "Person UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsPeopleRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Person"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deletePerson",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "personUid",
              "description": "Person UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Person"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/people/{personUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getPersonPermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "personUid",
              "description": "Person UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "person_propertiespermissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/people",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFilePeople",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Person"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFilePeople",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesPeopleRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Person"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/people/{personUid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteFilePerson",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "personUid",
              "description": "Person UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Lock",
              "description": "File lockId value for updating a locked file",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Person"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/reminders",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAllReminders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Pagination",
              "description": "If present (any value), the response is a paginated, sortable list",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/reminders/{reminderUid}",
      "operations": [
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateReminder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "reminderUid",
              "description": "Reminder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsRemindersRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "reminder"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteReminder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "reminderUid",
              "description": "Reminder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "reminder"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/reminders",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileReminders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Pagination",
              "description": "If present (any value), the response is a paginated, sortable list",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFileReminders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "AddRemindersRequest"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/reminders",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolderReminders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Pagination",
              "description": "If present (any value), the response is a paginated, sortable list",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addFolderReminders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "AddRemindersRequest"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/reminders",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntityReminders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Pagination",
              "description": "If present (any value), the response is a paginated, sortable list",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "20",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "defaultValue": "",
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addEntityReminders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "AddRemindersRequest"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/resolutions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntityResolutions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addEntityResolution",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "resolutioncreate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 409,
              "responseModel": "409conflict1",
              "message": "Conflict"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/resolutions/{resolutionUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getResolution",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateResolution",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "resolutionupdate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteResolution",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/resolutions/{resolutionUid}/invites",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getResolutionInvites",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addResolutionInvites",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "items": {
                "type": "resolutioninvite"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/resolutions/{resolutionUid}/invites/{resolutionInviteUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getResolutionInvite",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionInviteUid",
              "description": "Resolution invite UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateResolutionInvite",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionInviteUid",
              "description": "Resolution invite UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "inviteupdate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteResolutionInvite",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionUid",
              "description": "Resolution UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "resolutionInviteUid",
              "description": "Resolution invite UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/entities/{entityUid}/workflows",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getEntityWorkflows",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addEntityWorkflow",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "entityUid",
              "description": "Entity UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "workflowcreate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/workflows",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAccountWorkflows",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addWorkflow",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "workflowcreate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/workflows/all",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAllWorkflows",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/workflows/{workflowUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getWorkflow",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateWorkflow",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "workflowupdate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteWorkflow",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/workflows/{workflowUid}/versions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getWorkflowVersions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addWorkflowVersion",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "workflowversioncreate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/workflows/{workflowUid}/versions/{workflowVersionId}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getWorkflowVersion",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowVersionId",
              "description": "Workflow version ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateWorkflowVersion",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowVersionId",
              "description": "Workflow version ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "workflowversionupdate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated) from the expanded variant of response.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteWorkflowVersion",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowVersionId",
              "description": "Workflow version ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/workflows/{workflowUid}/triggers",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getWorkflowTriggers",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Trigger"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addWorkflowTrigger",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "workflowtriggercreate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Trigger"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/workflows/{workflowUid}/triggers/{workflowTriggerId}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getWorkflowTrigger",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowTriggerId",
              "description": "Workflow trigger ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Trigger"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateWorkflowTrigger",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowTriggerId",
              "description": "Workflow trigger ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "workflowtriggerupdate"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteWorkflowTrigger",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowUid",
              "description": "Workflow UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "workflowTriggerId",
              "description": "Workflow trigger ID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "void"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/access/users",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAllUsersWithAccess",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Otheruser"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/shares",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "listAccountShares",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "accountShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "shareAccount",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsSharesRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "accountShare"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/shares/{shareUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getShare",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "shareUid",
              "description": "Share UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateShare",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "shareUid",
              "description": "Share UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsSharesRequest1"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteShare",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "shareUid",
              "description": "Share UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/shares/{shareUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getSharePermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "shareUid",
              "description": "Share UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "share_propertiespermissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/shares",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "listFileShares",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "fileShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "shareFile",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFilesSharesRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "fileShare"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/shares",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "listFolderShares",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "folderShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "shareFolder",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsFoldersSharesRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "folderShare"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/tags/{tagUid}/shares",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "listTagShares",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "tagShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "shareTag",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "tagUid",
              "description": "Tag UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsTagsSharesRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "tagShare"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/access/public",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAllPublicShares",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/access/unaccepted",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAllUnacceptedShareEmails",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroups",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example groups.groups)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addGroup",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsGroupsRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroup",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example groups.groups)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "PUT",
          "summary": "",
          "nickname": "updateGroup",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "V2AccountsGroupsRequest"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        },
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteGroup",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroupPermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "group_propertiespermissions"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/shares",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroupSharedItems",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example entity.meta).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/members",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroupMembers",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addGroupMember",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/members/{memberUid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteGroupMember",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "memberUid",
              "description": "Member UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "type": "object"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/users",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroupUsers",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Groupmemberuser"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addGroupUser",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "object"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Otheruser"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteGroupUser",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Otheruser"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}/permissions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroupUserPermissions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "userUid",
              "description": "User UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountsGroupsUsersUserUidPermissionsResponse"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/children",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getGroupChildren",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "50",
              "minimum": "1",
              "maximum": "100",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Groupmemberchild"
          },
          "uniqueItems": false,
          "type": "array"
        },
        {
          "method": "POST",
          "summary": "",
          "nickname": "addGroupChild",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "Content-Type",
              "description": "",
              "paramType": "header",
              "required": true,
              "allowMultiple": false,
              "defaultValue": "application/json",
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "body",
              "description": "",
              "paramType": "body",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "Byuid"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "consumes": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 422,
              "responseModel": "422unprocessableEntity1",
              "message": "Unprocessable entity"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Groupmemberchild"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/groups/{groupUid}/children/{childUid}",
      "operations": [
        {
          "method": "DELETE",
          "summary": "",
          "nickname": "deleteGroupChild",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "groupUid",
              "description": "Group UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "childUid",
              "description": "Child UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "X-Folderit-Request-Key",
              "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user.",
              "paramType": "header",
              "required": false,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "Groupmemberchild"
        }
      ]
    },
    {
      "path": "/v2/plans",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getPlans",
          "parameters": [
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Plan"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/search/simple",
      "operations": [
        {
          "method": "GET",
          "summary": "Alternatively, POST request is also supported",
          "nickname": "searchAutocomplete",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.meta)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountsSearchSimpleResponse"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/search/entities",
      "operations": [
        {
          "method": "GET",
          "summary": "Alternatively, POST request is also supported",
          "nickname": "searchEntities",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.meta)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountsSearchEntitiesResponse"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/search/files",
      "operations": [
        {
          "method": "GET",
          "summary": "Alternatively, POST request is also supported",
          "nickname": "searchFiles",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.meta)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountsSearchFilesResponse"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/search/folders",
      "operations": [
        {
          "method": "GET",
          "summary": "Alternatively, POST request is also supported",
          "nickname": "searchFolders",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained (for example file.meta)",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 404,
              "responseModel": "404notFound1",
              "message": "Not Found"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "uniqueItems": false,
          "$ref": "V2AccountsSearchFoldersResponse"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/search/extensions",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getUsedFileExtensions",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/audit/accountLog",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAccountRecentAuditTrail",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Default sort: `-id`. If request body contains `id` or `uid` parameter then the default sort is `id`",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained using a dot.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/audit",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getAccountAuditTrail",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "expand",
              "description": "Include related information (comma-separated). Can be chained using a dot.",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/files/{fileUid}/audit",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileAuditTrail",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "fileUid",
              "description": "File UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/folders/{folderUid}/audit",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFolderAuditTrail",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "folderUid",
              "description": "Folder UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    },
    {
      "path": "/v2/accounts/{accountUid}/audit/syncLog",
      "operations": [
        {
          "method": "GET",
          "summary": "",
          "nickname": "getFileSyncLog",
          "parameters": [
            {
              "name": "accountUid",
              "description": "Account UID",
              "paramType": "path",
              "required": true,
              "allowMultiple": false,
              "uniqueItems": false,
              "type": "string"
            },
            {
              "name": "page",
              "description": "Pagination page",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "minimum": "1",
              "maximum": "",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "per-page",
              "description": "Pagination page size",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "defaultValue": "500",
              "minimum": "1",
              "maximum": "1000",
              "uniqueItems": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "sort",
              "description": "Default sort: `-id`. If request body contains `id` or `uid` parameter then the default sort is `id`",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            },
            {
              "name": "fields",
              "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField).",
              "paramType": "query",
              "required": false,
              "allowMultiple": false,
              "items": {
                "type": "string"
              },
              "uniqueItems": false,
              "type": "array"
            }
          ],
          "authorizations": {
            "openIdConnect": []
          },
          "produces": [
            "application/json"
          ],
          "responseMessages": [
            {
              "code": 400,
              "responseModel": "400badRequest1",
              "message": "Bad Request"
            },
            {
              "code": 403,
              "responseModel": "403forbidden1",
              "message": "Forbidden"
            },
            {
              "code": 401,
              "responseModel": "401unauthorized1",
              "message": "Unauthorized"
            }
          ],
          "items": {
            "$ref": "Fileentries"
          },
          "uniqueItems": false,
          "type": "array"
        }
      ]
    }
  ],
  "models": {
    "Userprovider": {
      "id": "Userprovider",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "providerId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "providerValue": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "providerName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "User": {
      "id": "User",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locale": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "planId": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "taxNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "registerNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "title": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userType": {
          "description": "",
          "enum": [
            "private",
            "company"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "timezone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "providers": {
          "description": "",
          "items": {
            "$ref": "Userprovider"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Userwithexpandfields": {
      "id": "Userwithexpandfields",
      "required": [],
      "properties": {
        "dateFormat": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timeFormat": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Userwithexpandedfields": {
      "id": "Userwithexpandedfields",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locale": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "planId": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "taxNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "registerNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "title": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userType": {
          "description": "",
          "enum": [
            "private",
            "company"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "timezone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "providers": {
          "description": "",
          "items": {
            "$ref": "Userprovider"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "dateFormat": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timeFormat": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Private": {
      "id": "Private",
      "required": [
        "userType"
      ],
      "properties": {
        "userType": {
          "description": "",
          "enum": [
            "private",
            "company"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "userBillingBase": {
      "id": "userBillingBase",
      "required": [
        "userType"
      ],
      "properties": {
        "userType": {
          "description": "",
          "enum": [
            "private",
            "company"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Company": {
      "id": "Company",
      "required": [
        "userType"
      ],
      "properties": {
        "userType": {
          "description": "",
          "enum": [
            "private",
            "company"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "companyName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "taxNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "registerNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Usersignup": {
      "id": "Usersignup",
      "required": [
        "email",
        "countryCode"
      ],
      "properties": {
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "companyName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "taxNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "registerNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "title": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "planId": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "locale": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timezone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "options": {
          "description": "",
          "items": {
            "$ref": "Genericaction"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "newUserSignup": {
      "id": "newUserSignup",
      "required": [
        "email",
        "companyName",
        "countryCode"
      ],
      "properties": {
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "companyName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "zip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "city": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "state": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "countryCode": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "taxNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "registerNo": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "title": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "planId": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "locale": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timezone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "options": {
          "description": "",
          "items": {
            "$ref": "Genericaction"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Otheruser": {
      "id": "Otheruser",
      "required": [],
      "properties": {
        "uid": {
          "description": "User UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "User name",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "User email",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Teamuser": {
      "id": "Teamuser",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Group": {
      "id": "Group",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "group_propertiespermissions"
        }
      }
    },
    "Sharesettings": {
      "id": "Sharesettings",
      "required": [],
      "properties": {
        "isRecursive": {
          "description": "Apply these settings to entities below current target level",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountRead": {
          "description": "View account-related data (groups, meta, ...)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountDownload": {
          "description": "Download whole account contents at once",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountUpdate": {
          "description": "Update account settings, groups, ...",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountShare": {
          "description": "Share account to other users",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountAudit": {
          "description": "View account audit data",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountGroups": {
          "description": "Manage groups",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountUsers": {
          "description": "Manage users",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountMeta": {
          "description": "Manage meta",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountRecycleBin": {
          "description": "Manage recycle bin",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountNumbering": {
          "description": "Manage numbering",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountIdp": {
          "description": "Manage IdP",
          "uniqueItems": false,
          "type": "boolean"
        },
        "accountPasswordPolicy": {
          "description": "Manage password policy",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderCreate": {
          "description": "Create a new folder",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderRead": {
          "description": "List folders in a folder",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderDownload": {
          "description": "Download a folder",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderUpdate": {
          "description": "Update folder data",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderMove": {
          "description": "Move folder to new location (requires folderCreate permission at new location)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderDelete": {
          "description": "Delete a folder",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderDuplicate": {
          "description": "Duplicate folder (requires folderCreate permission at target)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderShare": {
          "description": "Share a folder",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderPublicShare": {
          "description": "Create a public link for a folder (requires folderShare permission)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderAudit": {
          "description": "View folder audit trail",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileCreate": {
          "description": "Add a file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileRead": {
          "description": "List files in a folder",
          "uniqueItems": false,
          "type": "boolean"
        },
        "filePreview": {
          "description": "View preview of a file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileDownload": {
          "description": "Download a file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileUpdate": {
          "description": "Update name, meta, ... of a file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileUpdateContent": {
          "description": "Manage file versions",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileMove": {
          "description": "Move file to new location (requires fileCreate permission at new location)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileDelete": {
          "description": "Delete a file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileDuplicate": {
          "description": "Duplicate file (requires fileCreate permission at target)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileShare": {
          "description": "Share a file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "filePublicShare": {
          "description": "Create a public link for a file (requires folderShare permission)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "fileAudit": {
          "description": "View file audit trail",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Share": {
      "id": "Share",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "ACTIVE",
            "DEACTIVATED",
            "PENDING",
            "DELETED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "group": {
          "description": "null, if not a group share",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        }
      }
    },
    "Groupwithexpandedfields": {
      "id": "Groupwithexpandedfields",
      "required": [],
      "properties": {
        "users": {
          "description": "",
          "items": {
            "$ref": "Otheruser"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "groups": {
          "description": "",
          "items": {
            "$ref": "Group"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "Share"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Groupwithexpandedfields2": {
      "id": "Groupwithexpandedfields2",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "group_propertiespermissions"
        },
        "users": {
          "description": "",
          "items": {
            "$ref": "Otheruser"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "groups": {
          "description": "",
          "items": {
            "$ref": "Group"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "Share"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Teamuserwithexpandedfields": {
      "id": "Teamuserwithexpandedfields",
      "required": [],
      "properties": {
        "remoteUsername": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "active",
            "inactive",
            "invite",
            "invite-inactive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "groups": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "position": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Teamuserwithexpandedfields2": {
      "id": "Teamuserwithexpandedfields2",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "remoteUsername": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "active",
            "inactive",
            "invite",
            "invite-inactive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "groups": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "position": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Account": {
      "id": "Account",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "owner": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "canGetSections": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "inboxFolderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "inboxEmailName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "teamFolderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "indexing": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "permissions"
        }
      }
    },
    "accountShare": {
      "id": "accountShare",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "ACTIVE",
            "DEACTIVATED",
            "PENDING",
            "DELETED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "group": {
          "description": "null, if not a group share",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountstats": {
      "id": "Accountstats",
      "required": [],
      "properties": {
        "folders": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "files": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "collaboratorCount": {
          "description": "",
          "minimum": "5",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "time": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Accountwithexpandedfields": {
      "id": "Accountwithexpandedfields",
      "required": [],
      "properties": {
        "shares": {
          "description": "",
          "items": {
            "$ref": "accountShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stats": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Accountstats"
        }
      }
    },
    "Accountwithexpandedfields2": {
      "id": "Accountwithexpandedfields2",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "owner": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "canGetSections": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "inboxFolderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "inboxEmailName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "teamFolderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "indexing": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "permissions"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "accountShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "stats": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Accountstats"
        }
      }
    },
    "Partiallysharedaccount": {
      "id": "Partiallysharedaccount",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "owner": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "canGetSections": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "permissions": {
      "id": "permissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDownload": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canCreateGroup": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canCreateMeta": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canCreateSection": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canAudit": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canShareCustomPermissions": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canManageGroups": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canManageUsers": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canManageMeta": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canManageRecycleBin": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canManageNumbering": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canManageIdp": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canManagePasswordPolicy": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "AccountUser": {
      "id": "AccountUser",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "position": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "teamUser": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountUserwithexpandedfields": {
      "id": "AccountUserwithexpandedfields",
      "required": [],
      "properties": {
        "teamUserStatus": {
          "description": "",
          "enum": [
            "active",
            "inactive",
            "invite",
            "invite-inactive"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AccountUserwithexpandedfields2": {
      "id": "AccountUserwithexpandedfields2",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "position": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "teamUser": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "teamUserStatus": {
          "description": "",
          "enum": [
            "active",
            "inactive",
            "invite",
            "invite-inactive"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "fileShare": {
      "id": "fileShare",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "ACTIVE",
            "DEACTIVATED",
            "PENDING",
            "DELETED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "group": {
          "description": "null, if not a group share",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "folderShare": {
      "id": "folderShare",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "ACTIVE",
            "DEACTIVATED",
            "PENDING",
            "DELETED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "group": {
          "description": "null, if not a group share",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "tagShare": {
      "id": "tagShare",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "ACTIVE",
            "DEACTIVATED",
            "PENDING",
            "DELETED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "group": {
          "description": "null, if not a group share",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "tagUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "indexroot": {
      "id": "indexroot",
      "required": [],
      "properties": {
        "entities": {
          "description": "",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Entity": {
      "id": "Entity",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
          "uniqueItems": false,
          "$ref": "retentionEnd"
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "uniqueItems": false,
          "type": "boolean"
        },
        "retention": {
          "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
          "uniqueItems": false,
          "$ref": "retention"
        },
        "activeRetention": {
          "description": "",
          "uniqueItems": false,
          "$ref": "activeRetention"
        }
      }
    },
    "AttributeColumn": {
      "id": "AttributeColumn",
      "required": [],
      "properties": {
        "field": {
          "description": "",
          "enum": [
            "name",
            "tags",
            "date",
            "due_date",
            "created_at",
            "updated_at",
            "signees",
            "id",
            "size",
            "mail_sender",
            "retention_end",
            "language",
            "number",
            "note",
            "creator",
            "extension",
            "approved_at",
            "signed_at",
            "acknowledged_at"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "retention": {
      "id": "retention",
      "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
      "required": [
        "time",
        "action",
        "isRecursive"
      ],
      "properties": {
        "time": {
          "description": "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention",
          "uniqueItems": false,
          "type": "string"
        },
        "action": {
          "description": "",
          "enum": [
            "delete",
            "purge",
            "archive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "target": {
          "description": "Archival target",
          "uniqueItems": false,
          "type": "string"
        },
        "keepStructure": {
          "description": "Keep folder structure on archiving with isRecursive active",
          "uniqueItems": false,
          "type": "boolean"
        },
        "source": {
          "description": "Source field for generating the end time",
          "enum": [
            "createdAt",
            "updatedAt",
            "date",
            "dueDate",
            "approvedAt",
            "signedAt",
            "acknowledgedAt",
            "reviewedAt",
            "meta:<uid>"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "activeRetention": {
      "id": "activeRetention",
      "required": [
        "time",
        "action",
        "entityUid",
        "isRecursive"
      ],
      "properties": {
        "time": {
          "description": "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention",
          "uniqueItems": false,
          "type": "string"
        },
        "action": {
          "description": "",
          "enum": [
            "delete",
            "purge",
            "archive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "UID of an entity from where the retention originates from",
          "uniqueItems": false,
          "type": "string"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "source": {
          "description": "Source field for generating the end time",
          "enum": [
            "createdAt",
            "updatedAt",
            "date",
            "dueDate",
            "approvedAt",
            "signedAt",
            "acknowledgedAt",
            "reviewedAt",
            "meta:<uid>"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "target": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "keepStructure": {
          "description": "Keep folder structure on archiving with isRecursive active",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Mailinaddress": {
      "id": "Mailinaddress",
      "required": [],
      "properties": {
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "active": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Folder": {
      "id": "Folder",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "retention": {
          "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
          "uniqueItems": false,
          "$ref": "retention"
        },
        "activeRetention": {
          "description": "",
          "uniqueItems": false,
          "$ref": "activeRetention"
        },
        "mailInAddress": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Mailinaddress"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "folder_propertiespermissions"
        }
      }
    },
    "MetaBase": {
      "id": "MetaBase",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Stringmeta": {
      "id": "Stringmeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "string",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entitystringmeta": {
      "id": "Entitystringmeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Stringmeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Textmeta": {
      "id": "Textmeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "text",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entitytextmeta": {
      "id": "Entitytextmeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Textmeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Integermeta": {
      "id": "Integermeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "integer",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entityintegermeta": {
      "id": "Entityintegermeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Integermeta"
        },
        "value": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Integermeta1": {
      "id": "Integermeta1",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "float",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "decimalScale": {
          "description": "",
          "minimum": "1",
          "maximum": "18",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Entitydecimalmeta": {
      "id": "Entitydecimalmeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Integermeta1"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "scale": {
          "description": "",
          "minimum": "1",
          "maximum": "18",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Datemeta": {
      "id": "Datemeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "date",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entitydatemeta": {
      "id": "Entitydatemeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Datemeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Datetimemeta": {
      "id": "Datetimemeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "datetime",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entitydatetimemeta": {
      "id": "Entitydatetimemeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Datetimemeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Timemeta": {
      "id": "Timemeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "time",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entitytimemeta": {
      "id": "Entitytimemeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Timemeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Booleanmeta": {
      "id": "Booleanmeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "boolean",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "Boolean meta does not support setting this property to `true`",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entitybooleanmeta": {
      "id": "Entitybooleanmeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Booleanmeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "URLmeta": {
      "id": "URLmeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "url",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "EntityURLmeta": {
      "id": "EntityURLmeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "URLmeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Emailmeta": {
      "id": "Emailmeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "email",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Entityemailmeta": {
      "id": "Entityemailmeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Emailmeta"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MetaSelectOption": {
      "id": "MetaSelectOption",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "order": {
          "description": "",
          "minimum": "0",
          "maximum": "65535",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "isUsed": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Selectmeta": {
      "id": "Selectmeta",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "select",
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "options": {
          "description": "Options list",
          "items": {
            "$ref": "MetaSelectOption"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Entityselectmeta": {
      "id": "Entityselectmeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Selectmeta"
        },
        "value": {
          "description": "Option UID",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Entity1": {
      "id": "Entity1",
      "required": [],
      "properties": {
        "number": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "numberingSchemeUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSender": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSenderName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailContent": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSubject": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "date": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "FolderStats": {
      "id": "FolderStats",
      "required": [],
      "properties": {
        "folders": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "files": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "missingMeta": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "time": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Folderwithexpandedfields2": {
      "id": "Folderwithexpandedfields2",
      "required": [],
      "properties": {
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "parent": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Folder"
        },
        "meta": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "folderShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "extra": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity1"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "minimum": "-32768",
          "maximum": "32767",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "inboxFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "teamFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderStats": {
          "description": "",
          "uniqueItems": false,
          "$ref": "FolderStats"
        },
        "visibleColumnsWithMeta": {
          "description": "Array of columns to be shown by the client",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "sort": {
          "description": "Column names, prefixed with a dash (`-`) for descending order, separated with a comma",
          "uniqueItems": false,
          "type": "string"
        },
        "viewType": {
          "description": "View type of a folder listing",
          "enum": [
            "list",
            "thumbnail"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folderwithexpandedfields": {
      "id": "Folderwithexpandedfields",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "retention": {
          "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
          "uniqueItems": false,
          "$ref": "retention"
        },
        "activeRetention": {
          "description": "",
          "uniqueItems": false,
          "$ref": "activeRetention"
        },
        "mailInAddress": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Mailinaddress"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "folder_propertiespermissions"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "parent": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Folder"
        },
        "meta": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "folderShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "extra": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity1"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "minimum": "-32768",
          "maximum": "32767",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "inboxFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "teamFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderStats": {
          "description": "",
          "uniqueItems": false,
          "$ref": "FolderStats"
        },
        "visibleColumnsWithMeta": {
          "description": "Array of columns to be shown by the client",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "sort": {
          "description": "Column names, prefixed with a dash (`-`) for descending order, separated with a comma",
          "uniqueItems": false,
          "type": "string"
        },
        "viewType": {
          "description": "View type of a folder listing",
          "enum": [
            "list",
            "thumbnail"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "retentionEnd": {
      "id": "retentionEnd",
      "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
      "required": [
        "end",
        "action"
      ],
      "properties": {
        "end": {
          "description": "null value for both end and action results in forced infinite retention",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "description": "",
          "enum": [
            "delete",
            "purge",
            "archive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "target": {
          "description": "Archival target",
          "uniqueItems": false,
          "type": "string"
        },
        "source": {
          "description": "Indicates the source field for generating the end time",
          "enum": [
            "createdAt",
            "updatedAt",
            "date",
            "dueDate",
            "approvedAt",
            "signedAt",
            "acknowledgedAt",
            "reviewedAt",
            "meta:<uid>"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "File": {
      "id": "File",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "extension": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mimeType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "numberingSchemeUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "date": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isLocked": {
          "description": "A file could be locked without specific user, in that case the lockedBy attribute will stay null",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lockId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lockedBy": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lockTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "isSentByMail": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "mailSender": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSenderName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailContent": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSubject": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the current version",
          "uniqueItems": false,
          "type": "boolean"
        },
        "hash": {
          "description": "",
          "uniqueItems": false,
          "$ref": "hash"
        },
        "deletedAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
          "uniqueItems": false,
          "$ref": "retentionEnd"
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "uniqueItems": false,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "approvalStatus": {
          "description": "",
          "enum": [
            "active",
            "inProgress",
            "approved",
            "rejected",
            "deleted"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "propertiespermissions"
        },
        "supports": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Supports"
        }
      }
    },
    "Tag": {
      "id": "Tag",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Person": {
      "id": "Person",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        }
      }
    },
    "Reminder1": {
      "id": "Reminder1",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "remindAt": {
          "description": "Unix timestamp",
          "uniqueItems": false,
          "type": "string"
        },
        "content": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "recurrence": {
          "description": "",
          "enum": [
            "daily",
            "weekly",
            "monthly",
            "quarterly",
            "semi-yearly",
            "yearly"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "reminder": {
      "id": "reminder",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "remindAt": {
          "description": "Unix timestamp",
          "uniqueItems": false,
          "type": "string"
        },
        "content": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "recurrence": {
          "description": "",
          "enum": [
            "daily",
            "weekly",
            "monthly",
            "quarterly",
            "semi-yearly",
            "yearly"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "groupUid": {
          "description": "Group UID",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "Email",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Relateditem": {
      "id": "Relateditem",
      "required": [
        "fileUid",
        "entityUid",
        "user",
        "createdAt",
        "type"
      ],
      "properties": {
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "hash": {
      "id": "hash",
      "required": [],
      "properties": {
        "md5": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "sha256": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileversion": {
      "id": "Fileversion",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "filename": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mimeType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the version",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "description": "",
          "uniqueItems": false,
          "$ref": "hash"
        },
        "approvalStatus": {
          "description": "",
          "enum": [
            "active",
            "inProgress",
            "approved",
            "rejected",
            "deleted"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Filethumbnails": {
      "id": "Filethumbnails",
      "required": [],
      "properties": {
        "avif_128": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "avif_400": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "jpg_128": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "jpg_400": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileversionwithexpandedfields2": {
      "id": "Fileversionwithexpandedfields2",
      "required": [],
      "properties": {
        "isActive": {
          "description": "Indicates if the version is active for the file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thumbnails": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Filethumbnails"
        }
      }
    },
    "Fileversionwithexpandedfields": {
      "id": "Fileversionwithexpandedfields",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "filename": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mimeType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the version",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "description": "",
          "uniqueItems": false,
          "$ref": "hash"
        },
        "approvalStatus": {
          "description": "",
          "enum": [
            "active",
            "inProgress",
            "approved",
            "rejected",
            "deleted"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "isActive": {
          "description": "Indicates if the version is active for the file",
          "uniqueItems": false,
          "type": "boolean"
        },
        "thumbnails": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Filethumbnails"
        }
      }
    },
    "Filewithexpandedfields2": {
      "id": "Filewithexpandedfields2",
      "required": [],
      "properties": {
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "tags": {
          "description": "",
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "people": {
          "description": "",
          "items": {
            "$ref": "Person"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "meta": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "reminders": {
          "description": "",
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "parent": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Folder"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "fileShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fileRelations": {
          "description": "",
          "items": {
            "$ref": "Relateditem"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "version": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "thumbnails": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Filethumbnails"
        }
      }
    },
    "Filewithexpandedfields": {
      "id": "Filewithexpandedfields",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "extension": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mimeType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "numberingSchemeUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "date": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isLocked": {
          "description": "A file could be locked without specific user, in that case the lockedBy attribute will stay null",
          "uniqueItems": false,
          "type": "boolean"
        },
        "lockId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lockedBy": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lockTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "isSentByMail": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "mailSender": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSenderName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailContent": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSubject": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the current version",
          "uniqueItems": false,
          "type": "boolean"
        },
        "hash": {
          "description": "",
          "uniqueItems": false,
          "$ref": "hash"
        },
        "deletedAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
          "uniqueItems": false,
          "$ref": "retentionEnd"
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "uniqueItems": false,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "approvalStatus": {
          "description": "",
          "enum": [
            "active",
            "inProgress",
            "approved",
            "rejected",
            "deleted"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "propertiespermissions"
        },
        "supports": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Supports"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "tags": {
          "description": "",
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "people": {
          "description": "",
          "items": {
            "$ref": "Person"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "meta": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "reminders": {
          "description": "",
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "parent": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Folder"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "fileShare"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "fileRelations": {
          "description": "",
          "items": {
            "$ref": "Relateditem"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "version": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "thumbnails": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Filethumbnails"
        }
      }
    },
    "Link": {
      "id": "Link",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "embedded": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "uniqueItems": false,
          "type": "boolean"
        },
        "retentionEnd": {
          "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
          "uniqueItems": false,
          "$ref": "retentionEnd"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Permissions9"
        }
      }
    },
    "Resolution": {
      "id": "Resolution",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Entity UID",
          "uniqueItems": false,
          "type": "string"
        },
        "fileVersionUid": {
          "description": "File version UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "preparing",
            "active",
            "inProgress",
            "complete",
            "rejected"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "method": {
          "description": "",
          "enum": [
            "approval",
            "DocuSign",
            "eID",
            "acknowledgement",
            "eSign",
            "review"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "parallel",
            "serial",
            "custom"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "showMeta": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "showRelatedEntities": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "initiatorUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastActivityAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "timeoutAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "isWorkflowManaged": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Resolutionwithexpandedfields2": {
      "id": "Resolutionwithexpandedfields2",
      "required": [],
      "properties": {
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Permissions10"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "fileVersion": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Resolutionwithexpandedfields": {
      "id": "Resolutionwithexpandedfields",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Entity UID",
          "uniqueItems": false,
          "type": "string"
        },
        "fileVersionUid": {
          "description": "File version UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "preparing",
            "active",
            "inProgress",
            "complete",
            "rejected"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "method": {
          "description": "",
          "enum": [
            "approval",
            "DocuSign",
            "eID",
            "acknowledgement",
            "eSign",
            "review"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "parallel",
            "serial",
            "custom"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "showMeta": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "showRelatedEntities": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "initiatorUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastActivityAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "timeoutAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "isWorkflowManaged": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Permissions10"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "fileVersion": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Workflow": {
      "id": "Workflow",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "isActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "Not applicable without entityUid",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Version": {
      "id": "Version",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "isActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "stepBase": {
      "id": "stepBase",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "params": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "moveStep": {
      "id": "moveStep",
      "required": [
        "type",
        "params"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "move",
          "uniqueItems": false,
          "type": "string"
        },
        "params": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Params"
        }
      }
    },
    "resolutionStep": {
      "id": "resolutionStep",
      "required": [
        "type",
        "params"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "resolution",
          "uniqueItems": false,
          "type": "string"
        },
        "params": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Params1"
        },
        "onFailure": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "onSuccess": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "onTimeout": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "addInvitesStep": {
      "id": "addInvitesStep",
      "required": [
        "type",
        "params"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "addInvites",
          "uniqueItems": false,
          "type": "string"
        },
        "params": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Params2"
        },
        "onFailure": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "onSuccess": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "onTimeout": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "resolutionCompleteStep": {
      "id": "resolutionCompleteStep",
      "required": [
        "type",
        "params"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "resolutionComplete",
          "uniqueItems": false,
          "type": "string"
        },
        "params": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Params3"
        }
      }
    },
    "delayStep": {
      "id": "delayStep",
      "required": [
        "type",
        "params"
      ],
      "properties": {
        "type": {
          "description": "",
          "defaultValue": "delay",
          "uniqueItems": false,
          "type": "string"
        },
        "params": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Params4"
        }
      }
    },
    "Versionwithexpandedfields2": {
      "id": "Versionwithexpandedfields2",
      "required": [],
      "properties": {
        "steps": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Versionwithexpandedfields": {
      "id": "Versionwithexpandedfields",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "isActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "steps": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Sourceofevent": {
      "id": "Sourceofevent",
      "required": [],
      "properties": {
        "resolution": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Resolution1"
        }
      }
    },
    "Entityname": {
      "id": "Entityname",
      "required": [
        "caseSensitive",
        "operator",
        "value"
      ],
      "properties": {
        "caseSensitive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "operator": {
          "description": "",
          "enum": [
            "contains",
            "equals"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Trigger": {
      "id": "Trigger",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "events": {
          "description": "",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "condition": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Workflowwithexpandedfields2": {
      "id": "Workflowwithexpandedfields2",
      "required": [],
      "properties": {
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "version": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "versions": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "triggers": {
          "description": "",
          "items": {
            "$ref": "Trigger"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Workflowwithexpandedfields": {
      "id": "Workflowwithexpandedfields",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "isActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "Not applicable without entityUid",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "metaBase_propertiespermissions"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "version": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "versions": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "triggers": {
          "description": "",
          "items": {
            "$ref": "Trigger"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Entitywithexpandedfields2": {
      "id": "Entitywithexpandedfields2",
      "required": [],
      "properties": {
        "folder": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "file": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "link": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Link"
        },
        "asic": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "Share"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "extra": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity1"
        },
        "meta": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "account": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Account"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "minimum": "-32768",
          "maximum": "32767",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "inboxFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "teamFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderStats": {
          "description": "",
          "uniqueItems": false,
          "$ref": "FolderStats"
        },
        "isRoot": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "tags": {
          "description": "",
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "extension": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "creator": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "icon": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "picture",
            "chart",
            "asic",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "reminders": {
          "description": "",
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "entityRelations": {
          "description": "",
          "items": {
            "$ref": "Relateditem"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "resolutions": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "resolutionSupport": {
          "description": "List of supported resolution methods, which could be initiated on this entity",
          "uniqueItems": false,
          "type": "boolean"
        },
        "workflows": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Entitywithexpandedfields": {
      "id": "Entitywithexpandedfields",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
          "uniqueItems": false,
          "$ref": "retentionEnd"
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "uniqueItems": false,
          "type": "boolean"
        },
        "retention": {
          "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
          "uniqueItems": false,
          "$ref": "retention"
        },
        "activeRetention": {
          "description": "",
          "uniqueItems": false,
          "$ref": "activeRetention"
        },
        "folder": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "file": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "link": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Link"
        },
        "asic": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "shares": {
          "description": "",
          "items": {
            "$ref": "Share"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "extra": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity1"
        },
        "meta": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "account": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Account"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "minimum": "-32768",
          "maximum": "32767",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "inboxFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "teamFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "folderStats": {
          "description": "",
          "uniqueItems": false,
          "$ref": "FolderStats"
        },
        "isRoot": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "tags": {
          "description": "",
          "items": {
            "$ref": "Tag"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "extension": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "creator": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "icon": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "picture",
            "chart",
            "asic",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "reminders": {
          "description": "",
          "items": {
            "$ref": "reminder"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "entityRelations": {
          "description": "",
          "items": {
            "$ref": "Relateditem"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "resolutions": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "resolutionSupport": {
          "description": "List of supported resolution methods, which could be initiated on this entity",
          "uniqueItems": false,
          "type": "boolean"
        },
        "workflows": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Relateditemwithexpandedfields": {
      "id": "Relateditemwithexpandedfields",
      "required": [],
      "properties": {
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Relateditemwithexpandedfields2": {
      "id": "Relateditemwithexpandedfields2",
      "required": [
        "fileUid",
        "entityUid",
        "user",
        "createdAt",
        "type"
      ],
      "properties": {
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "duplicationoptions": {
      "id": "duplicationoptions",
      "required": [],
      "properties": {
        "filePeople": {
          "description": "Include file people/signees",
          "defaultValue": "true",
          "uniqueItems": false,
          "type": "boolean"
        },
        "files": {
          "description": "Include files inside folders",
          "defaultValue": "true",
          "uniqueItems": false,
          "type": "boolean"
        },
        "meta": {
          "description": "Include meta",
          "defaultValue": "true",
          "uniqueItems": false,
          "type": "boolean"
        },
        "relations": {
          "description": "Include relations",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        },
        "reminders": {
          "description": "Include reminders",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        },
        "resolutions": {
          "description": "Include resolutions",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        },
        "shares": {
          "description": "Include shares",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        },
        "tags": {
          "description": "Include tags",
          "defaultValue": "true",
          "uniqueItems": false,
          "type": "boolean"
        },
        "workflows": {
          "description": "Include workflows",
          "defaultValue": "false",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "duplicate": {
      "id": "duplicate",
      "required": [
        "entities",
        "locationUid"
      ],
      "properties": {
        "entities": {
          "description": "",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "locationUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "options": {
          "description": "",
          "uniqueItems": false,
          "$ref": "duplicationoptions"
        }
      }
    },
    "duplicationStatus": {
      "id": "duplicationStatus",
      "required": [
        "status",
        "progress",
        "total"
      ],
      "properties": {
        "status": {
          "description": "",
          "enum": [
            "success",
            "active",
            "failure"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "minimum": "0",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "failedEntity": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "duplicates": {
          "description": "Contains a list of duplicated entities in the original order",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "errorResponse": {
      "id": "errorResponse",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "fileUploadCreateBase": {
      "id": "fileUploadCreateBase",
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "create",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "5497558138880",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "contentType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "File1": {
      "id": "File1",
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType",
        "folderUid"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "create",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "5497558138880",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "contentType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "uniqueItems": false,
          "type": "object"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileversion1": {
      "id": "Fileversion1",
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType",
        "fileUid"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "create",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "5497558138880",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "contentType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "uniqueItems": false,
          "type": "object"
        },
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Archiveunpack": {
      "id": "Archiveunpack",
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType",
        "folderUid",
        "unpack"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "create",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "21474836480",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "contentType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "uniqueItems": false,
          "type": "object"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "unpack": {
          "description": "Unpacking options",
          "uniqueItems": false,
          "$ref": "Unpack"
        }
      }
    },
    "Part": {
      "id": "Part",
      "required": [
        "action",
        "uploadId",
        "key",
        "partNumber",
        "contentLength"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "part",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "partNumber": {
          "description": "",
          "minimum": "1",
          "maximum": "10000",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "contentLength": {
          "description": "",
          "minimum": "1",
          "maximum": "5368709120",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "Abort": {
      "id": "Abort",
      "required": [
        "action",
        "uploadId",
        "key"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "abort",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "fileUploadCompleteBase": {
      "id": "fileUploadCompleteBase",
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "complete",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "5497558138880",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "File2": {
      "id": "File2",
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName",
        "folderUid"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "complete",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "5497558138880",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileversion2": {
      "id": "Fileversion2",
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName",
        "fileUid"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "complete",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "5497558138880",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Archiveunpack1": {
      "id": "Archiveunpack1",
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName",
        "folderUid",
        "unpack"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "complete",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "fileSize": {
          "description": "",
          "minimum": "",
          "maximum": "21474836480",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "fileName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "unpack": {
          "description": "Unpacking options",
          "uniqueItems": false,
          "$ref": "Unpack"
        }
      }
    },
    "Uploadedparts": {
      "id": "Uploadedparts",
      "required": [
        "action",
        "uploadId",
        "key"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "parts",
          "uniqueItems": false,
          "type": "string"
        },
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "propertiespermissions": {
      "id": "propertiespermissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdateContent": {
          "description": "Add/manage versions",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdateOnline": {
          "description": "Edit file in the cloud",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDownload": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canPreview": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canLock": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdateRetentionEnd": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canAudit": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Filemeta": {
      "id": "Filemeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "metaUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Person1": {
      "id": "Person1",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Tag1": {
      "id": "Tag1",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "File3": {
      "id": "File3",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "extension": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mimeType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "size": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "date": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isSentByMail": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "mailSender": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSenderName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailContent": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "mailSubject": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "description": "",
          "uniqueItems": false,
          "$ref": "hash"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "meta": {
          "description": "",
          "items": {
            "$ref": "Filemeta"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "people": {
          "description": "",
          "items": {
            "$ref": "Person1"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "tags": {
          "description": "",
          "items": {
            "$ref": "Tag1"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "folder_propertiespermissions": {
      "id": "folder_propertiespermissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDownload": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canCreateFolder": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canCreateFile": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdateRetention": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canAudit": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "group_propertiespermissions": {
      "id": "group_propertiespermissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canViewMembers": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canAddMember": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Groupmemberuser": {
      "id": "Groupmemberuser",
      "required": [],
      "properties": {
        "uid": {
          "description": "User UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "User name",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "User email",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "user"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Permissions12"
        }
      }
    },
    "Groupmemberchild": {
      "id": "Groupmemberchild",
      "required": [],
      "properties": {
        "uid": {
          "description": "Group UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Group name",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "child"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "permissions": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Permissions12"
        }
      }
    },
    "metaBase_propertiespermissions": {
      "id": "metaBase_propertiespermissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Foldermeta": {
      "id": "Foldermeta",
      "required": [],
      "properties": {
        "meta": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isRequired": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "includeFiles": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeLinks": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeFolders": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "person_propertiespermissions": {
      "id": "person_propertiespermissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Plan": {
      "id": "Plan",
      "required": [],
      "properties": {
        "id": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "priceBase": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "yearDiscount": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        }
      }
    },
    "SearchResult": {
      "id": "SearchResult",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "icon": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "picture",
            "chart",
            "asic",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "score": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "sort": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "path": {
          "description": "UID Path tree",
          "uniqueItems": false,
          "type": "string"
        },
        "pathUid": {
          "description": "UID Path tree",
          "uniqueItems": false,
          "type": "string"
        },
        "mimeType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SearchResultwithexpandedfields": {
      "id": "SearchResultwithexpandedfields",
      "required": [],
      "properties": {
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "folder": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "file": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "link": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Link"
        },
        "asic": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "highlight": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "SearchResultwithexpandedfields2": {
      "id": "SearchResultwithexpandedfields2",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "icon": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "picture",
            "chart",
            "asic",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "score": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "sort": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "path": {
          "description": "UID Path tree",
          "uniqueItems": false,
          "type": "string"
        },
        "pathUid": {
          "description": "UID Path tree",
          "uniqueItems": false,
          "type": "string"
        },
        "mimeType": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        },
        "entity": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "folder": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "file": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "link": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Link"
        },
        "asic": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "highlight": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "andOperator": {
      "id": "andOperator",
      "description": "Require all items",
      "required": [
        "andOperator"
      ],
      "properties": {
        "andOperator": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "orOperator": {
      "id": "orOperator",
      "description": "Require one of items",
      "required": [
        "orOperator"
      ],
      "properties": {
        "orOperator": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "notOperator": {
      "id": "notOperator",
      "description": "Require item to not exist",
      "required": [
        "notOperator"
      ],
      "properties": {
        "notOperator": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "tag_propertiespermissions": {
      "id": "tag_propertiespermissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "share_propertiespermissions": {
      "id": "share_propertiespermissions",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "auditTrailFileEntryBase": {
      "id": "auditTrailFileEntryBase",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Entity2": {
      "id": "Entity2",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailtag": {
      "id": "Audittrailtag",
      "required": [],
      "properties": {
        "uid": {
          "description": "Tag UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Tag name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailperson": {
      "id": "Audittrailperson",
      "required": [],
      "properties": {
        "uid": {
          "description": "Person UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Person name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "auditTrailShare": {
      "id": "auditTrailShare",
      "required": [],
      "properties": {
        "uid": {
          "description": "Share UID",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "Group UID",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "Group name",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "User UID",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "Email",
          "uniqueItems": false,
          "type": "string"
        },
        "public": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Audittrailfilemeta": {
      "id": "Audittrailfilemeta",
      "required": [
        "uid",
        "metaUid",
        "type",
        "multiple",
        "name",
        "value"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "metaUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "enum": [
            "string",
            "text",
            "integer",
            "float",
            "date",
            "datetime",
            "time",
            "boolean",
            "url",
            "email",
            "select"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        },
        "decimalScale": {
          "description": "",
          "minimum": "1",
          "maximum": "18",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Audittrailfileapproval": {
      "id": "Audittrailfileapproval",
      "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
      "required": [],
      "properties": {
        "method": {
          "description": "",
          "enum": [
            "approval",
            "DocuSign",
            "eID",
            "acknowledgement",
            "eSign",
            "review"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resolutionUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "inviteUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "invitee": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "inviteeUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "comment": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "auditTrailFolderEntryBase": {
      "id": "auditTrailFolderEntryBase",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailfoldermeta": {
      "id": "Audittrailfoldermeta",
      "required": [],
      "properties": {
        "uid": {
          "description": "FolderMeta UID",
          "uniqueItems": false,
          "type": "string"
        },
        "metaUid": {
          "description": "Meta UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Meta name",
          "uniqueItems": false,
          "type": "string"
        },
        "isRequired": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Audittrailfolderautomatedworkflow": {
      "id": "Audittrailfolderautomatedworkflow",
      "required": [],
      "properties": {
        "status": {
          "description": "",
          "enum": [
            "inherit",
            "active",
            "inactive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "type": {
          "description": "",
          "enum": [
            "parallel",
            "serial"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailautomatedfilenumbering": {
      "id": "Audittrailautomatedfilenumbering",
      "required": [],
      "properties": {
        "scheme": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "resetType": {
          "description": "",
          "enum": [
            "never",
            "yearly",
            "monthly",
            "weekly",
            "daily"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "resetMonth": {
          "description": "Used with yearly reset",
          "minimum": "1",
          "maximum": "12",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "resetDay": {
          "description": "0 -> last day of month\nUsed with yearly and monthly reset",
          "minimum": "0",
          "maximum": "31",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "resetWeekday": {
          "description": "Used with weekly reset",
          "minimum": "1",
          "maximum": "7",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "description": "Next number to be used",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "applyFiles": {
          "description": "Apply numbering to files",
          "uniqueItems": false,
          "type": "boolean"
        },
        "applyLinks": {
          "description": "Apply numbering to links",
          "uniqueItems": false,
          "type": "boolean"
        },
        "applyFolders": {
          "description": "Apply numbering to folders",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "auditTrailAccountEntryBase": {
      "id": "auditTrailAccountEntryBase",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailmeta": {
      "id": "Audittrailmeta",
      "required": [],
      "properties": {
        "metaUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Meta type",
          "defaultValue": "string",
          "enum": [
            "string",
            "text",
            "integer",
            "float",
            "date",
            "datetime",
            "time",
            "boolean",
            "url",
            "email",
            "select"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "Meta multiple",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailuser": {
      "id": "Audittrailuser",
      "required": [],
      "properties": {
        "uid": {
          "description": "User UID",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "User email",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailgroup": {
      "id": "Audittrailgroup",
      "required": [],
      "properties": {
        "uid": {
          "description": "Group UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Group name",
          "uniqueItems": false,
          "type": "string"
        },
        "oldName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailgroupuser": {
      "id": "Audittrailgroupuser",
      "required": [],
      "properties": {
        "uid": {
          "description": "User UID",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "User email",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "Group UID",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "Group name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Audittrailgroupuser1": {
      "id": "Audittrailgroupuser1",
      "required": [],
      "properties": {
        "uid": {
          "description": "Child group UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Child group name",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "Group UID",
          "uniqueItems": false,
          "type": "string"
        },
        "groupName": {
          "description": "Group name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileentries": {
      "id": "Fileentries",
      "required": [
        "id",
        "uid",
        "accountUid",
        "entityUid",
        "event",
        "time",
        "requestKey",
        "type",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileNew",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "Either source or target can be null, in which case it was or became a section",
          "uniqueItems": false,
          "$ref": "Data18"
        }
      }
    },
    "resolutioninvite": {
      "id": "resolutioninvite",
      "required": [
        "email",
        "userUid",
        "groupUid"
      ],
      "properties": {
        "order": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "resolutioncreate": {
      "id": "resolutioncreate",
      "required": [
        "type",
        "method"
      ],
      "properties": {
        "type": {
          "description": "",
          "enum": [
            "parallel",
            "serial",
            "custom"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "invites": {
          "description": "",
          "items": {
            "$ref": "resolutioninvite"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "method": {
          "description": "",
          "enum": [
            "approval",
            "DocuSign",
            "eID",
            "acknowledgement",
            "eSign",
            "review"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "showMeta": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "showRelatedEntities": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "timeoutTime": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "resolutionupdate": {
      "id": "resolutionupdate",
      "required": [],
      "properties": {
        "type": {
          "description": "",
          "enum": [
            "parallel",
            "serial",
            "custom"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "showMeta": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "showRelatedEntities": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "timeoutTime": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Resolutioninvite1": {
      "id": "Resolutioninvite1",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "order": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "description": "User email",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "delegateUserUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "pending",
            "pendingInvite",
            "active",
            "approved",
            "rejected"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Resolutioninvitewithexpandedfields": {
      "id": "Resolutioninvitewithexpandedfields",
      "required": [],
      "properties": {
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "delegateUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        }
      }
    },
    "Resolutioninvitewithexpandedfields2": {
      "id": "Resolutioninvitewithexpandedfields2",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "order": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "description": "User email",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "delegateUserUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "pending",
            "pendingInvite",
            "active",
            "approved",
            "rejected"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "delegateUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        }
      }
    },
    "inviteupdate": {
      "id": "inviteupdate",
      "required": [],
      "properties": {
        "order": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "workflowcreate": {
      "id": "workflowcreate",
      "required": [],
      "properties": {
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "steps": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "triggers": {
          "description": "",
          "items": {
            "$ref": "workflowtriggercreate"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "workflowupdate": {
      "id": "workflowupdate",
      "required": [],
      "properties": {
        "isActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "steps": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "workflowversioncreate": {
      "id": "workflowversioncreate",
      "required": [
        "steps"
      ],
      "properties": {
        "steps": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "workflowversionupdate": {
      "id": "workflowversionupdate",
      "required": [],
      "properties": {
        "isActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "workflowtriggercreate": {
      "id": "workflowtriggercreate",
      "required": [
        "events"
      ],
      "properties": {
        "condition": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "events": {
          "description": "",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "workflowtriggerupdate": {
      "id": "workflowtriggerupdate",
      "required": [],
      "properties": {
        "condition": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "events": {
          "description": "",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "400badRequest1": {
      "id": "400badRequest1",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "enum": [
            "Bad Request"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "enum": [
            "400"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "401unauthorized1": {
      "id": "401unauthorized1",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "enum": [
            "Unauthorized"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "enum": [
            "401"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "403forbidden1": {
      "id": "403forbidden1",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "enum": [
            "Forbidden"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "enum": [
            "403"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "404notFound1": {
      "id": "404notFound1",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "enum": [
            "Not Found"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "enum": [
            "404"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "409conflict1": {
      "id": "409conflict1",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "enum": [
            "Conflict"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "enum": [
            "409"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "422unprocessableEntity1": {
      "id": "422unprocessableEntity1",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "enum": [
            "Unprocessable entity"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "enum": [
            "422"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "500serverError1": {
      "id": "500serverError1",
      "required": [],
      "properties": {
        "name": {
          "description": "Error name",
          "enum": [
            "Internal Server Error"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "uniqueItems": false,
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "enum": [
            "500"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountcreated": {
      "id": "Accountcreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountdeleted": {
      "id": "Accountdeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountdownloaded": {
      "id": "Accountdownloaded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountDownload",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountinboxtoggled": {
      "id": "Accountinboxtoggled",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountInbox",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Accountindexingchanged": {
      "id": "Accountindexingchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountIndexing",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "AccountOCRlanguagechanged": {
      "id": "AccountOCRlanguagechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountLanguage",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountrenamed": {
      "id": "Accountrenamed",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountsectionsreordered": {
      "id": "Accountsectionsreordered",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountSectionOrder",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Accountshared": {
      "id": "Accountshared",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Accountteamfoldertoggled": {
      "id": "Accountteamfoldertoggled",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamFolder",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Accountwatermarkingtoggled": {
      "id": "Accountwatermarkingtoggled",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountWatermarking",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Activatemailinaddress": {
      "id": "Activatemailinaddress",
      "required": [],
      "properties": {
        "action": {
          "description": "",
          "enum": [
            "activate"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Activatedmailinaddress": {
      "id": "Activatedmailinaddress",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderEmailActivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data15"
        }
      }
    },
    "Active": {
      "id": "Active",
      "required": [],
      "properties": {
        "status": {
          "description": "Unpacking currently active",
          "enum": [
            "1"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "enum": [
            "active"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "progressMax": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentPath": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AddRemindersRequest": {
      "id": "AddRemindersRequest",
      "required": [
        "content",
        "remindAt",
        "email",
        "groupUid"
      ],
      "properties": {
        "content": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "remindAt": {
          "description": "Unix timestamp",
          "uniqueItems": false,
          "type": "string"
        },
        "recurrence": {
          "description": "",
          "enum": [
            "daily",
            "weekly",
            "monthly",
            "quarterly",
            "semi-yearly",
            "yearly"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Archiveuncompressed": {
      "id": "Archiveuncompressed",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderUncompress",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Archiveunpack2": {
      "id": "Archiveunpack2",
      "required": [],
      "properties": {
        "key": {
          "description": "Unpack key, check status from [`GET /accounts/{accountUid}/files/unpack-status/{key}`](#tag/File/operation/getUnpackStatus)",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AutomatedFileNumberingdisabled": {
      "id": "AutomatedFileNumberingdisabled",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingInherit",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "AutomatedFileNumberingenabled": {
      "id": "AutomatedFileNumberingenabled",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingActivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedFileNumberingnamechanged": {
      "id": "AutomatedFileNumberingnamechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedFileNumberingnextnumberchanged": {
      "id": "AutomatedFileNumberingnextnumberchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingNumber",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedFileNumberingresetchanged": {
      "id": "AutomatedFileNumberingresetchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingReset",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedFileNumberingschemechanged": {
      "id": "AutomatedFileNumberingschemechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingScheme",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingactivated": {
      "id": "AutomatedNumberingactivated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingActivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingdeactivated": {
      "id": "AutomatedNumberingdeactivated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingDeactivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberinginclusionoffileschanged": {
      "id": "AutomatedNumberinginclusionoffileschanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingApplyFiles",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberinginclusionoffolderschanged": {
      "id": "AutomatedNumberinginclusionoffolderschanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingApplyFolders",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberinginclusionoflinkschanged": {
      "id": "AutomatedNumberinginclusionoflinkschanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingApplyLinks",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingnamechanged": {
      "id": "AutomatedNumberingnamechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingnextnumberchanged": {
      "id": "AutomatedNumberingnextnumberchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingNumber",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingrecursionchanged": {
      "id": "AutomatedNumberingrecursionchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingRecursive",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingresetchanged": {
      "id": "AutomatedNumberingresetchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingReset",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingschemechanged": {
      "id": "AutomatedNumberingschemechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingScheme",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailautomatedfilenumbering"
        }
      }
    },
    "AutomatedNumberingsettoinherit": {
      "id": "AutomatedNumberingsettoinherit",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "numberingInherit",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Boolean": {
      "id": "Boolean",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "is"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Byemail": {
      "id": "Byemail",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "BygroupUid": {
      "id": "BygroupUid",
      "required": [
        "groupUid"
      ],
      "properties": {
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Byname": {
      "id": "Byname",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Byuid": {
      "id": "Byuid",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ByuserUid": {
      "id": "ByuserUid",
      "required": [
        "userUid",
        "email"
      ],
      "properties": {
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "ByuserUid1": {
      "id": "ByuserUid1",
      "required": [
        "userUid"
      ],
      "properties": {
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Conflictingfile": {
      "id": "Conflictingfile",
      "required": [],
      "properties": {
        "status": {
          "description": "Found a conflicting file",
          "enum": [
            "5"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "enum": [
            "conflict"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "progressMax": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "currentPath": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Create": {
      "id": "Create",
      "required": [],
      "properties": {
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "CreatewithURLs": {
      "id": "CreatewithURLs",
      "required": [],
      "properties": {
        "uploadId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "urls": {
          "description": "List of URLs, same as from the \"part\" action",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Createdmailinaddress": {
      "id": "Createdmailinaddress",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderEmailNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data15"
        }
      }
    },
    "createdFrom": {
      "id": "createdFrom",
      "required": [
        "createdFrom"
      ],
      "properties": {
        "createdFrom": {
          "description": "From upload date",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "createdTo": {
      "id": "createdTo",
      "required": [
        "createdTo"
      ],
      "properties": {
        "createdTo": {
          "description": "To upload date",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Data": {
      "id": "Data",
      "required": [],
      "properties": {
        "fileVersionUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "token": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Data2": {
      "id": "Data2",
      "required": [],
      "properties": {
        "uid": {
          "description": "FileVersion UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "File name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Data5": {
      "id": "Data5",
      "required": [],
      "properties": {
        "uid": {
          "description": "Item UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Item name",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "Item type",
          "enum": [
            "folder",
            "file",
            "link"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Data7": {
      "id": "Data7",
      "required": [],
      "properties": {
        "source": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sourcefolder"
        },
        "target": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Targetfolder"
        }
      }
    },
    "Data8": {
      "id": "Data8",
      "required": [],
      "properties": {
        "end": {
          "description": "null value for both end and action results in forced infinite retention",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "description": "",
          "enum": [
            "delete",
            "purge",
            "archive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "custom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "uniqueItems": false,
          "type": "boolean"
        },
        "target": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Data9": {
      "id": "Data9",
      "description": "Either source or target can be null, in which case it was or became a section",
      "required": [],
      "properties": {
        "source": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sourcefolder"
        },
        "target": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Targetfolder"
        }
      }
    },
    "Data10": {
      "id": "Data10",
      "description": "Target can be null, in which case it became a section",
      "required": [],
      "properties": {
        "folder": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Folderthatmoved"
        },
        "target": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Targetfolder"
        }
      }
    },
    "Data11": {
      "id": "Data11",
      "description": "Source can be null, in which case it was a section",
      "required": [],
      "properties": {
        "folder": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Folderthatmoved"
        },
        "source": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sourcefolder"
        }
      }
    },
    "Data12": {
      "id": "Data12",
      "required": [],
      "properties": {
        "file": {
          "description": "",
          "uniqueItems": false,
          "$ref": "File4"
        },
        "folder": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Folder1"
        }
      }
    },
    "Data14": {
      "id": "Data14",
      "required": [],
      "properties": {
        "time": {
          "description": "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention",
          "uniqueItems": false,
          "type": "string"
        },
        "action": {
          "description": "",
          "enum": [
            "delete",
            "purge",
            "archive"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "target": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "keepStructure": {
          "description": "Keep folder structure on archiving with isRecursive active",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Data15": {
      "id": "Data15",
      "required": [],
      "properties": {
        "address": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Data18": {
      "id": "Data18",
      "description": "Either source or target can be null, in which case it was or became a section",
      "required": [],
      "properties": {
        "uid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "File name",
          "uniqueItems": false,
          "type": "string"
        },
        "source": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sourcefolder"
        },
        "target": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Targetfolder"
        }
      }
    },
    "Date": {
      "id": "Date",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "is",
            "lt",
            "lte",
            "gt",
            "gte"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Datechanged": {
      "id": "Datechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileDate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "dateDueFrom": {
      "id": "dateDueFrom",
      "required": [
        "dateDueFrom"
      ],
      "properties": {
        "dateDueFrom": {
          "description": "From date due",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "dateDueTo": {
      "id": "dateDueTo",
      "required": [
        "dateDueTo"
      ],
      "properties": {
        "dateDueTo": {
          "description": "To date due",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "dateFrom": {
      "id": "dateFrom",
      "required": [
        "dateFrom"
      ],
      "properties": {
        "dateFrom": {
          "description": "From date",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "dateOrCreatedFrom": {
      "id": "dateOrCreatedFrom",
      "required": [
        "dateOrCreatedFrom"
      ],
      "properties": {
        "dateOrCreatedFrom": {
          "description": "From date",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "dateOrCreatedTo": {
      "id": "dateOrCreatedTo",
      "required": [
        "dateOrCreatedTo"
      ],
      "properties": {
        "dateOrCreatedTo": {
          "description": "To date",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Datetime": {
      "id": "Datetime",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "is",
            "lt",
            "lte",
            "gt",
            "gte"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "dateTo": {
      "id": "dateTo",
      "required": [
        "dateTo"
      ],
      "properties": {
        "dateTo": {
          "description": "To date",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Deactivatemailinaddress": {
      "id": "Deactivatemailinaddress",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "deactivate",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Deactivatedmailinaddress": {
      "id": "Deactivatedmailinaddress",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderEmailDeactivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data15"
        }
      }
    },
    "Decimal": {
      "id": "Decimal",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "is",
            "lt",
            "lte",
            "gt",
            "gte"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Duedatechanged": {
      "id": "Duedatechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileDueDate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Duplicatedfile": {
      "id": "Duplicatedfile",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfileDuplicate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Duplicatedsubfolder": {
      "id": "Duplicatedsubfolder",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfolderDuplicate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Email": {
      "id": "Email",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "has",
            "is",
            "prefix",
            "wildcard"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Exists": {
      "id": "Exists",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "exists"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "extension": {
      "id": "extension",
      "required": [
        "extension"
      ],
      "properties": {
        "extension": {
          "description": "Extension",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Extra": {
      "id": "Extra",
      "required": [],
      "properties": {
        "number": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "date": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        }
      }
    },
    "Failure": {
      "id": "Failure",
      "required": [],
      "properties": {
        "status": {
          "description": "Unpacking failed",
          "enum": [
            "2"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "enum": [
            "failure"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "progressMax": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "currentPath": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FileApprovalapproved": {
      "id": "FileApprovalapproved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileResolutionApproved",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
          "uniqueItems": false,
          "$ref": "Audittrailfileapproval"
        }
      }
    },
    "FileApprovalcancelled": {
      "id": "FileApprovalcancelled",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileResolutionDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
          "uniqueItems": false,
          "$ref": "Audittrailfileapproval"
        }
      }
    },
    "FileApprovalrejected": {
      "id": "FileApprovalrejected",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileResolutionRejected",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
          "uniqueItems": false,
          "$ref": "Audittrailfileapproval"
        }
      }
    },
    "FileApprovalresponseapproved": {
      "id": "FileApprovalresponseapproved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileResolutionResponseApproved",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
          "uniqueItems": false,
          "$ref": "Audittrailfileapproval"
        }
      }
    },
    "FileApprovalresponserejected": {
      "id": "FileApprovalresponserejected",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileResolutionResponseRejected",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
          "uniqueItems": false,
          "$ref": "Audittrailfileapproval"
        }
      }
    },
    "FileApprovalstarted": {
      "id": "FileApprovalstarted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileResolutionNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
          "uniqueItems": false,
          "$ref": "Audittrailfileapproval"
        }
      }
    },
    "Filedeleted": {
      "id": "Filedeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Filedeleted1": {
      "id": "Filedeleted1",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfileDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Filedownloaded": {
      "id": "Filedownloaded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileDownload",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data"
        }
      }
    },
    "Fileduplicated": {
      "id": "Fileduplicated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileDuplicate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Filelocked": {
      "id": "Filelocked",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileLock",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Filemoved": {
      "id": "Filemoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileMove",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data7"
        }
      }
    },
    "Filemovedaway": {
      "id": "Filemovedaway",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfileMove",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data12"
        }
      }
    },
    "Filemovedin": {
      "id": "Filemovedin",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfileMoveTarget",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data12"
        }
      }
    },
    "Filenumberchanged": {
      "id": "Filenumberchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileNumber",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FileOCRlanguagechanged": {
      "id": "FileOCRlanguagechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileLanguage",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileopenedforonlineediting": {
      "id": "Fileopenedforonlineediting",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileOnlineEdit",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileopenedforonlineviewing": {
      "id": "Fileopenedforonlineviewing",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileOnlineView",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Filepreviewdownloaded": {
      "id": "Filepreviewdownloaded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "filePreviewDownload",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data"
        }
      }
    },
    "Filerenamed": {
      "id": "Filerenamed",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileretentionchanged": {
      "id": "Fileretentionchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileRetentionEnd",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data8"
        }
      }
    },
    "Fileretentionchanged1": {
      "id": "Fileretentionchanged1",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileRetentionEnd",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileshared": {
      "id": "Fileshared",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Filetoolarge": {
      "id": "Filetoolarge",
      "required": [],
      "properties": {
        "status": {
          "description": "File inside the archive is too large to unpack",
          "enum": [
            "3"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "enum": [
            "oversize"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "progressMax": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "currentPath": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileunlocked": {
      "id": "Fileunlocked",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileUnlock",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Fileuploaded": {
      "id": "Fileuploaded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "File4": {
      "id": "File4",
      "required": [],
      "properties": {
        "uid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "File name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FileMetacreated": {
      "id": "FileMetacreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileMetaRequired",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfilemeta"
        }
      }
    },
    "FileMetadeleted": {
      "id": "FileMetadeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileMetaDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfilemeta"
        }
      }
    },
    "FileMetavaluechanged": {
      "id": "FileMetavaluechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileMetaValue",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfilemeta"
        }
      }
    },
    "filterItem": {
      "id": "filterItem",
      "required": [
        "tag"
      ],
      "properties": {
        "tag": {
          "description": "Tag",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "filterItem1": {
      "id": "filterItem1",
      "required": [
        "person"
      ],
      "properties": {
        "person": {
          "description": "Person",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "filterItem2": {
      "id": "filterItem2",
      "required": [
        "number"
      ],
      "properties": {
        "number": {
          "description": "Number",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "has"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FolderAutomatedWorkflowactivated": {
      "id": "FolderAutomatedWorkflowactivated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderResolutionActivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfolderautomatedworkflow"
        }
      }
    },
    "FolderAutomatedWorkflowdeactivated": {
      "id": "FolderAutomatedWorkflowdeactivated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderResolutionDeactivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfolderautomatedworkflow"
        }
      }
    },
    "FolderAutomatedWorkflowmethodchanged": {
      "id": "FolderAutomatedWorkflowmethodchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderResolutionMethod",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfolderautomatedworkflow"
        }
      }
    },
    "FolderAutomatedWorkflowrecursionchanged": {
      "id": "FolderAutomatedWorkflowrecursionchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderResolutionRecursive",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfolderautomatedworkflow"
        }
      }
    },
    "FolderAutomatedWorkflowsettoinherit": {
      "id": "FolderAutomatedWorkflowsettoinherit",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderResolutionInherit",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FolderAutomatedWorkflowtextchanged": {
      "id": "FolderAutomatedWorkflowtextchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderResolutionText",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfolderautomatedworkflow"
        }
      }
    },
    "FolderAutomatedWorkflowtypechanged": {
      "id": "FolderAutomatedWorkflowtypechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderResolutionType",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfolderautomatedworkflow"
        }
      }
    },
    "Foldercreated": {
      "id": "Foldercreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folderdeleted": {
      "id": "Folderdeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folderdownloaded": {
      "id": "Folderdownloaded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderDownload",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folderduplicated": {
      "id": "Folderduplicated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderDuplicate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Foldermoved": {
      "id": "Foldermoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderMove",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "Either source or target can be null, in which case it was or became a section",
          "uniqueItems": false,
          "$ref": "Data9"
        }
      }
    },
    "FolderOCRlanguagechanged": {
      "id": "FolderOCRlanguagechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderLanguage",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folderrename": {
      "id": "Folderrename",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folderretentionchanged": {
      "id": "Folderretentionchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderRetention",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data14"
        }
      }
    },
    "Foldershared": {
      "id": "Foldershared",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Folderthatmoved": {
      "id": "Folderthatmoved",
      "required": [],
      "properties": {
        "uid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Folder name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Foldervisiblecolumnschanged": {
      "id": "Foldervisiblecolumnschanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderVisibleColumns",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folder1": {
      "id": "Folder1",
      "required": [],
      "properties": {
        "uid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Folder name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Folder3": {
      "id": "Folder3",
      "required": [
        "name",
        "parentUid"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "FolderMetacreated": {
      "id": "FolderMetacreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderMetaNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfoldermeta"
        }
      }
    },
    "FolderMetadeleted": {
      "id": "FolderMetadeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderMetaDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfoldermeta"
        }
      }
    },
    "FolderMetarecursivechanged": {
      "id": "FolderMetarecursivechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderMetaRecursive",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfoldermeta"
        }
      }
    },
    "FolderMetarequiredchanged": {
      "id": "FolderMetarequiredchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderMetaRequired",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailfoldermeta"
        }
      }
    },
    "Genericaction": {
      "id": "Genericaction",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Groupcreated": {
      "id": "Groupcreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountGroupAdd",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailgroup"
        }
      }
    },
    "Groupdeleted": {
      "id": "Groupdeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountGroupDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailgroup"
        }
      }
    },
    "Groupmemberchildadded": {
      "id": "Groupmemberchildadded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountGroupChildAdd",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailgroupuser1"
        }
      }
    },
    "Groupmemberchildremoved": {
      "id": "Groupmemberchildremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountGroupChildDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailgroupuser1"
        }
      }
    },
    "Groupmemberuseradded": {
      "id": "Groupmemberuseradded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountGroupUserAdd",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailgroupuser"
        }
      }
    },
    "Groupmemberuserremoved": {
      "id": "Groupmemberuserremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountGroupUserDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailgroupuser"
        }
      }
    },
    "Grouprenamed": {
      "id": "Grouprenamed",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountGroupName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailgroup"
        }
      }
    },
    "hasRelations": {
      "id": "hasRelations",
      "required": [
        "hasRelations"
      ],
      "properties": {
        "hasRelations": {
          "description": "Find files that have or don't have related files set",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Integer": {
      "id": "Integer",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "is",
            "lt",
            "lte",
            "gt",
            "gte"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "language": {
      "id": "language",
      "required": [
        "language"
      ],
      "properties": {
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Lockedfile": {
      "id": "Lockedfile",
      "required": [],
      "properties": {
        "status": {
          "description": "Found a locked file",
          "enum": [
            "6"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "enum": [
            "locked"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "progressMax": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "currentPath": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "mailContent": {
      "id": "mailContent",
      "required": [
        "mailContent"
      ],
      "properties": {
        "mailContent": {
          "description": "Mail Content",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "mailSenderEmail": {
      "id": "mailSenderEmail",
      "required": [
        "mailSenderEmail"
      ],
      "properties": {
        "mailSenderEmail": {
          "description": "Mail Sender e-mail",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "mailSenderName": {
      "id": "mailSenderName",
      "required": [
        "mailSenderName"
      ],
      "properties": {
        "mailSenderName": {
          "description": "Mail Sender Name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "mailSubject": {
      "id": "mailSubject",
      "required": [
        "mailSubject"
      ],
      "properties": {
        "mailSubject": {
          "description": "Mail Subject",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Meta": {
      "id": "Meta",
      "required": [],
      "properties": {
        "uid": {
          "description": "Meta UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Meta name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MetaColumn": {
      "id": "MetaColumn",
      "required": [],
      "properties": {
        "meta": {
          "description": "Meta UID",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "MetaColumn1": {
      "id": "MetaColumn1",
      "required": [],
      "properties": {
        "meta": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Meta"
        }
      }
    },
    "Metacreated": {
      "id": "Metacreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "metaNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailmeta"
        }
      }
    },
    "Metadeleted": {
      "id": "Metadeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "metaDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailmeta"
        }
      }
    },
    "Metadescriptionchanged": {
      "id": "Metadescriptionchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "metaDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailmeta"
        }
      }
    },
    "Metanamechanged": {
      "id": "Metanamechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "metaName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailmeta"
        }
      }
    },
    "meta1": {
      "id": "meta1",
      "required": [
        "meta"
      ],
      "properties": {
        "meta": {
          "description": "Include meta",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Newfile": {
      "id": "Newfile",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfileNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Newsubfolder": {
      "id": "Newsubfolder",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfolderNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Notechanged": {
      "id": "Notechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileNote",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Otheruser1": {
      "id": "Otheruser1",
      "description": "Indicates that a substitute user performed the action",
      "required": [],
      "properties": {
        "uid": {
          "description": "User UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "User name",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "User email",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Outofspace": {
      "id": "Outofspace",
      "required": [],
      "properties": {
        "status": {
          "description": "Account does not have enough space to uncompress the archive",
          "enum": [
            "4"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "enum": [
            "freespace"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "progressMax": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "currentPath": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Params": {
      "id": "Params",
      "required": [
        "destination"
      ],
      "properties": {
        "destination": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Params1": {
      "id": "Params1",
      "required": [
        "type",
        "invites",
        "method"
      ],
      "properties": {
        "type": {
          "description": "",
          "enum": [
            "parallel",
            "serial",
            "custom"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "invites": {
          "description": "",
          "items": {
            "$ref": "resolutioninvite"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "keepActive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "method": {
          "description": "",
          "enum": [
            "approval",
            "DocuSign",
            "eID",
            "acknowledgement",
            "eSign",
            "review"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "showMeta": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "showRelatedEntities": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "timeout": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Params2": {
      "id": "Params2",
      "required": [
        "invites",
        "method"
      ],
      "properties": {
        "invites": {
          "description": "",
          "items": {
            "$ref": "resolutioninvite"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "method": {
          "description": "",
          "enum": [
            "approval",
            "DocuSign",
            "eID",
            "acknowledgement",
            "eSign",
            "review"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "timeout": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "Params3": {
      "id": "Params3",
      "required": [
        "method"
      ],
      "properties": {
        "method": {
          "description": "",
          "enum": [
            "approval",
            "DocuSign",
            "eID",
            "acknowledgement",
            "eSign",
            "review"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Params4": {
      "id": "Params4",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Amount of seconds to delay",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "parentUid": {
      "id": "parentUid",
      "required": [
        "parentUid"
      ],
      "properties": {
        "parentUid": {
          "description": "Search from this parent",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Partdata": {
      "id": "Partdata",
      "required": [],
      "properties": {
        "partNumber": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "contentLength": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "lastModified": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Part1": {
      "id": "Part1",
      "required": [],
      "properties": {
        "url": {
          "description": "Send file data as PUT request to this url",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Permissions9": {
      "id": "Permissions9",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canShare": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdateRetention": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canAudit": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Permissions10": {
      "id": "Permissions10",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canUpdate": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canAddInvites": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Permissions12": {
      "id": "Permissions12",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Personadded": {
      "id": "Personadded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileSigneeNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailperson"
        }
      }
    },
    "Personcreated": {
      "id": "Personcreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "signeeNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Persondeleted": {
      "id": "Persondeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "signeeDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Personnamechanged": {
      "id": "Personnamechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "signeeName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Personremoved": {
      "id": "Personremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileSigneeDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailperson"
        }
      }
    },
    "Person2": {
      "id": "Person2",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "propertiessort": {
      "id": "propertiessort",
      "required": [],
      "properties": {
        "field": {
          "description": "",
          "enum": [
            "score",
            "id",
            "uid",
            "name",
            "size",
            "number",
            "date",
            "dueDate",
            "mailSender",
            "mailSenderName",
            "mailSubject",
            "extension",
            "mimeType",
            "address",
            "meta:<uid>"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "order": {
          "description": "",
          "enum": [
            "asc",
            "desc"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "query": {
      "id": "query",
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "queryFilter": {
          "description": "Query filter",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Relateditemadded": {
      "id": "Relateditemadded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileRelationNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data5"
        }
      }
    },
    "Relateditemremoved": {
      "id": "Relateditemremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileRelationDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data5"
        }
      }
    },
    "relatedUid": {
      "id": "relatedUid",
      "required": [
        "relatedUid"
      ],
      "properties": {
        "relatedUid": {
          "description": "Return only the ones with specified related file UIDs",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Resetmailinaddress": {
      "id": "Resetmailinaddress",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "",
          "defaultValue": "reset",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Resolution1": {
      "id": "Resolution1",
      "required": [],
      "properties": {
        "status": {
          "description": "",
          "enum": [
            "deleted",
            "preparing",
            "active",
            "inProgress",
            "complete",
            "rejected"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Section": {
      "id": "Section",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Sectioncreated": {
      "id": "Sectioncreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountSectionNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Sectiondeleted": {
      "id": "Sectiondeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountSectionDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Sectionduplicated": {
      "id": "Sectionduplicated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountSectionDuplicate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Select": {
      "id": "Select",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "is"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Shareactivated": {
      "id": "Shareactivated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareActivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareactivated1": {
      "id": "Shareactivated1",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareActivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareactivated2": {
      "id": "Shareactivated2",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareActivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Sharedeactivated": {
      "id": "Sharedeactivated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareDeactivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Sharedeactivated1": {
      "id": "Sharedeactivated1",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareDeactivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Sharedeactivated2": {
      "id": "Sharedeactivated2",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareDeactivate",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareexpirationchanged": {
      "id": "Shareexpirationchanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareExpiration",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareexpirationchanged1": {
      "id": "Shareexpirationchanged1",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareExpiration",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareexpirationchanged2": {
      "id": "Shareexpirationchanged2",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareExpiration",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareremoved": {
      "id": "Shareremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareremoved1": {
      "id": "Shareremoved1",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Shareremoved2": {
      "id": "Shareremoved2",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Sharerolechanged": {
      "id": "Sharerolechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareRole",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Sharerolechanged1": {
      "id": "Sharerolechanged1",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareRole",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Sharerolechanged2": {
      "id": "Sharerolechanged2",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "shareRole",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "auditTrailShare"
        }
      }
    },
    "Sourcefolder": {
      "id": "Sourcefolder",
      "required": [],
      "properties": {
        "uid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Folder name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "String": {
      "id": "String",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "has",
            "is",
            "prefix",
            "wildcard"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Subfolderdeleted": {
      "id": "Subfolderdeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfolderDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Entity2"
        }
      }
    },
    "Subfoldermovedaway": {
      "id": "Subfoldermovedaway",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfolderMove",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "Target can be null, in which case it became a section",
          "uniqueItems": false,
          "$ref": "Data10"
        }
      }
    },
    "Subfoldermovedin": {
      "id": "Subfoldermovedin",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "folder",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "folderSubfolderMoveTarget",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "Source can be null, in which case it was a section",
          "uniqueItems": false,
          "$ref": "Data11"
        }
      }
    },
    "Success": {
      "id": "Success",
      "required": [],
      "properties": {
        "status": {
          "description": "Unpacking finished",
          "enum": [
            "0"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "text": {
          "description": "",
          "enum": [
            "success"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "progress": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "progressMax": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "currentPath": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Supports": {
      "id": "Supports",
      "required": [],
      "properties": {
        "versioning": {
          "description": "Indicates whether file support versioning with version, versionUid and previewAvailable",
          "uniqueItems": false,
          "type": "boolean"
        },
        "locking": {
          "description": "Indicates whether file supports locking",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "Tagadded": {
      "id": "Tagadded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileTagNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Tagcreated": {
      "id": "Tagcreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "tagNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Tagdeleted": {
      "id": "Tagdeleted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "tagDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Tagnamechanged": {
      "id": "Tagnamechanged",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "tagName",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Tagremoved": {
      "id": "Tagremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileTagDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailtag"
        }
      }
    },
    "Tag2": {
      "id": "Tag2",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Tag3": {
      "id": "Tag3",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "tagUid": {
      "id": "tagUid",
      "required": [
        "tagUid"
      ],
      "properties": {
        "tagUid": {
          "description": "Required tag uid list",
          "items": {
            "type": "string"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "Targetfolder": {
      "id": "Targetfolder",
      "required": [],
      "properties": {
        "uid": {
          "description": "Folder UID",
          "uniqueItems": false,
          "type": "string"
        },
        "name": {
          "description": "Folder name",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Teamuseraccepted": {
      "id": "Teamuseraccepted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserAccept",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Teamuseradoptionaccepted": {
      "id": "Teamuseradoptionaccepted",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserManagedAccept",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Teamuseradoptioninvitation": {
      "id": "Teamuseradoptioninvitation",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserManagedInvite",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailuser"
        }
      }
    },
    "Teamuseradoptioninvitationremoval": {
      "id": "Teamuseradoptioninvitationremoval",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserManagedInviteDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailuser"
        }
      }
    },
    "Teamuseradoptionrejected": {
      "id": "Teamuseradoptionrejected",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserManagedReject",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Teamusercreated": {
      "id": "Teamusercreated",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserAdd",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailuser"
        }
      }
    },
    "Teamuserrejected": {
      "id": "Teamuserrejected",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserReject",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Teamuserremoved": {
      "id": "Teamuserremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "account",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "accountTeamUserDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Audittrailuser"
        }
      }
    },
    "Text": {
      "id": "Text",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "has",
            "is",
            "prefix",
            "wildcard"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Time": {
      "id": "Time",
      "required": [
        "uid"
      ],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "is",
            "lt",
            "lte",
            "gt",
            "gte"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "Unpack": {
      "id": "Unpack",
      "description": "Unpacking options",
      "required": [
        "overwrite",
        "newFolder"
      ],
      "properties": {
        "overwrite": {
          "description": "Overwrite existing files (add new version)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "newFolder": {
          "description": "Create a new folder for the archive",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "URL": {
      "id": "URL",
      "required": [],
      "properties": {
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "operator": {
          "description": "",
          "enum": [
            "has",
            "is",
            "prefix",
            "wildcard"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsEntitiesActionDuplicateResponse": {
      "id": "V2AccountsEntitiesActionDuplicateResponse",
      "required": [],
      "properties": {
        "url": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest": {
      "id": "V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest",
      "required": [],
      "properties": {
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "V2AccountsEntitiesMetaMetaUidRequest": {
      "id": "V2AccountsEntitiesMetaMetaUidRequest",
      "required": [],
      "properties": {
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "V2AccountsEntitiesMetaRequest": {
      "id": "V2AccountsEntitiesMetaRequest",
      "required": [
        "metaUid",
        "value"
      ],
      "properties": {
        "metaUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "V2AccountsEntitiesRelatedRequest": {
      "id": "V2AccountsEntitiesRelatedRequest",
      "required": [
        "entityUid"
      ],
      "properties": {
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsEntitiesRequest": {
      "id": "V2AccountsEntitiesRequest",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "retention": {
          "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
          "uniqueItems": false,
          "$ref": "retention"
        },
        "retentionEnd": {
          "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
          "uniqueItems": false,
          "$ref": "retentionEnd"
        },
        "extra": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Extra"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "minimum": "-32768",
          "maximum": "32767",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "V2AccountsEntitiesRestoreRequest": {
      "id": "V2AccountsEntitiesRestoreRequest",
      "required": [],
      "properties": {
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsEntitiesTagsRequest": {
      "id": "V2AccountsEntitiesTagsRequest",
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsFilesDownloadResponse": {
      "id": "V2AccountsFilesDownloadResponse",
      "required": [],
      "properties": {
        "url": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesLockRequest": {
      "id": "V2AccountsFilesLockRequest",
      "required": [],
      "properties": {
        "time": {
          "description": "When supplied, either a specific end time for lock or null for infinite lock duration",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "lockId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesMetaMetaUidFileMetaUidRequest": {
      "id": "V2AccountsFilesMetaMetaUidFileMetaUidRequest",
      "required": [],
      "properties": {
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "V2AccountsFilesMetaMetaUidRequest": {
      "id": "V2AccountsFilesMetaMetaUidRequest",
      "required": [],
      "properties": {
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "V2AccountsFilesMetaRequest": {
      "id": "V2AccountsFilesMetaRequest",
      "required": [
        "metaUid",
        "value"
      ],
      "properties": {
        "metaUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "object"
        }
      }
    },
    "V2AccountsFilesPeopleRequest": {
      "id": "V2AccountsFilesPeopleRequest",
      "required": [
        "people"
      ],
      "properties": {
        "people": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsFilesPreviewResponse": {
      "id": "V2AccountsFilesPreviewResponse",
      "required": [],
      "properties": {
        "url": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesRelatedRequest": {
      "id": "V2AccountsFilesRelatedRequest",
      "required": [
        "fileUid"
      ],
      "properties": {
        "fileUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesRequest": {
      "id": "V2AccountsFilesRequest",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "date": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "description": "",
          "uniqueItems": false,
          "type": "string",
          "format": "date"
        },
        "note": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "number": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "versionUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "retentionEnd": {
          "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
          "uniqueItems": false,
          "$ref": "retentionEnd"
        }
      }
    },
    "V2AccountsFilesRestoreRequest": {
      "id": "V2AccountsFilesRestoreRequest",
      "required": [],
      "properties": {
        "folderUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesSharesRequest": {
      "id": "V2AccountsFilesSharesRequest",
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings",
        "public"
      ],
      "properties": {
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "public": {
          "description": "",
          "defaultValue": "True",
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "V2AccountsFilesTagsRequest": {
      "id": "V2AccountsFilesTagsRequest",
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsFilesUnlockRequest": {
      "id": "V2AccountsFilesUnlockRequest",
      "required": [],
      "properties": {
        "lockId": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesUnpackRequest": {
      "id": "V2AccountsFilesUnpackRequest",
      "required": [
        "overwrite",
        "newFolder"
      ],
      "properties": {
        "overwrite": {
          "description": "Overwrite existing files (add new version)",
          "uniqueItems": false,
          "type": "boolean"
        },
        "newFolder": {
          "description": "Create a new folder for the archive",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsFilesUnpackResponse": {
      "id": "V2AccountsFilesUnpackResponse",
      "required": [],
      "properties": {
        "key": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesVersionsFileVersionUidDownloadResponse": {
      "id": "V2AccountsFilesVersionsFileVersionUidDownloadResponse",
      "required": [],
      "properties": {
        "url": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFilesVersionsFileVersionUidPreviewResponse": {
      "id": "V2AccountsFilesVersionsFileVersionUidPreviewResponse",
      "required": [],
      "properties": {
        "url": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFoldersMetaMetaUidRequest": {
      "id": "V2AccountsFoldersMetaMetaUidRequest",
      "required": [],
      "properties": {
        "isRequired": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeFiles": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeLinks": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeFolders": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsFoldersMetaRequest": {
      "id": "V2AccountsFoldersMetaRequest",
      "required": [
        "metaUid"
      ],
      "properties": {
        "metaUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "isRequired": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "isRecursive": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeFiles": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeLinks": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "includeFolders": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsFoldersRelatedRequest": {
      "id": "V2AccountsFoldersRelatedRequest",
      "required": [
        "entityUid"
      ],
      "properties": {
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFoldersRequest": {
      "id": "V2AccountsFoldersRequest",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "retention": {
          "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
          "uniqueItems": false,
          "$ref": "retention"
        },
        "extra": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Extra"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "minimum": "-32768",
          "maximum": "32767",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "description": "Column names, prefixed with a dash (`-`) for descending order, separated with a comma",
          "uniqueItems": false,
          "type": "string"
        },
        "viewType": {
          "description": "View type of a folder listing",
          "enum": [
            "list",
            "thumbnail"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFoldersRestoreRequest": {
      "id": "V2AccountsFoldersRestoreRequest",
      "required": [],
      "properties": {
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsFoldersSharesRequest": {
      "id": "V2AccountsFoldersSharesRequest",
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings",
        "public"
      ],
      "properties": {
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "UPLOAD",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "public": {
          "description": "",
          "defaultValue": "True",
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "V2AccountsGroupsRequest": {
      "id": "V2AccountsGroupsRequest",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsGroupsUsersUserUidPermissionsResponse": {
      "id": "V2AccountsGroupsUsersUserUidPermissionsResponse",
      "required": [],
      "properties": {
        "canView": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "canDelete": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsMetaOptionsOptionUidRequest": {
      "id": "V2AccountsMetaOptionsOptionUidRequest",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "order": {
          "description": "",
          "minimum": "0",
          "maximum": "65535",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "V2AccountsMetaOptionsRequest": {
      "id": "V2AccountsMetaOptionsRequest",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "order": {
          "description": "",
          "minimum": "0",
          "maximum": "65535",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "V2AccountsMetaRequest": {
      "id": "V2AccountsMetaRequest",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "string",
          "enum": [
            "string",
            "text",
            "integer",
            "float",
            "date",
            "datetime",
            "time",
            "boolean",
            "url",
            "email",
            "select"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsPeopleRequest": {
      "id": "V2AccountsPeopleRequest",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsRemindersRequest": {
      "id": "V2AccountsRemindersRequest",
      "required": [],
      "properties": {
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "content": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "remindAt": {
          "description": "Unix timestamp",
          "uniqueItems": false,
          "type": "string"
        },
        "recurrence": {
          "description": "",
          "enum": [
            "daily",
            "weekly",
            "monthly",
            "quarterly",
            "semi-yearly",
            "yearly"
          ],
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsRequest": {
      "id": "V2AccountsRequest",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "indexing": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsSearchEntitiesResponse": {
      "id": "V2AccountsSearchEntitiesResponse",
      "required": [],
      "properties": {
        "hits": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "entities": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsSearchFilesResponse": {
      "id": "V2AccountsSearchFilesResponse",
      "required": [],
      "properties": {
        "hits": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "files": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsSearchFoldersResponse": {
      "id": "V2AccountsSearchFoldersResponse",
      "required": [],
      "properties": {
        "hits": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "number",
          "format": "double"
        },
        "folders": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsSearchSimpleResponse": {
      "id": "V2AccountsSearchSimpleResponse",
      "required": [],
      "properties": {
        "folders": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "files": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsSharedItemsResponse": {
      "id": "V2AccountsSharedItemsResponse",
      "required": [],
      "properties": {
        "folders": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        },
        "files": {
          "description": "",
          "items": {
            "type": "object"
          },
          "uniqueItems": false,
          "type": "array"
        }
      }
    },
    "V2AccountsSharesRequest": {
      "id": "V2AccountsSharesRequest",
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings"
      ],
      "properties": {
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "V2AccountsTagsRequest": {
      "id": "V2AccountsTagsRequest",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsTagsSharesRequest": {
      "id": "V2AccountsTagsSharesRequest",
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings"
      ],
      "properties": {
        "groupUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "userUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "email": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "V2AccountsUnpackCheckRequest": {
      "id": "V2AccountsUnpackCheckRequest",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsUsersRequest": {
      "id": "V2AccountsUsersRequest",
      "required": [],
      "properties": {
        "position": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2UserPermissionsResponse": {
      "id": "V2UserPermissionsResponse",
      "required": [],
      "properties": {
        "canCreateAccount": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2UserRequest": {
      "id": "V2UserRequest",
      "required": [],
      "properties": {
        "title": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "firstName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "lastName": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "phone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "defaultAccountUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "locale": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "timezone": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsRequest1": {
      "id": "V2AccountsRequest1",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "indexing": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "uniqueItems": false,
          "type": "string"
        },
        "applyLanguageRecursive": {
          "description": "Apply account language to all child items",
          "uniqueItems": false,
          "type": "boolean"
        },
        "applyLanguageFiles": {
          "description": "Apply account language to all files",
          "uniqueItems": false,
          "type": "boolean"
        },
        "applyLanguageFolders": {
          "description": "Apply account language to all folders",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsFilesRelatedRequest1": {
      "id": "V2AccountsFilesRelatedRequest1",
      "required": [
        "entityUid"
      ],
      "properties": {
        "entityUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsMetaRequest1": {
      "id": "V2AccountsMetaRequest1",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "description": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "multiple": {
          "description": "",
          "uniqueItems": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsTagsRequest1": {
      "id": "V2AccountsTagsRequest1",
      "required": [],
      "properties": {
        "name": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "parentUid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        }
      }
    },
    "V2AccountsSharesRequest1": {
      "id": "V2AccountsSharesRequest1",
      "required": [],
      "properties": {
        "role": {
          "description": "",
          "enum": [
            "READ",
            "EDIT",
            "PREVIEW",
            "CUSTOM"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "status": {
          "description": "",
          "enum": [
            "ACTIVE",
            "DEACTIVATED"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "expiration": {
          "description": "UTC timestamp",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "settings": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Sharesettings"
        }
      }
    },
    "Versionadded": {
      "id": "Versionadded",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileVersionNew",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data2"
        }
      }
    },
    "Versionremoved": {
      "id": "Versionremoved",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileVersionDelete",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data2"
        }
      }
    },
    "Versionrestored": {
      "id": "Versionrestored",
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ],
      "properties": {
        "id": {
          "description": "",
          "minimum": "1",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "uid": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "endpoint": {
          "description": "",
          "enum": [
            "frontend",
            "api"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "user": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser"
        },
        "activeUser": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Otheruser1"
        },
        "ip": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "type": {
          "description": "",
          "defaultValue": "file",
          "uniqueItems": false,
          "type": "string"
        },
        "event": {
          "description": "",
          "defaultValue": "fileVersionRestore",
          "uniqueItems": false,
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "uniqueItems": false,
          "type": "string"
        },
        "accountUid": {
          "description": "Account UID",
          "uniqueItems": false,
          "type": "string"
        },
        "time": {
          "description": "",
          "minimum": "",
          "maximum": "",
          "uniqueItems": false,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "description": "",
          "uniqueItems": false,
          "type": "string"
        },
        "cause": {
          "description": "Used for marking actions performed by background processes",
          "enum": [
            "retention"
          ],
          "uniqueItems": false,
          "type": "string"
        },
        "data": {
          "description": "",
          "uniqueItems": false,
          "$ref": "Data2"
        }
      }
    }
  },
  "authorizations": {
    "OAuth": {
      "grantTypes": {
        "authorization_code": {
          "tokenRequestEndpoint": {
            "url": "https://auth.folderit.com/oauth2/auth"
          },
          "tokenEndpoint": {
            "url": "https://auth.folderit.com/oauth2/token"
          }
        }
      },
      "type": "oauth2"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ]
}