{
  "swagger": "2.0",
  "info": {
    "version": "2.0.71",
    "title": "Folderit API",
    "description": "# Changes\n\n### 2025.08.24 - 2.0.71\n* Permission properties now support narrowing with the `fields` parameter.\n\n### 2025.08.22 - 2.0.70\n* Automatically expand requested fields, expand parameter is not required for the fields listed under the expanded variants\n* Add `thumbnails` property to File and FileVersion schemas\n\n### 2025.08.21 - 2.0.69\n* Add extension filter to [entities by parent](#tag/Entity/operation/getEntitiesByParent), [entities by tag](#tag/Entity/operation/getEntitiesByTag) and [all entities](#tag/Entity/operation/getAllEntities)\n\n### 2025.08.12 - 2.0.68\n* Add `parentUid` query parameter to [Recycled entities](#tag/Entity/operation/getRecycledEntities)\n\n### 2025.08.11 - 2.0.67\n* Add `position` as an expandable field to a team user\n\n### 2025.08.10 - 2.0.66\n* Alter [Team users](#tag/Account/operation/getTeamUsers) endpoint to a paginated response, add groups as an expandable field to a team user\n\n### 2025.07.31 - 2.0.65\n* Add lockId to [Lock a file](#tag/File/operation/lockFilePost) request  \n  Unlocking is supported only with a [PUT request](#tag/File/operation/unlockFile2)\n\n### 2025.07.29 - 2.0.64\n* Add teamUserStatus field to [account users](#tag/Account/operation/getAccountUsers) and status field to [account team users](#tag/Account/operation/getTeamUsers)\n\n### 2025.07.24 - 2.0.63\n* Add an optional operator to the search filter filterItem->number\n\n### 2025.07.01 - 2.0.62\n* Add account stats expandable field\n\n### 2025.06.10 - 2.0.61\n* Add paginated response variants to [reminder listings](#tag/Reminder)\n* Add recurrence property to [update a Reminder](#tag/Reminder/operation/updateReminder)\n\n### 2025.06.04 - 2.0.60\n* Add a method to [empty the recycle bin](#tag/Entity/operation/emptyRecycleBin)\n\n### 2025.06.03 - 2.0.59\n* Add the size property to [file versions](#tag/File/operation/getFileVersions)\n* Add a paginated response variant to [file versions listing](#tag/File/operation/getFileVersions)\n* Fetch multiple entities by UID at [Sections/entities](#tag/Entity/operation/getEntities)\n* [Duplication of entities](#tag/Entity/operation/duplicateEntities)\n* Add a paginated response variant to [related entities listing](#tag/Entity/operation/getEntityRelatedItems)\n\n### 2025.05.26 - 2.0.58\n* Add operationId to all paths\n\n### 2025.04.17 - 2.0.57\n* Add method property to resolution workflow audit trail data property\n\n### 2025.04.06 - 2.0.56\n* Add 2 new paths for fetching tags, add pagination and sorting to existing tag listing\n  * [Get only root tags](#tag/Tag/operation/getRootTags) \n  * [Get sub-tags](#tag/Tag/operation/getSubTags) \n* Add [Search entities](#tag/Search/operation/searchEntities) endpoint\n\n### 2025.04.02 - 2.0.55\n* Add [resolutions](#tag/Resolution) and [workflows](#tag/Workflow)\n* Add resolutionSupport extendable property to Entity\n\n### 2025.03.27 - 2.0.54\n* Add `options` as an expandable field to Meta\n\n### 2025.03.26 - 2.0.53\n* Add [entities by tag](#tag/Entity/operation/getEntitiesByTag) endpoint\n\n### 2025.02.03 - 2.0.52\n* Add more granular permissions for account sharing\n\n### 2025.01.20 - 2.0.51\n* Add `recurrence` property to reminders\n\n### 2025.01.17 - 2.0.50\n* Add `time` property to file lock requests for custom lock duration\n\n### 2024.12.09 - 2.0.49\n* Add `source` field to retention for customizing the source attribute for calculating the retention end time\n\n### 2024.11.13 - 2.0.48\n* Add `accountWatermarking` audit trail event\n\n### 2024.11.13 - 2.0.47\n* Add `timeFormat` as expandable field to User\n\n### 2024.10.25 - 2.0.46\n* Added comment field for workflow responses in audit trail\n\n### 2024.10.10 - 2.0.45\n* Added accountTeamUserManagedInvite, accountTeamUserManagedInviteDelete, accountTeamUserManagedAccept and accountTeamUserManagedReject audit trail events\n\n### 2024.09.17 - 2.0.44\n* Deprecate Account file report [`GET /v2/accounts/{accountUid}/reports/file-list`](#tag/File/operation/getAccountFileReport)\n\n### 2024.09.10 - 2.0.43\n* Meta of type `float` is renamed from Float to Decimal, type field stays the same for compatibility.  \n  Value is represented as a string for compatibility with higher precisions and larger values.\n* Change asic entity type text representation from `asic` to `file`\n* Add prefix and wildcard search operators for meta filters\n\n### 2024.09.02 - 2.0.42\n* Add `language` to the composable filter of search\n\n### 2024.09.02 - 2.0.41\n* Add an expandable field `activeUser` to audit trails. Present, when a substitute user performed the action.\n\n### 2024.07.26 - 2.0.40\n* File and folder retention audit events contain no `data` property any more on removal of retention\n* Add `cause` to audit trails to mark actions performed by background processes. Initially the only option is `retention`.\n* Add all entities listing endpoint: [`GET /v2/accounts/{accountUid}/entities/all`](#tag/Entity/operation/getAllEntities)\n\n### 2024.06.14 - 2.0.39\n* Mark inbox and team folders as nullable fields for Account\n\n### 2024.05.27 - 2.0.38\n* Fix Audit trail sync-log id field value\n* Add `sort` and `viewType` expandable fields to Folder\n\n### 2024.05.23 - 2.0.37\n* Search: add `uid` to queryFilter list \n\n### 2024.04.26 - 2.0.36\n* Add `visibleColumnsWithMeta` as expandable field to Folder to get meta columns with names\n\n### 2024.04.18 - 2.0.35\n* Add `remoteUsername` as expandable field to Team user\n\n### 2024.04.16 - 2.0.34\n* Add redirect Location url in content as well\n* Add `creator` as expandable field to Entity\n* Include response samples with all expanded fields.  \n  Note: It is recommended to ask for as few fields as is necessary as there are optimizations in place in the background for generating responses. This goes for both default fields and extra related data using expand option. For example, when requesting for all entities under a parent with tags, meta etc, if You don't need to have permissions for each related piece, do not request for them. A sample get param would be: `?fields=uid,name,tags.uid,tags.name,meta.meta.uid,meta.value&expand=tags,meta:myMetaUid,meta:myOtherMetaUid`\n\n### 2024.04.11 - 2.0.33\n* Add sorting to entities by parent endpoint: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/entities`](#tag/Entity/operation/getEntitiesByParent)\n* Add `extension` as expandable field to Entity\n* Add `size` as expandable field to Entity\n\n### 2024.04.10 - 2.0.32\n* Update folder column attribute options list\n* Add `tags` as expandable field to Entity\n* Add `dateFormat` as expandable field to User\n\n### 2024.03.20 - 2.0.31\n* Add `meta:UID` expand field to entities\n\n### 2024.03.18 - 2.0.30\n* Get a list of parents for an entity: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/parents`](#tag/Entity/operation/getEntityParents)\n* Add isRoot property to entity\n\n### 2024.03.11 - 2.0.29\n* Add sectionOrder property to entity and folder models (applicable to only root entities/sections)\n* Add folderStats property to entity and folder models\n* Add inboxFolder and teamFolder properties to entity and folder models\n\n### 2024.01.09 - 2.0.28\n* Add account as an expandable relation to Entity\n\n### 2023.11.24 - 2.0.27\n* Add highlight expand field for search results\n\n### 2023.11.22 - 2.0.26\n* Add `version` expandable field to `File` objects\n\n### 2023.10.30 - 2.0.25\n* Add fileUpdateContent and fileUpdateOnline permissions to file\n* Add canShareCustomPermissions to Account permissions list\n  * Without this permission, You can only set the role property for a share, no settings\n\n### 2023.10.22 - 2.0.24\n* Add endpoints for getting shares to a specific user\n  * Get direct shares to a specific user: [`GET /v2/accounts/{accountUid}/users/{userUid}/shares`](#tag/Share/operation/getUserShares)\n  * Get all shares (including through group memberships) accessible by a specific user: [`GET /v2/accounts/{accountUid}/users/{userUid}/access`](#tag/Share/operation/getAllUserShares)\n* Add documentation for fetching share info: [`GET /v2/accounts/{accountUid}/shares/{shareUid}`](#tag/Share/operation/getShare)\n* Add settings property to shares\n\n### 2023.10.18 - 2.0.23\n* Add missing endpoint documentation for tag sharing\n  * Get tag shares: [`GET /v2/accounts/{accountUid}/tags/{tagUid}/shares`](#tag/Tag/operation/getTagShares)\n  * Share a tag: [`POST /v2/accounts/{accountUid}/tags/{tagUid}/shares`](#tag/Tag/operation/addTagShares)\n\n### 2023.10.18 - 2.0.22\n* Add group expand parameters to doc\n\n### 2023.09.20 - 2.0.21\n* Add composable filter and scoring option to file/folder searches\n  * *filter* property can contain a nested set of familiar filters to create a required composite set of filters\n  * *scoring* property is used to force scoring even when we're not doing search by query directly (only filtering)  \n    Scoring results are not guaranteed to be sensible\n\n### 2023.09.19 - 2.0.20\n* Added fileOnlineView and fileOnlineEdit audit trail events\n\n### 2023.09.14 - 2.0.19\n* Sections list is now available for partially accessible accounts, canGetSections property indicates that all sections are guaranteed to be accessible\n* Share items to user by userUid\n\n### 2023.09.03 - 2.0.18\n* Enable moving tags around\n\n### 2023.08.30 - 2.0.17\n* Add `isUsed` attribute to Meta Select Option\n* Add tag management to entities for a single point to manage tags for all types of entities\n* Tag sharing\n* Add tagUid filter to file/folder search endpoints\n\n### 2023.08.10 - 2.0.16\n* Add searchAfter field to file/folder search endpoints for paging over more than 10000 results.\n\n### 2023.07.31 - 2.0.15\n* Add sorting to file/folder search endpoints\n\n### 2023.03.05 - 2.0.14\n* Reminders for all types of entities\n  * Added two endpoints, one specifically for folders, other for any type of entity\n  * Folders: [`GET /v2/accounts/{accountUid}/folders/{folderUid}/reminders`](#tag/Reminder/operation/getFolderReminders)\n  * Entities: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/reminders`](#tag/Reminder/operation/getEntityReminders)\n* Related items to all types of entities of all types  \n  * Added two endpoints, one specifically for folders, other for any type of entity\n  * Folders: [`GET /v2/accounts/{accountUid}/folders/{folderUid}/related`](#tag/Folder/operation/getFolderRelatedItems)\n  * Entities: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/related`](#tag/Entity/operation/getEntityRelatedItems)\n* Meta for all items, new endpoint is under entities: [`GET /v2/accounts/{accountUid}/entities/{entityUid}/meta`](#tag/Entity/operation/getEntityMeta)\n\n### 2023.02.21 - 2.0.13\n* Add new request header `X-Folderit-Request-Key` to make it possible to differentiate audit trails resulting from your own requests\n* Add audit trail endpoint tailored for file syncing: [`GET /v2/accounts/{accountUid}/audit/syncLog`](#tag/Audit/operation/getFileSyncLog)\n* Add `extra` field to the expand list of folder and entity, which gives access to number, note, date etc.\n* Add `extra` field to folder and entity update endpoints\n\n### 2023.01.23 - 2.0.12\n* Add includeFiles, includeLinks and includeFolders fields for FolderMeta\n\n### 2022.07.22 - 2.0.11\n* Add groups as group members ([GET group all members](#operation/getGroupMembers))\n* Add [Entity endpoint](#tag/Entity) for a unified access to directory structure (access to all types of entities like folders, files, links and more in the future)\n\n### 2022.04.13 - 2.0.10\n* Add `fields` and `expand` query parameters to paths resulting in accounts, folders and files\n  * `fields` parameter can be used to reduce amount of data returned. For example: `fields=uid,name`\n  * `expand` parameter can be used to fetch related objects with the request, for example fetching meta with a file list.\n    * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/files?expand=meta,people,tags`](#tag/Folder/operation/getFilesByParent) includes meta, people and tags arrays with each file\n  * `expand` and `fields` can be combined to get all fields of the initial object, but only a few from a related object:\n    * `fields=*,meta.value,meta.meta.name&expand=meta`\n* Search result updates for autocomplete [`GET /v2/accounts/{accountUid}/search/simple`](#tag/Search/operation/searchAutocomplete) and [`GET /v2/accounts/{accountUid}/search/files`](#tag/Search/operation/searchFiles):\n  * Mark file search result pathUid property as deprecated\n  * Add mimeType property to file search results\n\n### 2022.04.06 - 2.0.9\n* Add email as a required field for signing up team users via [`POST /v2/accounts/{accountUid}/team-users`](#tag/Account/operation/addTeamUser)\n\n### 2022.04.02 - 2.0.8\n* Add new audit events\n  * fileDuplicate\n  * folderDuplicate\n  * folderSubfileDuplicate\n  * folderSubfolderDuplicate\n  * accountSectionDuplicate\n* Add userUid and groupUid to Audit Trail Share data\n* Audit trail fileDownload events now have fileVersionUid data\n\n### 2022.02.23 - 2.0.7\n* Add folder import emails (mailInAddress)\n  * Activate an address for importing mails to any folder (in contrast to Inbox section, which always has a static address)\n    * Activate address: [`POST /v2/accounts/{accountUid}/folders/{folderUid}/email`](#tag/Folder/operation/configureFolderEmail)\n    * Deactivate existing address: [`DELETE /v2/accounts/{accountUid}/folders/{folderUid}/email`](#tag/Folder/operation/deleteFolderEmail)\n    * Reset (active or deleted) address to get a new random key: [`PUT /v2/accounts/{accountUid}/folders/{folderUid}/email`](#tag/Folder/operation/requestNewFolderEmailAddress)\n  * If You prefer to only use POST requests, use `action` parameter in request body\n\n### 2022.02.13 - 2.0.6\n* Add dateFrom and dateTo filters for file search\n* Add file report [`GET /v2/accounts/{accountUid}/reports/file-list`](#tag/File/operation/getAccountFileReport)\n\n### 2022.01.24 - 2.0.5\n* Add new audit event: fileResolutionDelete\n\n### 2022.01.22 - 2.0.4\n* Adjusted field names in error responses to correct names\n\n### 2022.01.16 - 2.0.3\n* Added pagination\n  * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/folders`](#tag/Folder/operation/getFolderByParent)\n  * [`GET /v2/accounts/{accountUid}/recycle-bin/folders`](#tag/Folder/operation/getRecycledFolders)\n  * [`GET /v2/accounts/{accountUid}/recycle-bin/files`](#tag/File/operation/getRecycledFiles)\n\n### 2022.01.14 - 2.0.2\n* Fix Folder visibleColumns meta column spec\n\n### 2022.01.14 - 2.0.1\n* Added `page-size` parameter to paths that already had `page` parameter\n  * [`GET /v2/accounts/{accountUid}/audit/accountLog`](#tag/Audit/operation/getAccountRecentAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/audit`](#tag/Audit/operation/getAccountAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/files/{fileUid}/audit`](#tag/Audit/operation/getFileAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/audit`](#tag/Audit/operation/getFolderAuditTrail)\n  * [`GET /v2/accounts/{accountUid}/groups`](#tag/Group/operation/getGroups)\n* Added pagination\n  * [`GET /v2/accounts/{accountUid}/folders/{folderUid}/files`](#tag/File/operation/getFilesByParent)\n* Added missing pagination documentation\n  * [`GET /v2/accounts/{accountUid}/groups/{groupUid}/users`](#tag/Group/operation/getGroupUsers)\n\n### 2021.12.19 - 2.0.0\nAPI v2 comes with multiple breaking changes. Most notably:\n* Removed any reference to object `ID`s. Instead we are now using `UID`s. UIDs are globally unique and have a data type of CHAR(10)\n* Paths now include `accountUid` as required parameter\n* `accountId` paramater has been removed from request body parameters as `accountUid` is now always part of the path parameters for Account-related requests\n* New tags and people/signees can be created directly without attaching them to a file from [`POST /v2/accounts/{accountUid}/tags`](#tag/Tag/operation/addTag) and [`POST /v2/accounts/{accountUid}/people`](#tag/Person/operation/addPerson)\n* Removed deprecated paths and parameters\n\n#### New features\n* Audit trail: added new tag and person/signee events on Account level\n  * tagNew\n  * tagDelete\n  * tagName\n  * signeeNew\n  * signeeDelete\n  * signeeName\n* Search\n  * Added queryFilter options to File search\n    * number\n    * mailSubject\n    * mailSenderEmail\n    * mailSenderName\n    * mailContent\n  * Added filter fields to File search\n    * number\n    * mailSubject\n    * mailSenderEmail\n    * mailSenderName\n    * mailContent\n\n#### Detailed changes to paths:\n* Removed paths:\n  * /files\n  * /files/{fileId}\n  * /folders\n  * /folders/{folderId}\n  * /accounts/{accountId}/recycle-bin\n  * /meta/{metaId}\n  * /files/search\n  * /folders/search\n  * /download\n  * /audit/files/{fileId}\n  * /audit/folders/{folderId}\n* New paths:\n  * /v2/accounts/{accountUid}/files/{fileUid}/preview\n  * /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/download\n* Changed paths:\n  * /files/upload -> /v2/accounts/{accountUid}/files/upload\n  * /files/single/{fileId} -> /v2/accounts/{accountUid}/files/{fileUid}\n  * /files/{fileId}/permissions -> /v2/accounts/{accountUid}/files/{fileUid}/permissions\n  * /files/{fileId}/lock -> /v2/accounts/{accountUid}/files/{fileUid}/lock\n  * /files/{fileId}/unlock -> /v2/accounts/{accountUid}/files/{fileUid}/unlock\n  * /files/{fileId}/related -> /v2/accounts/{accountUid}/files/{fileUid}/related\n  * /files/{fileId}/restore -> /v2/accounts/{accountUid}/files/{fileUid}/restore\n  * /files/{fileId}/purge -> /v2/accounts/{accountUid}/files/{fileUid}/purge\n  * /files/{fileId}/versions -> /v2/accounts/{accountUid}/files/{fileUid}/versions\n  * /files/{fileId}/versions/{fileVersionId} -> /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}\n  * /files/download/{fileId} -> /v2/accounts/{accountUid}/files/{fileUid}/download\n  * /files/versions/{fileVersionId}/preview -> /v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/preview\n  * /files/{fileId}/unpack -> /v2/accounts/{accountUid}/files/{fileUid}/unpack\n  * /files/unpack-status/{key} -> /v2/accounts/{accountUid}/unpack/status/{key}\n  * /files/unpack-check -> /v2/accounts/{accountUid}/unpack/check\n  * /files/languages -> /v2/accounts/{accountUid}/document-languages\n  * /folders/single/{folderId} -> /v2/accounts/{accountUid}/folders/{folderUid}\n  * /files/people/{personId} -> /v2/accounts/{accountUid}/people/{personUid}\n  * /files/people/{personId}/permissions -> /v2/accounts/{accountUid}/people/{personUid}/permissions\n  * /folders/{folderId}/files -> /v2/accounts/{accountUid}/folders/{folderUid}/files\n  * /folders/single/{folderId} -> /v2/accounts/{accountUid}/folders/{folderUid}\n  * /folders/{folderId}/permissions -> /v2/accounts/{accountUid}/folders/{folderUid}/permissions\n  * /folders/{folderId}/folders -> /v2/accounts/{accountUid}/folders/{folderUid}/folders\n  * /folders/{folderId}/restore -> /v2/accounts/{accountUid}/folders/{folderUid}/restore\n  * /folders/{folderId}/purge -> /v2/accounts/{accountUid}/folders/{folderUid}/purge\n  * /groups/{groupId} -> /v2/accounts/{accountUid}/groups/{groupUid}\n  * /groups/{groupId}/permissions -> /v2/accounts/{accountUid}/groups/{groupUid}/permissions\n  * /groups/{groupId}/shares -> /v2/accounts/{accountUid}/groups/{groupUid}/shares\n  * /groups/{groupId}/users -> /v2/accounts/{accountUid}/groups/{groupUid}/users\n  * /groups/{groupId}/users/{userId} -> /v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}\n  * /groups/{groupId}/users/{userId}/permissions -> /v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}/permissions\n  * /meta/{metaId}/permissions -> /v2/accounts/{accountUid}/meta/{metaUid}/permissions\n  * /files/{fileId}/meta -> /v2/accounts/{accountUid}/files/{fileUid}/meta\n  * /files/{fileId}/meta/{metaId} -> /v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}\n  * /files/{fileId}/meta/active -> /v2/accounts/{accountUid}/files/{fileUid}/active-meta\n  * /folders/{folderId}/meta -> /v2/accounts/{accountUid}/folders/{folderUid}/meta\n  * /folders/{folderId}/meta/{metaId} -> /v2/accounts/{accountUid}/folders/{folderUid}/meta/{metaUid}\n  * /folders/{folderId}/meta/active -> /v2/accounts/{accountUid}/folders/{folderUid}/active-meta\n  * /files/people/{personId} -> /v2/accounts/{accountUid}/people/{personUid}\n  * /files/people/{personId}/permissions -> /v2/accounts/{accountUid}/people/{personUid}/permissions\n  * /files/{fileId}/people -> /v2/accounts/{accountUid}/files/{fileUid}/people\n  * /files/{fileId}/people/{personId} -> /v2/accounts/{accountUid}/files/{fileUid}/people/{personUid}\n  * /files/reminders/{reminderId} -> /v2/accounts/{accountUid}/reminders/{reminderUid}\n  * /files/{fileId}/reminders -> /v2/accounts/{accountUid}/files/{fileUid}/reminders\n  * /search/extensions -> /v2/accounts/{accountUid}/search/extensions\n  * /search/files -> /v2/accounts/{accountUid}/search/files\n  * /search/folders -> /v2/accounts/{accountUid}/search/folders\n  * /search/simple -> /v2/accounts/{accountUid}/search/simple\n  * /shares/{shareId} -> /v2/accounts/{accountUid}/shares/{shareUid}\n  * /shares/{shareId}/permissions -> /v2/accounts/{accountUid}/shares/{shareUid}/permissions\n  * /files/{fileId}/shares -> /v2/accounts/{accountUid}/files/{fileUid}/shares\n  * /folders/{folderId}/shares -> /v2/accounts/{accountUid}/folders/{folderUid}/shares\n  * /files/tags/{tagId} -> /v2/accounts/{accountUid}/tags/{tagUid}\n  * /files/tags/{tagId}/permissions -> /v2/accounts/{accountUid}/tags/{tagUid}/permissions\n  * /files/{fileId}/tags -> /v2/accounts/{accountUid}/files/{fileUid}/tags\n  * /files/{fileId}/tags/{tagId} -> /v2/accounts/{accountUid}/files/{fileUid}/tags/{tagUid}\n  * /audit/accountLog/{accountId} -> /v2/accounts/{accountUid}/audit/accountLog\n  * /files/{fileId}/audit -> /v2/accounts/{accountUid}/files/{fileUid}/audit\n  * /folders/{folderId}/audit -> /v2/accounts/{accountUid}/folders/{folderUid}/audit\n",
    "contact": {}
  },
  "host": "api.folderit.com",
  "basePath": "/",
  "securityDefinitions": {
    "OAuth_authorization_code": {
      "type": "oauth2",
      "description": "This API uses [OAuth 2.0](https://oauth.net/2/) for authentication. Available grant types are described below.  \nAccess Tokens should be used as a Bearer credential and transmitted in an HTTP Authorization header to the API.\n",
      "flow": "accessCode",
      "authorizationUrl": "https://auth.folderit.com/oauth2/auth",
      "tokenUrl": "https://auth.folderit.com/oauth2/token",
      "scopes": {}
    },
    "OAuth_client_credentials": {
      "type": "oauth2",
      "description": "This API uses [OAuth 2.0](https://oauth.net/2/) for authentication. Available grant types are described below.  \nAccess Tokens should be used as a Bearer credential and transmitted in an HTTP Authorization header to the API.\n",
      "flow": "application",
      "tokenUrl": "https://auth.folderit.com/oauth2/token",
      "scopes": {}
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/user": {
      "get": {
        "description": "Returns user details",
        "summary": "getUser",
        "tags": [
          "User"
        ],
        "operationId": "getUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "dateFormat",
                "timeFormat"
              ]
            },
            "description": "Include additional information (comma-separated)."
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "schema": {},
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "editUser",
        "tags": [
          "User"
        ],
        "operationId": "editUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2UserRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "dateFormat",
                "timeFormat"
              ]
            },
            "description": "Include additional information (comma-separated)."
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "schema": {},
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/user/billing": {
      "put": {
        "description": "",
        "summary": "editUserBilling",
        "tags": [
          "User"
        ],
        "operationId": "editUserBilling",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "User profile",
            "schema": {},
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/user/countries": {
      "get": {
        "description": "",
        "summary": "getSupportedCountries",
        "tags": [
          "User"
        ],
        "operationId": "getSupportedCountries",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Supported countries",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/user/countries/{locale}": {
      "get": {
        "description": "",
        "summary": "getSupportCountriesInLocale",
        "tags": [
          "User"
        ],
        "operationId": "getSupportCountriesInLocale",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "locale",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Locale"
          }
        ],
        "responses": {
          "200": {
            "description": "Supported countries",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/user/locales": {
      "get": {
        "description": "",
        "summary": "getSupportedLocales",
        "tags": [
          "User"
        ],
        "operationId": "getSupportedLocales",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Supported locales",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/user/permissions": {
      "get": {
        "description": "",
        "summary": "getUserPermissions",
        "tags": [
          "User",
          "Permission"
        ],
        "operationId": "getUserPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/V2UserPermissionsResponse"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/users": {
      "post": {
        "description": "",
        "summary": "signupUser",
        "tags": [
          "User"
        ],
        "operationId": "signupUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/newUserSignup"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "User signed up",
            "schema": {
              "$ref": "#/definitions/Otheruser"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/users/{userUid}": {
      "get": {
        "description": "",
        "summary": "getUserByUid",
        "tags": [
          "User"
        ],
        "operationId": "getUserByUid",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "User information",
            "schema": {
              "$ref": "#/definitions/Otheruser"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/users/{userUid}/shares": {
      "get": {
        "description": "",
        "summary": "getUserShares",
        "tags": [
          "User",
          "Share"
        ],
        "operationId": "getUserShares",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Item shares",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Cursor": {
                "description": "Current cursor",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/users/{userUid}/access": {
      "get": {
        "description": "All shares (including through groups) accessible by an user",
        "summary": "getAllUserShares",
        "tags": [
          "User",
          "Share"
        ],
        "operationId": "getAllUserShares",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Item shares",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Cursor": {
                "description": "Current cursor",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/team-users": {
      "get": {
        "description": "",
        "summary": "getTeamUsers",
        "tags": [
          "Account"
        ],
        "operationId": "getTeamUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "remoteUsername",
                "status"
              ]
            },
            "description": "Include additional information (comma-separated)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 100,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|email|name)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * email\n  * name"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of team users",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addTeamUser",
        "tags": [
          "Account"
        ],
        "operationId": "addTeamUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "remoteUsername",
                "status"
              ]
            },
            "description": "Include additional information (comma-separated)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "User signed up / added",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/team-users/{userUid}": {
      "get": {
        "description": "",
        "summary": "getTeamUser",
        "tags": [
          "Account"
        ],
        "operationId": "getTeamUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "remoteUsername",
                "status"
              ]
            },
            "description": "Include additional information (comma-separated)."
          }
        ],
        "responses": {
          "200": {
            "description": "Team user",
            "schema": {},
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts": {
      "get": {
        "description": "Returns available accounts",
        "summary": "getAccounts",
        "tags": [
          "Account"
        ],
        "operationId": "getAccounts",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "shares",
                "stats"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained using a dot."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of accounts",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "createAccount",
        "tags": [
          "Account"
        ],
        "operationId": "createAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "shares",
                "stats"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained using a dot."
          }
        ],
        "responses": {
          "200": {
            "description": "Account created",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}": {
      "get": {
        "description": "",
        "summary": "getAccount",
        "tags": [
          "Account"
        ],
        "operationId": "getAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "shares",
                "stats"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained using a dot."
          }
        ],
        "responses": {
          "200": {
            "description": "Account info",
            "schema": {},
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateAccount",
        "tags": [
          "Account"
        ],
        "operationId": "updateAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsRequest1"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "shares",
                "stats"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained using a dot."
          }
        ],
        "responses": {
          "200": {
            "description": "Account info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteAccount",
        "tags": [
          "Account"
        ],
        "operationId": "deleteAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "shares",
                "stats"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained using a dot."
          }
        ],
        "responses": {
          "200": {
            "description": "Account info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getAccountPermissions",
        "tags": [
          "Account",
          "Permission"
        ],
        "operationId": "getAccountPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/permissions"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/users": {
      "get": {
        "description": "",
        "summary": "getAccountUsers",
        "tags": [
          "Account"
        ],
        "operationId": "getAccountUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Account Users",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/users/{userUid}": {
      "get": {
        "description": "",
        "summary": "getAccountUser",
        "tags": [
          "Account"
        ],
        "operationId": "getAccountUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Account User",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateAccountUser",
        "tags": [
          "Account"
        ],
        "operationId": "updateAccountUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsUsersRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Account User",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteAccountUser",
        "tags": [
          "Account"
        ],
        "operationId": "deleteAccountUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Account User",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/section-order": {
      "get": {
        "description": "",
        "summary": "getSectionOrder",
        "tags": [
          "Account"
        ],
        "operationId": "getSectionOrder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Account section order, if configured",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "examples": {
              "application/json": [
                "asd",
                "asdf",
                "asdg"
              ]
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Unlisted sections will be ordered by name after listed sections",
        "summary": "updateSectionOrder",
        "tags": [
          "Account"
        ],
        "operationId": "updateSectionOrder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Account section order",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/download": {
      "get": {
        "description": "To download whole account, omit files and folders properties  \nAlternatively, POST request is also supported\n",
        "summary": "downloadFilesAndFoldersBundle",
        "tags": [
          "Account",
          "File",
          "Folder"
        ],
        "operationId": "downloadFilesAndFoldersBundle",
        "deprecated": false,
        "produces": [
          "application/octet-stream",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "ZIP Archive",
            "schema": {
              "type": "string",
              "format": "binary"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities": {
      "get": {
        "description": "",
        "summary": "getEntities",
        "tags": [
          "Entity"
        ],
        "operationId": "getEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|name|createdAt|updatedAt|type|retentionEnd)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt\n  * type\n  * retentionEnd"
          }
        ],
        "responses": {
          "200": {
            "description": "Section list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}": {
      "get": {
        "description": "",
        "summary": "getEntity",
        "tags": [
          "Entity"
        ],
        "operationId": "getEntity",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Entity info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateEntity",
        "tags": [
          "Entity"
        ],
        "operationId": "updateEntity",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated entity",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteEntity",
        "tags": [
          "Entity"
        ],
        "operationId": "deleteEntity",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted entity",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/entities": {
      "get": {
        "description": "",
        "summary": "getEntitiesByParent",
        "tags": [
          "Entity"
        ],
        "operationId": "getEntitiesByParent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|name|date|due_date|size|mail_sender|retention_end|language|number|created_at|updated_at|recycle_date|creator|extension|meta:[A-Za-z0-9_-]{10})$"
            },
            "description": "Comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * date\n  * due_date\n  * size\n  * mail_sender\n  * retention_end\n  * language\n  * number\n  * created_at\n  * updated_at\n  * recycle_date\n  * creator\n  * extension\n  * meta:{uid}"
          },
          {
            "name": "sort-folders-first",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Set folders to be sorted first in results"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string",
            "pattern": "^[a-z0-9]+$",
            "description": "Filter by extension"
          }
        ],
        "responses": {
          "200": {
            "description": "Entity list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/all": {
      "get": {
        "description": "",
        "summary": "getAllEntities",
        "tags": [
          "Entity"
        ],
        "operationId": "getAllEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "folders",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include folders. If only specifying one, the other is opposite value"
          },
          {
            "name": "files",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include files. If only specifying one, the other is opposite value"
          },
          {
            "name": "parentUid",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Limit response to entities below specific parent"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string",
            "pattern": "^[a-z0-9]+$",
            "description": "Filter by extension"
          }
        ],
        "responses": {
          "200": {
            "description": "Entity list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Cursor": {
                "description": "Current cursor",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/parents": {
      "get": {
        "description": "",
        "summary": "getEntityParents",
        "tags": [
          "Entity"
        ],
        "operationId": "getEntityParents",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Parent entities list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/related": {
      "get": {
        "description": "",
        "summary": "getEntityRelatedItems",
        "tags": [
          "Entity"
        ],
        "operationId": "getEntityRelatedItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Pagination",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "If present (any value), the response is a paginated, sortable list"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|createdAt|entityUid)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * createdAt\n  * entityUid"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of relations  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addEntityRelatedItem",
        "tags": [
          "Entity"
        ],
        "operationId": "addEntityRelatedItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesRelatedRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Related item",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteEntityRelatedItem",
        "tags": [
          "Entity"
        ],
        "operationId": "deleteEntityRelatedItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesRelatedRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Related item",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/restore": {
      "put": {
        "description": "",
        "summary": "restoreEntity",
        "tags": [
          "Entity"
        ],
        "operationId": "restoreEntity",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesRestoreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/purge": {
      "put": {
        "description": "",
        "summary": "deleteEntityPermanently",
        "tags": [
          "Entity"
        ],
        "operationId": "deleteEntityPermanently",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Purged entity info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/action/duplicate": {
      "post": {
        "description": "",
        "summary": "duplicateEntities",
        "tags": [
          "Entity"
        ],
        "operationId": "duplicateEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/duplicate"
            }
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Duplication status",
            "schema": {
              "$ref": "#/definitions/duplicationStatus"
            },
            "headers": {}
          },
          "302": {
            "description": "Duplicate status URL",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesActionDuplicateResponse"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/action/duplicate/{statusKey}": {
      "get": {
        "description": "",
        "summary": "getDuplicationStatus",
        "tags": [
          "Entity"
        ],
        "operationId": "getDuplicationStatus",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "statusKey",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 8,
            "maxLength": 8,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Duplication status key"
          }
        ],
        "responses": {
          "200": {
            "description": "Duplication status data",
            "schema": {
              "$ref": "#/definitions/duplicationStatus"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/recycle-bin": {
      "get": {
        "description": "",
        "summary": "getRecycledEntities",
        "tags": [
          "Entity"
        ],
        "operationId": "getRecycledEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "parentUid",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Limit response to entities below specific parent"
          }
        ],
        "responses": {
          "200": {
            "description": "Recycled entity entries",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Purge all entities from the recycle bin",
        "summary": "emptyRecycleBin",
        "tags": [
          "Entity"
        ],
        "operationId": "emptyRecycleBin",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          }
        ],
        "responses": {
          "204": {
            "description": "All entities purged",
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500-serverError1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/shared-entities": {
      "get": {
        "description": "",
        "summary": "getSharedEntities",
        "tags": [
          "Entity"
        ],
        "operationId": "getSharedEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Shared entities",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/tags/{tagUid}/entities": {
      "get": {
        "description": "",
        "summary": "getEntitiesByTag",
        "tags": [
          "Entity",
          "Tag"
        ],
        "operationId": "getEntitiesByTag",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Pagination cursor  \nThe `Link` header will have a next page link available with the new cursor value, usually contains the last `uid` value from the response."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.people,file.version). sectionOrder is applicable to only root entities/sections.  \nmeta can be specified with an UID identifier to only include that specific meta like this: `meta:abcde12345`. Fields are to be specified without UID identifier."
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "type": "string",
            "pattern": "^[a-z0-9]+$",
            "description": "Filter by extension"
          }
        ],
        "responses": {
          "200": {
            "description": "Entity list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Cursor": {
                "description": "Current cursor",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/files": {
      "get": {
        "description": "",
        "summary": "getFilesByParent",
        "tags": [
          "Folder",
          "File"
        ],
        "operationId": "getFilesByParent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          }
        ],
        "responses": {
          "200": {
            "description": "File list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/reports/file-list": {
      "get": {
        "description": "Use [`GET /v2/accounts/{accountUid}/entities/all`](#tag/Entity/operation/getAllEntities) instead",
        "summary": "getAccountFileReport",
        "tags": [
          "Folder",
          "File"
        ],
        "operationId": "getAccountFileReport",
        "deprecated": true,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 10000,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "File count limit"
          },
          {
            "name": "last",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Start output after this UID"
          }
        ],
        "responses": {
          "200": {
            "description": "File list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/File3"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders": {
      "get": {
        "description": "",
        "summary": "getFolders",
        "tags": [
          "Folder"
        ],
        "operationId": "getFolders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          }
        ],
        "responses": {
          "200": {
            "description": "Section list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "createFolder",
        "tags": [
          "Folder"
        ],
        "operationId": "createFolder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Created section/folder",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}": {
      "get": {
        "description": "",
        "summary": "getFolder",
        "tags": [
          "Folder"
        ],
        "operationId": "getFolder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          }
        ],
        "responses": {
          "200": {
            "description": "Folder info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateFolder",
        "tags": [
          "Folder"
        ],
        "operationId": "updateFolder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFoldersRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated folder",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteFolder",
        "tags": [
          "Folder"
        ],
        "operationId": "deleteFolder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted folder",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/email": {
      "post": {
        "description": "Request body is optional, action defaults to `activate`",
        "summary": "configureFolderEmail",
        "tags": [
          "Folder"
        ],
        "operationId": "configureFolderEmail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {}
          }
        ],
        "responses": {
          "200": {
            "description": "Mail-in address info",
            "schema": {
              "$ref": "#/definitions/Mail-inaddress"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteFolderEmail",
        "tags": [
          "Folder"
        ],
        "operationId": "deleteFolderEmail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Mail-in address info",
            "schema": {
              "$ref": "#/definitions/Mail-inaddress"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "requestNewFolderEmailAddress",
        "tags": [
          "Folder"
        ],
        "operationId": "requestNewFolderEmailAddress",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Mail-in address info",
            "schema": {
              "$ref": "#/definitions/Mail-inaddress"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getFolderPermissions",
        "tags": [
          "Folder",
          "Permission"
        ],
        "operationId": "getFolderPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/folder_properties-permissions"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/folders": {
      "get": {
        "description": "",
        "summary": "getFolderByParent",
        "tags": [
          "Folder"
        ],
        "operationId": "getFolderByParent",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          }
        ],
        "responses": {
          "200": {
            "description": "Folder list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/related": {
      "get": {
        "description": "",
        "summary": "getFolderRelatedItems",
        "tags": [
          "Folder"
        ],
        "operationId": "getFolderRelatedItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of relations",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFolderRelatedItem",
        "tags": [
          "Folder"
        ],
        "operationId": "addFolderRelatedItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFoldersRelatedRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Related item",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteFolderRelatedItem",
        "tags": [
          "Folder"
        ],
        "operationId": "deleteFolderRelatedItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFoldersRelatedRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Related item",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/restore": {
      "put": {
        "description": "",
        "summary": "restoreFolder",
        "tags": [
          "Folder"
        ],
        "operationId": "restoreFolder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFoldersRestoreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/purge": {
      "put": {
        "description": "",
        "summary": "deleteFolderPermanently",
        "tags": [
          "Folder"
        ],
        "operationId": "deleteFolderPermanently",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Purged folder info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/recycle-bin/folders": {
      "get": {
        "description": "",
        "summary": "getRecycledFolders",
        "tags": [
          "Folder"
        ],
        "operationId": "getRecycledFolders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "shares",
                "extra",
                "sectionOrder",
                "inboxFolder",
                "teamFolder",
                "folderStats",
                "sort",
                "viewType"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.shares). sectionOrder is applicable to only sections."
          }
        ],
        "responses": {
          "200": {
            "description": "Recycle bin folder entries",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/shared-items": {
      "get": {
        "description": "",
        "summary": "getSharedFilesAndFolders",
        "tags": [
          "Folder",
          "File",
          "Account"
        ],
        "operationId": "getSharedFilesAndFolders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          }
        ],
        "responses": {
          "200": {
            "description": "Shared files and folders",
            "schema": {
              "$ref": "#/definitions/V2AccountsSharedItemsResponse"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/upload": {
      "post": {
        "description": "",
        "summary": "uploadFile",
        "tags": [
          "File"
        ],
        "operationId": "uploadFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Upload process:  \n* Send a \"create\" action, You'll receive an `uploadId` and `key`  \n  `Parts` property is optional: if present, upload URLs are provided with the \"create\" action response.  \n  `Unpack` property is optional: include to test for archive support and size limit before commencing upload process\n\n* Request upload URLs with the \"part\" action for every part you require, min part size (except for last part) is 5 MB, max part size is 5 GB  \n  Parts are counted up from 1  \n  Maximum number of parts: 10000\n\n* Send part content to received URLs with a PUT request\n* After all parts have been uploaded, send a \"complete\" request to the API, which will finalize file creation.  \n  Failure to do so will result in deletion of the uploaded parts.\n\n* Each URL has a lifetime of 48 hours and can be re-requested, if necessary\n* Sending an \"abort\" action will remove all uploaded parts immediately",
            "schema": {}
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Uploader response",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}": {
      "get": {
        "description": "",
        "summary": "getFile",
        "tags": [
          "File"
        ],
        "operationId": "getFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateFile",
        "tags": [
          "File"
        ],
        "operationId": "updateFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteFile",
        "tags": [
          "File"
        ],
        "operationId": "deleteFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getFilePermissions",
        "tags": [
          "File",
          "Permission"
        ],
        "operationId": "getFilePermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/properties-permissions"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/lock": {
      "post": {
        "description": "",
        "summary": "lockFilePost",
        "tags": [
          "File"
        ],
        "operationId": "lockFilePost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesLockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "lockFilePut",
        "tags": [
          "File"
        ],
        "operationId": "lockFilePut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesLockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "unlockFile",
        "tags": [
          "File"
        ],
        "operationId": "unlockFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/unlock": {
      "put": {
        "description": "",
        "summary": "unlockFile2",
        "tags": [
          "File"
        ],
        "operationId": "unlockFile2",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesUnlockRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/related": {
      "get": {
        "description": "",
        "summary": "getFileRelatedItems",
        "tags": [
          "File"
        ],
        "operationId": "getFileRelatedItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of relations",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFileRelatedItem",
        "tags": [
          "File"
        ],
        "operationId": "addFileRelatedItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Related item",
            "schema": {},
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteFileRelatedItem",
        "tags": [
          "File"
        ],
        "operationId": "deleteFileRelatedItem",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Related item",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/restore": {
      "put": {
        "description": "",
        "summary": "restoreFile",
        "tags": [
          "File"
        ],
        "operationId": "restoreFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesRestoreRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/purge": {
      "put": {
        "description": "",
        "summary": "deleteFilePermanently",
        "tags": [
          "File"
        ],
        "operationId": "deleteFilePermanently",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Purged file info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/versions": {
      "get": {
        "description": "",
        "summary": "getFileVersions",
        "tags": [
          "File"
        ],
        "operationId": "getFileVersions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Pagination",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "If present (any value), the response is a paginated, sortable list"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:createdAt|uid|size)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * createdAt\n  * uid\n  * size"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of fileVersions.  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers.",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}": {
      "delete": {
        "description": "",
        "summary": "deleteFileVersion",
        "tags": [
          "File"
        ],
        "operationId": "deleteFileVersion",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fileVersionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File Version UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "File Version info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/download": {
      "get": {
        "description": "",
        "summary": "getFileDownloadUrl",
        "tags": [
          "File"
        ],
        "operationId": "getFileDownloadUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "302": {
            "description": "Link to file download",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesDownloadResponse"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/download": {
      "get": {
        "description": "",
        "summary": "getFileVersionDownloadUrl",
        "tags": [
          "File"
        ],
        "operationId": "getFileVersionDownloadUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fileVersionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File Version UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "302": {
            "description": "Link to file version download",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesVersionsFileVersionUidDownloadResponse"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/preview": {
      "get": {
        "description": "",
        "summary": "getFilePreviewDownloadUrl",
        "tags": [
          "File"
        ],
        "operationId": "getFilePreviewDownloadUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "302": {
            "description": "Link to file preview",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesPreviewResponse"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/versions/{fileVersionUid}/preview": {
      "get": {
        "description": "",
        "summary": "getFileVersionPreviewDownloadUrl",
        "tags": [
          "File"
        ],
        "operationId": "getFileVersionPreviewDownloadUrl",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fileVersionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File Version UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "302": {
            "description": "Link to file preview",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesVersionsFileVersionUidPreviewResponse"
            },
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/recycle-bin/files": {
      "get": {
        "description": "",
        "summary": "getRecycledFiles",
        "tags": [
          "File"
        ],
        "operationId": "getRecycledFiles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "parent",
                "meta",
                "people",
                "tags",
                "reminders",
                "shares",
                "fileRelations",
                "version"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example parent.parent.parent)"
          }
        ],
        "responses": {
          "200": {
            "description": "Recycle bin file entries",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/unpack": {
      "post": {
        "description": "After initiating unpacking, check status with received key",
        "summary": "unpackArchiveFile",
        "tags": [
          "File"
        ],
        "operationId": "unpackArchiveFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesUnpackRequest"
            }
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Unpack key, check status from [`GET /accounts/{accountUid}/files/unpack-status/{key}`](#tag/File/operation/getUnpackStatus)",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesUnpackResponse"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/unpack/status/{key}": {
      "get": {
        "description": "",
        "summary": "getUnpackStatus",
        "tags": [
          "File"
        ],
        "operationId": "getUnpackStatus",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "key",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unpack key"
          }
        ],
        "responses": {
          "200": {
            "description": "Unpacking status",
            "schema": {},
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/unpack/check": {
      "post": {
        "description": "Send a filename to check if system supports unpacking it",
        "summary": "checkUnpackSupport",
        "tags": [
          "File"
        ],
        "operationId": "checkUnpackSupport",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsUnpackCheckRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unpacking support response",
            "schema": {
              "type": "boolean"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/document-languages": {
      "get": {
        "description": "",
        "summary": "getDocumentOcrLanguages",
        "tags": [
          "File"
        ],
        "operationId": "getDocumentOcrLanguages",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Supported languages",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/meta": {
      "get": {
        "description": "",
        "summary": "getMetas",
        "tags": [
          "Meta"
        ],
        "operationId": "getMetas",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Meta info",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addMeta",
        "tags": [
          "Meta"
        ],
        "operationId": "addMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsMetaRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/meta/{metaUid}": {
      "get": {
        "description": "",
        "summary": "getMeta",
        "tags": [
          "Meta"
        ],
        "operationId": "getMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateMeta",
        "tags": [
          "Meta"
        ],
        "operationId": "updateMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsMetaRequest1"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteMeta",
        "tags": [
          "Meta"
        ],
        "operationId": "deleteMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/meta/{metaUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getMetaPermissions",
        "tags": [
          "Meta",
          "Permission"
        ],
        "operationId": "getMetaPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/metaBase_properties-permissions"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/meta/{metaUid}/options": {
      "post": {
        "description": "",
        "summary": "addMetaOptions",
        "tags": [
          "Meta"
        ],
        "operationId": "addMetaOptions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsMetaOptionsRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {
              "$ref": "#/definitions/MetaSelectOption"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/meta/{metaUid}/options/{optionUid}": {
      "put": {
        "description": "",
        "summary": "updateMetaOption",
        "tags": [
          "Meta"
        ],
        "operationId": "updateMetaOption",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "optionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta Select Option UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsMetaOptionsOptionUidRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {
              "$ref": "#/definitions/MetaSelectOption"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteMetaOption",
        "tags": [
          "Meta"
        ],
        "operationId": "deleteMetaOption",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "optionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta Select Option UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta Select Option",
            "schema": {
              "$ref": "#/definitions/MetaSelectOption"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/meta": {
      "get": {
        "description": "",
        "summary": "getEntityMeta",
        "tags": [
          "Meta",
          "Entity"
        ],
        "operationId": "getEntityMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of entityMeta",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addEntityMeta",
        "tags": [
          "Meta",
          "Entity"
        ],
        "operationId": "addEntityMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesMetaRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}": {
      "put": {
        "description": "In case of having multiple file metas referencing the same meta, the selection of affected entity meta is undetermined, use [`PUT /accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}/{entityMetaUid}`](#tag/Entity/operation/editSpecificEntityMeta) instead.",
        "summary": "editEntityMeta",
        "tags": [
          "Meta",
          "Entity"
        ],
        "operationId": "editEntityMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesMetaMetaUidRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteEntityMeta",
        "tags": [
          "Meta",
          "Entity"
        ],
        "operationId": "deleteEntityMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/meta/{metaUid}/{entityMetaUid}": {
      "put": {
        "description": "",
        "summary": "editSpecificEntityMeta",
        "tags": [
          "Meta",
          "Entity"
        ],
        "operationId": "editSpecificEntityMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "entityMetaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity Meta UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteSpecificEntityMeta",
        "tags": [
          "Meta",
          "Entity"
        ],
        "operationId": "deleteSpecificEntityMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "entityMetaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity Meta UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/active-meta": {
      "get": {
        "description": "",
        "summary": "getActiveEntityMeta",
        "tags": [
          "Meta",
          "Entity"
        ],
        "operationId": "getActiveEntityMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of active folderMeta",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Foldermeta"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/meta": {
      "get": {
        "description": "",
        "summary": "getFileMeta",
        "tags": [
          "Meta",
          "File"
        ],
        "operationId": "getFileMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of fileMeta",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFileMeta",
        "tags": [
          "Meta",
          "File"
        ],
        "operationId": "addFileMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesMetaRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}": {
      "put": {
        "description": "In case of having multiple file metas referencing the same meta, the selection of affected file meta is undetermined, use [`PUT /accounts/{accountUid}files/{fileUid}/meta/{metaUid}/{fileMetaUid}`](#tag/Meta/operation/updateSpecificFileMeta) instead.",
        "summary": "updateFileMeta",
        "tags": [
          "Meta",
          "File"
        ],
        "operationId": "updateFileMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesMetaMetaUidRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteFileMeta",
        "tags": [
          "Meta",
          "File"
        ],
        "operationId": "deleteFileMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/meta/{metaUid}/{fileMetaUid}": {
      "put": {
        "description": "",
        "summary": "updateSpecificFileMeta",
        "tags": [
          "Meta",
          "File"
        ],
        "operationId": "updateSpecificFileMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "fileMetaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File Meta UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesMetaMetaUidFileMetaUidRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteSpecificFileMeta",
        "tags": [
          "Meta",
          "File"
        ],
        "operationId": "deleteSpecificFileMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "fileMetaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File Meta UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Meta",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/active-meta": {
      "get": {
        "description": "",
        "summary": "getFileActiveMeta",
        "tags": [
          "Meta",
          "File"
        ],
        "operationId": "getFileActiveMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of active folderMeta",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Foldermeta"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/meta": {
      "get": {
        "description": "",
        "summary": "getFolderMeta",
        "tags": [
          "Meta",
          "Folder"
        ],
        "operationId": "getFolderMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of folderMeta",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Foldermeta"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFolderMeta",
        "tags": [
          "Meta",
          "Folder"
        ],
        "operationId": "addFolderMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFoldersMetaRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Meta",
            "schema": {
              "$ref": "#/definitions/Foldermeta"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/meta/{metaUid}": {
      "put": {
        "description": "",
        "summary": "updateFolderMeta",
        "tags": [
          "Meta",
          "Folder"
        ],
        "operationId": "updateFolderMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFoldersMetaMetaUidRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Meta",
            "schema": {
              "$ref": "#/definitions/Foldermeta"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteFolderMeta",
        "tags": [
          "Meta",
          "Folder"
        ],
        "operationId": "deleteFolderMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "metaUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Meta UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Folder Meta",
            "schema": {
              "$ref": "#/definitions/Foldermeta"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/active-meta": {
      "get": {
        "description": "",
        "summary": "getFolderActiveMeta",
        "tags": [
          "Meta",
          "Folder"
        ],
        "operationId": "getFolderActiveMeta",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of active folderMeta",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Foldermeta"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/tags": {
      "get": {
        "description": "",
        "summary": "getTags",
        "tags": [
          "Tag"
        ],
        "operationId": "getTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|name|createdAt|updatedAt)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addTag",
        "tags": [
          "Tag"
        ],
        "operationId": "addTag",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsTagsRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Added Tag info",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/tags/root": {
      "get": {
        "description": "",
        "summary": "getRootTags",
        "tags": [
          "Tag"
        ],
        "operationId": "getRootTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|name|createdAt|updatedAt)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/tags/{tagUid}": {
      "get": {
        "description": "",
        "summary": "getTag",
        "tags": [
          "Tag"
        ],
        "operationId": "getTag",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Tag info",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateTag",
        "tags": [
          "Tag"
        ],
        "operationId": "updateTag",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsTagsRequest1"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Tag info",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteTag",
        "tags": [
          "Tag"
        ],
        "operationId": "deleteTag",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Tag info",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/tags/{tagUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getTagPermissions",
        "tags": [
          "Tag",
          "Permission"
        ],
        "operationId": "getTagPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/tag_properties-permissions"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/tags/{tagUid}/tags": {
      "get": {
        "description": "",
        "summary": "getSubTags",
        "tags": [
          "Tag"
        ],
        "operationId": "getSubTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|name|createdAt|updatedAt)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * name\n  * createdAt\n  * updatedAt"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/tags": {
      "get": {
        "description": "",
        "summary": "getEntityTags",
        "tags": [
          "Tag",
          "Entity"
        ],
        "operationId": "getEntityTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addEntityTags",
        "tags": [
          "Tag",
          "Entity"
        ],
        "operationId": "addEntityTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsEntitiesTagsRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Added tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/tags/{tagUid}": {
      "delete": {
        "description": "",
        "summary": "deleteEntityTag",
        "tags": [
          "Tag",
          "Entity"
        ],
        "operationId": "deleteEntityTag",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag info",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/tags": {
      "get": {
        "description": "",
        "summary": "getFileTags",
        "tags": [
          "Tag",
          "File"
        ],
        "operationId": "getFileTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFileTags",
        "tags": [
          "Tag",
          "File"
        ],
        "operationId": "addFileTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesTagsRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Added tags",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tag"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/tags/{tagUid}": {
      "delete": {
        "description": "",
        "summary": "deleteFileTags",
        "tags": [
          "Tag",
          "File"
        ],
        "operationId": "deleteFileTags",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag info",
            "schema": {
              "$ref": "#/definitions/Tag"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/people": {
      "get": {
        "description": "",
        "summary": "getPeople",
        "tags": [
          "Person"
        ],
        "operationId": "getPeople",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Person info",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addPerson",
        "tags": [
          "Person"
        ],
        "operationId": "addPerson",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsPeopleRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Added Person info",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/people/{personUid}": {
      "get": {
        "description": "",
        "summary": "getPerson",
        "tags": [
          "Person"
        ],
        "operationId": "getPerson",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "personUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Person UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Person info",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updatePerson",
        "tags": [
          "Person",
          "File"
        ],
        "operationId": "updatePerson",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "personUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Person UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsPeopleRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Person info",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deletePerson",
        "tags": [
          "Person",
          "File"
        ],
        "operationId": "deletePerson",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "personUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Person UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Person info",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/people/{personUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getPersonPermissions",
        "tags": [
          "Person",
          "Permission"
        ],
        "operationId": "getPersonPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "personUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Person UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/person_properties-permissions"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/people": {
      "get": {
        "description": "",
        "summary": "getFilePeople",
        "tags": [
          "Person",
          "File"
        ],
        "operationId": "getFilePeople",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of people",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFilePeople",
        "tags": [
          "Person",
          "File"
        ],
        "operationId": "addFilePeople",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesPeopleRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Added people",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Person"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/people/{personUid}": {
      "delete": {
        "description": "",
        "summary": "deleteFilePerson",
        "tags": [
          "Person",
          "File"
        ],
        "operationId": "deleteFilePerson",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "personUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Person UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          },
          {
            "name": "X-Folderit-Lock",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 2048,
            "description": "File lockId value for updating a locked file"
          }
        ],
        "responses": {
          "200": {
            "description": "Person info",
            "schema": {
              "$ref": "#/definitions/Person"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/reminders": {
      "get": {
        "description": "",
        "summary": "getAllReminders",
        "tags": [
          "Reminder"
        ],
        "operationId": "getAllReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Pagination",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "If present (any value), the response is a paginated, sortable list"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reminder"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/reminders/{reminderUid}": {
      "put": {
        "description": "",
        "summary": "updateReminder",
        "tags": [
          "Reminder",
          "File"
        ],
        "operationId": "updateReminder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "reminderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Reminder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsRemindersRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder info",
            "schema": {
              "$ref": "#/definitions/reminder"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteReminder",
        "tags": [
          "Reminder",
          "File"
        ],
        "operationId": "deleteReminder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "reminderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Reminder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder info",
            "schema": {
              "$ref": "#/definitions/reminder"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/reminders": {
      "get": {
        "description": "",
        "summary": "getFileReminders",
        "tags": [
          "Reminder",
          "File"
        ],
        "operationId": "getFileReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Pagination",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "If present (any value), the response is a paginated, sortable list"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reminder"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFileReminders",
        "tags": [
          "Reminder",
          "File"
        ],
        "operationId": "addFileReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddRemindersRequest"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Added reminders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reminder"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/reminders": {
      "get": {
        "description": "",
        "summary": "getFolderReminders",
        "tags": [
          "Reminder",
          "Folder"
        ],
        "operationId": "getFolderReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Pagination",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "If present (any value), the response is a paginated, sortable list"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reminder"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addFolderReminders",
        "tags": [
          "Reminder",
          "Folder"
        ],
        "operationId": "addFolderReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddRemindersRequest"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Added reminders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reminder"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/reminders": {
      "get": {
        "description": "",
        "summary": "getEntityReminders",
        "tags": [
          "Reminder",
          "Entity"
        ],
        "operationId": "getEntityReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Pagination",
            "in": "header",
            "required": false,
            "type": "string",
            "description": "If present (any value), the response is a paginated, sortable list"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 20,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^-?(?:uid|entityUid|createdAt|remindAt|email|groupUid)$"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order\nOne of:\n  * uid\n  * entityUid\n  * createdAt\n  * remindAt\n  * email\n  * groupUid"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of reminders  \nWhen `X-Pagination` header, `page`, `page-size` or `sort` parameter is present, the response will be paginated and include pagination-related headers.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reminder"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addEntityReminders",
        "tags": [
          "Reminder",
          "File"
        ],
        "operationId": "addEntityReminders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddRemindersRequest"
              }
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Added reminders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/reminder"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/resolutions": {
      "get": {
        "description": "",
        "summary": "getEntityResolutions",
        "tags": [
          "Resolution"
        ],
        "operationId": "getEntityResolutions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Resolution list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addEntityResolution",
        "tags": [
          "Resolution"
        ],
        "operationId": "addEntityResolution",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/resolution-create"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "201": {
            "description": "Added resolution",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409-conflict1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/resolutions/{resolutionUid}": {
      "get": {
        "description": "",
        "summary": "getResolution",
        "tags": [
          "Resolution"
        ],
        "operationId": "getResolution",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          }
        ],
        "responses": {
          "200": {
            "description": "Resolution",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateResolution",
        "tags": [
          "Resolution"
        ],
        "operationId": "updateResolution",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/resolution-update"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated resolution",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteResolution",
        "tags": [
          "Resolution"
        ],
        "operationId": "deleteResolution",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/resolutions/{resolutionUid}/invites": {
      "get": {
        "description": "",
        "summary": "getResolutionInvites",
        "tags": [
          "Resolution"
        ],
        "operationId": "getResolutionInvites",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Resolution invite list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addResolutionInvites",
        "tags": [
          "Resolution"
        ],
        "operationId": "addResolutionInvites",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/resolution-invite"
              },
              "minItems": 1
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "201": {
            "description": "Added resolution invites",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/resolutions/{resolutionUid}/invites/{resolutionInviteUid}": {
      "get": {
        "description": "",
        "summary": "getResolutionInvite",
        "tags": [
          "Resolution"
        ],
        "operationId": "getResolutionInvite",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "resolutionInviteUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution invite UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          }
        ],
        "responses": {
          "200": {
            "description": "Resolution",
            "schema": {},
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateResolutionInvite",
        "tags": [
          "Resolution"
        ],
        "operationId": "updateResolutionInvite",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "resolutionInviteUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution invite UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/invite-update"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated resolution",
            "schema": {},
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteResolutionInvite",
        "tags": [
          "Resolution"
        ],
        "operationId": "deleteResolutionInvite",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "resolutionUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution UID"
          },
          {
            "name": "resolutionInviteUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Resolution invite UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/entities/{entityUid}/workflows": {
      "get": {
        "description": "",
        "summary": "getEntityWorkflows",
        "tags": [
          "Workflow"
        ],
        "operationId": "getEntityWorkflows",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addEntityWorkflow",
        "tags": [
          "Workflow"
        ],
        "operationId": "addEntityWorkflow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "entityUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Entity UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/workflow-create"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "201": {
            "description": "Added workflow",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/workflows": {
      "get": {
        "description": "",
        "summary": "getAccountWorkflows",
        "tags": [
          "Workflow"
        ],
        "operationId": "getAccountWorkflows",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addWorkflow",
        "tags": [
          "Workflow"
        ],
        "operationId": "addWorkflow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/workflow-create"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "201": {
            "description": "Added workflow",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/workflows/all": {
      "get": {
        "description": "",
        "summary": "getAllWorkflows",
        "tags": [
          "Workflow"
        ],
        "operationId": "getAllWorkflows",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/workflows/{workflowUid}": {
      "get": {
        "description": "",
        "summary": "getWorkflow",
        "tags": [
          "Workflow"
        ],
        "operationId": "getWorkflow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateWorkflow",
        "tags": [
          "Workflow"
        ],
        "operationId": "updateWorkflow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/workflow-update"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated workflow",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteWorkflow",
        "tags": [
          "Workflow"
        ],
        "operationId": "deleteWorkflow",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/workflows/{workflowUid}/versions": {
      "get": {
        "description": "",
        "summary": "getWorkflowVersions",
        "tags": [
          "Workflow"
        ],
        "operationId": "getWorkflowVersions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow version list",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addWorkflowVersion",
        "tags": [
          "Workflow"
        ],
        "operationId": "addWorkflowVersion",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/workflow-version-create"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "201": {
            "description": "Added workflow",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/workflows/{workflowUid}/versions/{workflowVersionId}": {
      "get": {
        "description": "",
        "summary": "getWorkflowVersion",
        "tags": [
          "Workflow"
        ],
        "operationId": "getWorkflowVersion",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "workflowVersionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Workflow version ID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow version",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateWorkflowVersion",
        "tags": [
          "Workflow"
        ],
        "operationId": "updateWorkflowVersion",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "workflowVersionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Workflow version ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/workflow-version-update"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "property1",
                "property2",
                "property3"
              ]
            },
            "description": "Include related information (comma-separated) from the expanded variant of response."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated workflow version",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteWorkflowVersion",
        "tags": [
          "Workflow"
        ],
        "operationId": "deleteWorkflowVersion",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "workflowVersionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Workflow version ID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/workflows/{workflowUid}/triggers": {
      "get": {
        "description": "",
        "summary": "getWorkflowTriggers",
        "tags": [
          "Workflow"
        ],
        "operationId": "getWorkflowTriggers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow trigger list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Trigger"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addWorkflowTrigger",
        "tags": [
          "Workflow"
        ],
        "operationId": "addWorkflowTrigger",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/workflow-trigger-create"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "201": {
            "description": "Added workflow",
            "schema": {
              "$ref": "#/definitions/Trigger"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/workflows/{workflowUid}/triggers/{workflowTriggerId}": {
      "get": {
        "description": "",
        "summary": "getWorkflowTrigger",
        "tags": [
          "Workflow"
        ],
        "operationId": "getWorkflowTrigger",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "workflowTriggerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Workflow trigger ID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Workflow trigger",
            "schema": {
              "$ref": "#/definitions/Trigger"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateWorkflowTrigger",
        "tags": [
          "Workflow"
        ],
        "operationId": "updateWorkflowTrigger",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "workflowTriggerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Workflow trigger ID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/workflow-trigger-update"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Updated workflow version",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteWorkflowTrigger",
        "tags": [
          "Workflow"
        ],
        "operationId": "deleteWorkflowTrigger",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "workflowUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Workflow UID"
          },
          {
            "name": "workflowTriggerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Workflow trigger ID"
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "204": {
            "description": "No content",
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/access/users": {
      "get": {
        "description": "",
        "summary": "getAllUsersWithAccess",
        "tags": [
          "Share"
        ],
        "operationId": "getAllUsersWithAccess",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of other users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Otheruser"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/shares": {
      "get": {
        "description": "",
        "summary": "listAccountShares",
        "tags": [
          "Share",
          "Account"
        ],
        "operationId": "listAccountShares",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accountShare"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "shareAccount",
        "tags": [
          "Share",
          "Account"
        ],
        "operationId": "shareAccount",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsSharesRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "$ref": "#/definitions/accountShare"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/shares/{shareUid}": {
      "get": {
        "description": "",
        "summary": "getShare",
        "tags": [
          "Share"
        ],
        "operationId": "getShare",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "shareUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Share UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateShare",
        "tags": [
          "Share"
        ],
        "operationId": "updateShare",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "shareUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Share UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsSharesRequest1"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteShare",
        "tags": [
          "Share"
        ],
        "operationId": "deleteShare",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "shareUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Share UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/shares/{shareUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getSharePermissions",
        "tags": [
          "Share",
          "Permission"
        ],
        "operationId": "getSharePermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "shareUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Share UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/share_properties-permissions"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/shares": {
      "get": {
        "description": "",
        "summary": "listFileShares",
        "tags": [
          "Share",
          "File"
        ],
        "operationId": "listFileShares",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/fileShare"
              }
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "shareFile",
        "tags": [
          "Share",
          "File"
        ],
        "operationId": "shareFile",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFilesSharesRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "$ref": "#/definitions/fileShare"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/shares": {
      "get": {
        "description": "",
        "summary": "listFolderShares",
        "tags": [
          "Share",
          "Folder"
        ],
        "operationId": "listFolderShares",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/folderShare"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "shareFolder",
        "tags": [
          "Share",
          "Folder"
        ],
        "operationId": "shareFolder",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsFoldersSharesRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "$ref": "#/definitions/folderShare"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/tags/{tagUid}/shares": {
      "get": {
        "description": "",
        "summary": "listTagShares",
        "tags": [
          "Share",
          "Tag"
        ],
        "operationId": "listTagShares",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/tagShare"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "shareTag",
        "tags": [
          "Share",
          "Tag"
        ],
        "operationId": "shareTag",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "tagUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Tag UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsTagsSharesRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Share info",
            "schema": {
              "$ref": "#/definitions/tagShare"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/access/public": {
      "get": {
        "description": "",
        "summary": "getAllPublicShares",
        "tags": [
          "Share"
        ],
        "operationId": "getAllPublicShares",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Shares",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/access/unaccepted": {
      "get": {
        "description": "",
        "summary": "getAllUnacceptedShareEmails",
        "tags": [
          "Share"
        ],
        "operationId": "getAllUnacceptedShareEmails",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of emails",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups": {
      "get": {
        "description": "",
        "summary": "getGroups",
        "tags": [
          "Group"
        ],
        "operationId": "getGroups",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order"
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "users",
                "groups",
                "shares"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example groups.groups)"
          }
        ],
        "responses": {
          "200": {
            "description": "Array of groups",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addGroup",
        "tags": [
          "Group"
        ],
        "operationId": "addGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsGroupsRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Created group",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}": {
      "get": {
        "description": "",
        "summary": "getGroup",
        "tags": [
          "Group"
        ],
        "operationId": "getGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "users",
                "groups",
                "shares"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example groups.groups)"
          }
        ],
        "responses": {
          "200": {
            "description": "Group info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "",
        "summary": "updateGroup",
        "tags": [
          "Group"
        ],
        "operationId": "updateGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/V2AccountsGroupsRequest"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Group info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "",
        "summary": "deleteGroup",
        "tags": [
          "Group"
        ],
        "operationId": "deleteGroup",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Group info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getGroupPermissions",
        "tags": [
          "Group",
          "Permission"
        ],
        "operationId": "getGroupPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/group_properties-permissions"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/shares": {
      "get": {
        "description": "",
        "summary": "getGroupSharedItems",
        "tags": [
          "Group",
          "Share"
        ],
        "operationId": "getGroupSharedItems",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "account",
                "tag"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example entity.meta)."
          }
        ],
        "responses": {
          "200": {
            "description": "Item shares",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/members": {
      "get": {
        "description": "",
        "summary": "getGroupMembers",
        "tags": [
          "Group"
        ],
        "operationId": "getGroupMembers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Group members",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addGroupMember",
        "tags": [
          "Group"
        ],
        "operationId": "addGroupMember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Member info",
            "schema": {},
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/members/{memberUid}": {
      "delete": {
        "description": "",
        "summary": "deleteGroupMember",
        "tags": [
          "Group"
        ],
        "operationId": "deleteGroupMember",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "memberUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Member UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Member info",
            "schema": {},
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/users": {
      "get": {
        "description": "",
        "summary": "getGroupUsers",
        "tags": [
          "Group"
        ],
        "operationId": "getGroupUsers",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Group members (users)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Groupmember%28user%29"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addGroupUser",
        "tags": [
          "Group"
        ],
        "operationId": "addGroupUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {}
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "User info",
            "schema": {
              "$ref": "#/definitions/Otheruser"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}": {
      "delete": {
        "description": "",
        "summary": "deleteGroupUser",
        "tags": [
          "Group"
        ],
        "operationId": "deleteGroupUser",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "User info",
            "schema": {
              "$ref": "#/definitions/Otheruser"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/users/{userUid}/permissions": {
      "get": {
        "description": "",
        "summary": "getGroupUserPermissions",
        "tags": [
          "Group",
          "Permission"
        ],
        "operationId": "getGroupUserPermissions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "userUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "User UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions",
            "schema": {
              "$ref": "#/definitions/V2AccountsGroupsUsersUserUidPermissionsResponse"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/children": {
      "get": {
        "description": "",
        "summary": "getGroupChildren",
        "tags": [
          "Group"
        ],
        "operationId": "getGroupChildren",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 50,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 100.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Group members (groups)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Groupmember%28child%29"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "",
        "summary": "addGroupChild",
        "tags": [
          "Group"
        ],
        "operationId": "addGroupChild",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": false,
            "enum": [
              "application/json"
            ],
            "type": "string",
            "description": ""
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Byuid"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Member info",
            "schema": {
              "$ref": "#/definitions/Groupmember%28child%29"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "422": {
            "description": "Unprocessable entity",
            "schema": {
              "$ref": "#/definitions/422-unprocessableEntity1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/groups/{groupUid}/children/{childUid}": {
      "delete": {
        "description": "",
        "summary": "deleteGroupChild",
        "tags": [
          "Group"
        ],
        "operationId": "deleteGroupChild",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "groupUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Group UID"
          },
          {
            "name": "childUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Child UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "X-Folderit-Request-Key",
            "in": "header",
            "required": false,
            "type": "string",
            "maxLength": 4,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "A key to reference in audit trail responses.  \nFor example, to distinguish between different clients for the same user."
          }
        ],
        "responses": {
          "200": {
            "description": "Member info (group)",
            "schema": {
              "$ref": "#/definitions/Groupmember%28child%29"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/plans": {
      "get": {
        "description": "",
        "summary": "getPlans",
        "tags": [
          "Plan"
        ],
        "operationId": "getPlans",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Plan array",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Plan"
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/search/simple": {
      "get": {
        "description": "Alternatively, POST request is also supported",
        "summary": "searchAutocomplete",
        "tags": [
          "Search",
          "File",
          "Folder"
        ],
        "operationId": "searchAutocomplete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "folder",
                "file",
                "link",
                "asic",
                "highlight"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.meta)"
          }
        ],
        "responses": {
          "200": {
            "description": "Results",
            "schema": {
              "$ref": "#/definitions/V2AccountsSearchSimpleResponse"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/search/entities": {
      "get": {
        "description": "Alternatively, POST request is also supported",
        "summary": "searchEntities",
        "tags": [
          "Search",
          "Entity"
        ],
        "operationId": "searchEntities",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "folder",
                "file",
                "link",
                "asic",
                "highlight"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.meta)"
          }
        ],
        "responses": {
          "200": {
            "description": "Results",
            "schema": {
              "$ref": "#/definitions/V2AccountsSearchEntitiesResponse"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/search/files": {
      "get": {
        "description": "Alternatively, POST request is also supported",
        "summary": "searchFiles",
        "tags": [
          "Search",
          "File"
        ],
        "operationId": "searchFiles",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "folder",
                "file",
                "link",
                "asic",
                "highlight"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.meta)"
          }
        ],
        "responses": {
          "200": {
            "description": "Results",
            "schema": {
              "$ref": "#/definitions/V2AccountsSearchFilesResponse"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/search/folders": {
      "get": {
        "description": "Alternatively, POST request is also supported",
        "summary": "searchFolders",
        "tags": [
          "Search",
          "Folder"
        ],
        "operationId": "searchFolders",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "entity",
                "folder",
                "file",
                "link",
                "asic",
                "highlight"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained (for example file.meta)"
          }
        ],
        "responses": {
          "200": {
            "description": "Results",
            "schema": {
              "$ref": "#/definitions/V2AccountsSearchFoldersResponse"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404-notFound1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/search/extensions": {
      "get": {
        "description": "",
        "summary": "getUsedFileExtensions",
        "tags": [
          "Search"
        ],
        "operationId": "getUsedFileExtensions",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          }
        ],
        "responses": {
          "200": {
            "description": "Extensions in use on an account",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/audit/accountLog": {
      "get": {
        "description": "",
        "summary": "getAccountRecentAuditTrail",
        "tags": [
          "Audit",
          "Account"
        ],
        "operationId": "getAccountRecentAuditTrail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "-id"
              ]
            },
            "description": "Default sort: `-id`. If request body contains `id` or `uid` parameter then the default sort is `id`"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "activeUser"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained using a dot."
          }
        ],
        "responses": {
          "200": {
            "description": "Audit Trail entries",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/audit": {
      "get": {
        "description": "",
        "summary": "getAccountAuditTrail",
        "tags": [
          "Audit"
        ],
        "operationId": "getAccountAuditTrail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          },
          {
            "name": "expand",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "activeUser"
              ]
            },
            "description": "Include related information (comma-separated). Can be chained using a dot."
          }
        ],
        "responses": {
          "200": {
            "description": "Audit Trail entries",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/files/{fileUid}/audit": {
      "get": {
        "description": "",
        "summary": "getFileAuditTrail",
        "tags": [
          "Audit",
          "File"
        ],
        "operationId": "getFileAuditTrail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "fileUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "File UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Audit Trail entries",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/folders/{folderUid}/audit": {
      "get": {
        "description": "",
        "summary": "getFolderAuditTrail",
        "tags": [
          "Audit",
          "Folder"
        ],
        "operationId": "getFolderAuditTrail",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "folderUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Folder UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Pagination sorting, comma-separated list of attribute names, prepend with hyphen for descending order"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Audit Trail entries",
            "schema": {
              "type": "array",
              "items": {}
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    },
    "/v2/accounts/{accountUid}/audit/syncLog": {
      "get": {
        "description": "",
        "summary": "getFileSyncLog",
        "tags": [
          "Audit",
          "Account"
        ],
        "operationId": "getFileSyncLog",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "default": "Bearer {token}",
            "type": "string"
          },
          {
            "name": "accountUid",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$",
            "description": "Account UID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "exclusiveMinimum": false,
            "description": "Pagination page"
          },
          {
            "name": "per-page",
            "in": "query",
            "required": false,
            "default": 500,
            "type": "integer",
            "format": "int32",
            "minimum": 1.0,
            "maximum": 1000.0,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Pagination page size"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "-id"
              ]
            },
            "description": "Default sort: `-id`. If request body contains `id` or `uid` parameter then the default sort is `id`"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Include only listed fields in response (comma-separated). Use asterisk (*) for including all original fields (useful for combining with `expand`). Can be chained (for example field.subField)."
          }
        ],
        "responses": {
          "200": {
            "description": "Audit Trail entries",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Fileentries"
              }
            },
            "headers": {
              "X-Pagination-Total-Count": {
                "description": "Total number of matches",
                "type": "string"
              },
              "X-Pagination-Page-Count": {
                "description": "Total number of pages",
                "type": "string"
              },
              "X-Pagination-Current-Page": {
                "description": "Current page number",
                "type": "string"
              },
              "X-Pagination-Per-Page": {
                "description": "Items per page",
                "type": "string"
              },
              "Link": {
                "description": "Links for paging through records",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400-badRequest1"
            },
            "headers": {}
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403-forbidden1"
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401-unauthorized1"
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "Userprovider": {
      "title": "Userprovider",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "providerId": {
          "example": "google",
          "type": "string"
        },
        "providerValue": {
          "example": "johnSmith@gmail.com",
          "type": "string"
        },
        "providerName": {
          "example": "John Smith",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "User": {
      "title": "User",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "locale": {
          "example": "en-GB",
          "type": "string",
          "maxLength": 16
        },
        "planId": {
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "example": "My company name",
          "type": "string",
          "maxLength": 255
        },
        "phone": {
          "example": "+123 456 7890",
          "type": "string",
          "maxLength": 255
        },
        "address": {
          "example": "Street name 10",
          "type": "string",
          "maxLength": 255
        },
        "zip": {
          "example": "12345",
          "type": "string",
          "maxLength": 255
        },
        "city": {
          "example": "City name",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "example": "State name",
          "type": "string",
          "maxLength": 255
        },
        "countryCode": {
          "type": "string",
          "maxLength": 2
        },
        "taxNo": {
          "example": "EE123456789",
          "type": "string",
          "maxLength": 255
        },
        "registerNo": {
          "example": "12345678",
          "type": "string",
          "maxLength": 255
        },
        "title": {
          "example": "Mr.",
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        },
        "userType": {
          "$ref": "#/definitions/UserType"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "timezone": {
          "example": "Europe/London",
          "type": "string"
        },
        "providers": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Userprovider"
          }
        }
      }
    },
    "User(withexpandfields)": {
      "title": "User(withexpandfields)",
      "type": "object",
      "properties": {
        "dateFormat": {
          "type": "string"
        },
        "timeFormat": {
          "type": "string"
        }
      }
    },
    "User(withexpandedfields)": {
      "title": "User(withexpandedfields)",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "locale": {
          "example": "en-GB",
          "type": "string",
          "maxLength": 16
        },
        "planId": {
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "companyName": {
          "example": "My company name",
          "type": "string",
          "maxLength": 255
        },
        "phone": {
          "example": "+123 456 7890",
          "type": "string",
          "maxLength": 255
        },
        "address": {
          "example": "Street name 10",
          "type": "string",
          "maxLength": 255
        },
        "zip": {
          "example": "12345",
          "type": "string",
          "maxLength": 255
        },
        "city": {
          "example": "City name",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "example": "State name",
          "type": "string",
          "maxLength": 255
        },
        "countryCode": {
          "type": "string",
          "maxLength": 2
        },
        "taxNo": {
          "example": "EE123456789",
          "type": "string",
          "maxLength": 255
        },
        "registerNo": {
          "example": "12345678",
          "type": "string",
          "maxLength": 255
        },
        "title": {
          "example": "Mr.",
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        },
        "userType": {
          "$ref": "#/definitions/UserType"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "timezone": {
          "example": "Europe/London",
          "type": "string"
        },
        "providers": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Userprovider"
          }
        },
        "dateFormat": {
          "type": "string"
        },
        "timeFormat": {
          "type": "string"
        }
      }
    },
    "Private": {
      "title": "Private",
      "type": "object",
      "properties": {
        "userType": {
          "$ref": "#/definitions/UserType"
        },
        "address": {
          "example": "Street name 10",
          "type": "string",
          "maxLength": 255
        },
        "zip": {
          "example": "12345",
          "type": "string",
          "maxLength": 255
        },
        "city": {
          "example": "City name",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "example": "State name",
          "type": "string",
          "maxLength": 255
        },
        "countryCode": {
          "type": "string",
          "maxLength": 2
        },
        "name": {
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "userType"
      ]
    },
    "userBillingBase": {
      "title": "userBillingBase",
      "type": "object",
      "properties": {
        "userType": {
          "$ref": "#/definitions/UserType"
        },
        "address": {
          "example": "Street name 10",
          "type": "string",
          "maxLength": 255
        },
        "zip": {
          "example": "12345",
          "type": "string",
          "maxLength": 255
        },
        "city": {
          "example": "City name",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "example": "State name",
          "type": "string",
          "maxLength": 255
        },
        "countryCode": {
          "type": "string",
          "maxLength": 2
        }
      },
      "required": [
        "userType"
      ]
    },
    "Company": {
      "title": "Company",
      "type": "object",
      "properties": {
        "userType": {
          "$ref": "#/definitions/UserType"
        },
        "address": {
          "example": "Street name 10",
          "type": "string",
          "maxLength": 255
        },
        "zip": {
          "example": "12345",
          "type": "string",
          "maxLength": 255
        },
        "city": {
          "example": "City name",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "example": "State name",
          "type": "string",
          "maxLength": 255
        },
        "countryCode": {
          "type": "string",
          "maxLength": 2
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "companyName": {
          "example": "My company name",
          "type": "string",
          "maxLength": 255
        },
        "taxNo": {
          "example": "EE123456789",
          "type": "string",
          "maxLength": 255
        },
        "registerNo": {
          "example": "12345678",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "userType"
      ]
    },
    "Usersignup": {
      "title": "Usersignup",
      "type": "object",
      "properties": {
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string",
          "maxLength": 255
        },
        "companyName": {
          "example": "My company name",
          "type": "string",
          "maxLength": 255
        },
        "phone": {
          "example": "+123 456 7890",
          "type": "string",
          "maxLength": 255
        },
        "address": {
          "example": "Street name 10",
          "type": "string",
          "maxLength": 255
        },
        "zip": {
          "example": "12345",
          "type": "string",
          "maxLength": 255
        },
        "city": {
          "example": "City name",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "example": "State name",
          "type": "string",
          "maxLength": 255
        },
        "countryCode": {
          "type": "string",
          "maxLength": 2
        },
        "taxNo": {
          "example": "EE123456789",
          "type": "string",
          "maxLength": 255
        },
        "registerNo": {
          "example": "12345678",
          "type": "string",
          "maxLength": 255
        },
        "title": {
          "example": "Mr.",
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        },
        "planId": {
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "locale": {
          "example": "en-GB",
          "type": "string",
          "maxLength": 16
        },
        "timezone": {
          "example": "Europe/London",
          "type": "string"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Genericaction"
          }
        }
      },
      "required": [
        "email",
        "countryCode"
      ]
    },
    "newUserSignup": {
      "title": "newUserSignup",
      "type": "object",
      "properties": {
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string",
          "maxLength": 255
        },
        "companyName": {
          "example": "My company name",
          "type": "string",
          "maxLength": 255
        },
        "phone": {
          "example": "+123 456 7890",
          "type": "string",
          "maxLength": 255
        },
        "address": {
          "example": "Street name 10",
          "type": "string",
          "maxLength": 255
        },
        "zip": {
          "example": "12345",
          "type": "string",
          "maxLength": 255
        },
        "city": {
          "example": "City name",
          "type": "string",
          "maxLength": 255
        },
        "state": {
          "example": "State name",
          "type": "string",
          "maxLength": 255
        },
        "countryCode": {
          "type": "string",
          "maxLength": 2
        },
        "taxNo": {
          "example": "EE123456789",
          "type": "string",
          "maxLength": 255
        },
        "registerNo": {
          "example": "12345678",
          "type": "string",
          "maxLength": 255
        },
        "title": {
          "example": "Mr.",
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        },
        "planId": {
          "example": 10,
          "type": "integer",
          "format": "int32"
        },
        "locale": {
          "example": "en-GB",
          "type": "string",
          "maxLength": 16
        },
        "timezone": {
          "example": "Europe/London",
          "type": "string"
        },
        "defaultAccountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Genericaction"
          }
        }
      },
      "required": [
        "email",
        "companyName",
        "countryCode"
      ]
    },
    "Otheruser": {
      "title": "Otheruser",
      "type": "object",
      "properties": {
        "uid": {
          "description": "User UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "User name",
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "description": "User email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Teamuser": {
      "title": "Teamuser",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Group": {
      "title": "Group",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My group",
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/group_properties-permissions"
        }
      }
    },
    "shareRole": {
      "title": "shareRole",
      "type": "string",
      "enum": [
        "READ",
        "EDIT",
        "PREVIEW",
        "CUSTOM"
      ]
    },
    "Sharesettings": {
      "title": "Sharesettings",
      "type": "object",
      "properties": {
        "isRecursive": {
          "description": "Apply these settings to entities below current target level",
          "example": true,
          "type": "boolean"
        },
        "accountRead": {
          "description": "View account-related data (groups, meta, ...)",
          "example": false,
          "type": "boolean"
        },
        "accountDownload": {
          "description": "Download whole account contents at once",
          "example": false,
          "type": "boolean"
        },
        "accountUpdate": {
          "description": "Update account settings, groups, ...",
          "example": false,
          "type": "boolean"
        },
        "accountShare": {
          "description": "Share account to other users",
          "example": false,
          "type": "boolean"
        },
        "accountAudit": {
          "description": "View account audit data",
          "example": false,
          "type": "boolean"
        },
        "accountGroups": {
          "description": "Manage groups",
          "example": false,
          "type": "boolean"
        },
        "accountUsers": {
          "description": "Manage users",
          "example": false,
          "type": "boolean"
        },
        "accountMeta": {
          "description": "Manage meta",
          "example": false,
          "type": "boolean"
        },
        "accountRecycleBin": {
          "description": "Manage recycle bin",
          "example": false,
          "type": "boolean"
        },
        "accountNumbering": {
          "description": "Manage numbering",
          "example": false,
          "type": "boolean"
        },
        "accountIdp": {
          "description": "Manage IdP",
          "example": false,
          "type": "boolean"
        },
        "accountPasswordPolicy": {
          "description": "Manage password policy",
          "example": false,
          "type": "boolean"
        },
        "folderCreate": {
          "description": "Create a new folder",
          "example": false,
          "type": "boolean"
        },
        "folderRead": {
          "description": "List folders in a folder",
          "example": true,
          "type": "boolean"
        },
        "folderDownload": {
          "description": "Download a folder",
          "example": true,
          "type": "boolean"
        },
        "folderUpdate": {
          "description": "Update folder data",
          "example": false,
          "type": "boolean"
        },
        "folderMove": {
          "description": "Move folder to new location (requires folderCreate permission at new location)",
          "example": false,
          "type": "boolean"
        },
        "folderDelete": {
          "description": "Delete a folder",
          "example": false,
          "type": "boolean"
        },
        "folderDuplicate": {
          "description": "Duplicate folder (requires folderCreate permission at target)",
          "example": false,
          "type": "boolean"
        },
        "folderShare": {
          "description": "Share a folder",
          "example": false,
          "type": "boolean"
        },
        "folderPublicShare": {
          "description": "Create a public link for a folder (requires folderShare permission)",
          "example": false,
          "type": "boolean"
        },
        "folderAudit": {
          "description": "View folder audit trail",
          "example": true,
          "type": "boolean"
        },
        "fileCreate": {
          "description": "Add a file",
          "example": true,
          "type": "boolean"
        },
        "fileRead": {
          "description": "List files in a folder",
          "example": true,
          "type": "boolean"
        },
        "filePreview": {
          "description": "View preview of a file",
          "example": true,
          "type": "boolean"
        },
        "fileDownload": {
          "description": "Download a file",
          "example": true,
          "type": "boolean"
        },
        "fileUpdate": {
          "description": "Update name, meta, ... of a file",
          "example": false,
          "type": "boolean"
        },
        "fileUpdateContent": {
          "description": "Manage file versions",
          "example": false,
          "type": "boolean"
        },
        "fileMove": {
          "description": "Move file to new location (requires fileCreate permission at new location)",
          "example": false,
          "type": "boolean"
        },
        "fileDelete": {
          "description": "Delete a file",
          "example": false,
          "type": "boolean"
        },
        "fileDuplicate": {
          "description": "Duplicate file (requires fileCreate permission at target)",
          "example": false,
          "type": "boolean"
        },
        "fileShare": {
          "description": "Share a file",
          "example": false,
          "type": "boolean"
        },
        "filePublicShare": {
          "description": "Create a public link for a file (requires folderShare permission)",
          "example": false,
          "type": "boolean"
        },
        "fileAudit": {
          "description": "View file audit trail",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Share": {
      "title": "Share",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "readOnly": true,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "readOnly": true,
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "group": {
          "description": "null, if not a group share",
          "example": "My group",
          "readOnly": true,
          "type": "string"
        },
        "groupUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "type": "string",
          "maxLength": 255
        },
        "userUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        }
      }
    },
    "Group(withexpandedfields)": {
      "title": "Group(withexpandedfields)",
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Otheruser"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Share"
          }
        }
      }
    },
    "Group(withexpandedfields)2": {
      "title": "Group(withexpandedfields)2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My group",
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/group_properties-permissions"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Otheruser"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Share"
          }
        }
      }
    },
    "Teamuser(withexpandedfields)": {
      "title": "Teamuser(withexpandedfields)",
      "type": "object",
      "properties": {
        "remoteUsername": {
          "example": "someEmail@foo.bar",
          "type": "string",
          "maxLength": 255
        },
        "status": {
          "$ref": "#/definitions/Status1"
        },
        "groups": {
          "type": "array",
          "items": {}
        },
        "position": {
          "type": "string",
          "maxLength": 250
        }
      }
    },
    "Teamuser(withexpandedfields)2": {
      "title": "Teamuser(withexpandedfields)2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        },
        "remoteUsername": {
          "example": "someEmail@foo.bar",
          "type": "string",
          "maxLength": 255
        },
        "status": {
          "$ref": "#/definitions/Status1"
        },
        "groups": {
          "type": "array",
          "items": {}
        },
        "position": {
          "type": "string",
          "maxLength": 250
        }
      }
    },
    "Account": {
      "title": "Account",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "Account name",
          "type": "string",
          "maxLength": 255
        },
        "owner": {
          "$ref": "#/definitions/Otheruser"
        },
        "canGetSections": {
          "type": "boolean"
        },
        "inboxFolderUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "inboxEmailName": {
          "type": "string"
        },
        "teamFolderUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "indexing": {
          "example": true,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/permissions"
        }
      }
    },
    "accountShare": {
      "title": "accountShare",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "readOnly": true,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "readOnly": true,
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "group": {
          "description": "null, if not a group share",
          "example": "My group",
          "readOnly": true,
          "type": "string"
        },
        "groupUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "type": "string",
          "maxLength": 255
        },
        "userUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "Accountstats": {
      "title": "Accountstats",
      "type": "object",
      "properties": {
        "folders": {
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "files": {
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "size": {
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "collaboratorCount": {
          "type": "integer",
          "minimum": 5.0,
          "format": "int32"
        },
        "time": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Account(withexpandedfields)": {
      "title": "Account(withexpandedfields)",
      "type": "object",
      "properties": {
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/accountShare"
          }
        },
        "stats": {
          "$ref": "#/definitions/Accountstats"
        }
      }
    },
    "Account(withexpandedfields)2": {
      "title": "Account(withexpandedfields)2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "Account name",
          "type": "string",
          "maxLength": 255
        },
        "owner": {
          "$ref": "#/definitions/Otheruser"
        },
        "canGetSections": {
          "type": "boolean"
        },
        "inboxFolderUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "inboxEmailName": {
          "type": "string"
        },
        "teamFolderUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "indexing": {
          "example": true,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/permissions"
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/accountShare"
          }
        },
        "stats": {
          "$ref": "#/definitions/Accountstats"
        }
      }
    },
    "Partiallysharedaccount": {
      "title": "Partiallysharedaccount",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "Account name",
          "type": "string",
          "maxLength": 255
        },
        "owner": {
          "$ref": "#/definitions/Otheruser"
        },
        "canGetSections": {
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "permissions": {
      "title": "permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        },
        "canDownload": {
          "example": true,
          "type": "boolean"
        },
        "canCreateGroup": {
          "example": true,
          "type": "boolean"
        },
        "canCreateMeta": {
          "example": true,
          "type": "boolean"
        },
        "canCreateSection": {
          "example": true,
          "type": "boolean"
        },
        "canAudit": {
          "example": true,
          "type": "boolean"
        },
        "canShareCustomPermissions": {
          "example": true,
          "type": "boolean"
        },
        "canManageGroups": {
          "example": true,
          "type": "boolean"
        },
        "canManageUsers": {
          "example": true,
          "type": "boolean"
        },
        "canManageMeta": {
          "example": true,
          "type": "boolean"
        },
        "canManageRecycleBin": {
          "example": true,
          "type": "boolean"
        },
        "canManageNumbering": {
          "example": true,
          "type": "boolean"
        },
        "canManageIdp": {
          "example": true,
          "type": "boolean"
        },
        "canManagePasswordPolicy": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "AccountUser": {
      "title": "AccountUser",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "position": {
          "type": "string",
          "maxLength": 250
        },
        "teamUser": {
          "readOnly": true,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountUser(withexpandedfields)": {
      "title": "AccountUser(withexpandedfields)",
      "type": "object",
      "properties": {
        "teamUserStatus": {
          "$ref": "#/definitions/Status1"
        }
      }
    },
    "AccountUser(withexpandedfields)2": {
      "title": "AccountUser(withexpandedfields)2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "readOnly": true,
          "type": "string"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "position": {
          "type": "string",
          "maxLength": 250
        },
        "teamUser": {
          "readOnly": true,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "teamUserStatus": {
          "$ref": "#/definitions/Status1"
        }
      }
    },
    "fileShare": {
      "title": "fileShare",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "readOnly": true,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "readOnly": true,
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "group": {
          "description": "null, if not a group share",
          "example": "My group",
          "readOnly": true,
          "type": "string"
        },
        "groupUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "type": "string",
          "maxLength": 255
        },
        "userUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "fileUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "folderShareRole": {
      "title": "folderShareRole",
      "type": "string",
      "enum": [
        "READ",
        "EDIT",
        "PREVIEW",
        "UPLOAD",
        "CUSTOM"
      ]
    },
    "folderShare": {
      "title": "folderShare",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "readOnly": true,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "readOnly": true,
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "group": {
          "description": "null, if not a group share",
          "example": "My group",
          "readOnly": true,
          "type": "string"
        },
        "groupUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "type": "string",
          "maxLength": 255
        },
        "userUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "tagShare": {
      "title": "tagShare",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "UID of shared item, be it account, entity (file, folder, ...), tag...",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "public": {
          "readOnly": true,
          "type": "boolean"
        },
        "link": {
          "description": "URL to shared entity, null if not a public share",
          "readOnly": true,
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "group": {
          "description": "null, if not a group share",
          "example": "My group",
          "readOnly": true,
          "type": "string"
        },
        "groupUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "type": "string",
          "maxLength": 255
        },
        "userUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "tagUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "index-root": {
      "title": "index-root",
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]{10}"
          },
          "minItems": 1,
          "pattern": "[a-zA-Z0-9_-]{10}"
        }
      }
    },
    "source": {
      "title": "source",
      "description": "Source field for generating the end time",
      "type": "string",
      "enum": [
        "createdAt",
        "updatedAt",
        "date",
        "dueDate",
        "approvedAt",
        "signedAt",
        "acknowledgedAt",
        "reviewedAt",
        "meta:<uid>"
      ]
    },
    "Entity": {
      "title": "Entity",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retentionEnd"
            },
            {
              "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
            }
          ]
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "readOnly": true,
          "type": "boolean"
        },
        "retention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retention"
            },
            {
              "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded"
            }
          ]
        },
        "activeRetention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/activeRetention"
            },
            {
              "readOnly": true
            }
          ]
        }
      }
    },
    "AttributeColumn": {
      "title": "AttributeColumn",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/Field"
        }
      }
    },
    "retention": {
      "title": "retention",
      "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded",
      "type": "object",
      "properties": {
        "time": {
          "description": "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention",
          "example": "1m5d",
          "type": "string",
          "maxLength": 30
        },
        "action": {
          "$ref": "#/definitions/action"
        },
        "isRecursive": {
          "type": "boolean"
        },
        "target": {
          "description": "Archival target",
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "keepStructure": {
          "description": "Keep folder structure on archiving with isRecursive active",
          "type": "boolean"
        },
        "source": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/source"
            },
            {
              "description": "Source field for generating the end time"
            }
          ]
        }
      },
      "required": [
        "time",
        "action",
        "isRecursive"
      ]
    },
    "activeRetention": {
      "title": "activeRetention",
      "type": "object",
      "properties": {
        "time": {
          "description": "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention",
          "example": "1m5d",
          "type": "string",
          "maxLength": 30
        },
        "action": {
          "$ref": "#/definitions/action"
        },
        "entityUid": {
          "description": "UID of an entity from where the retention originates from",
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "isRecursive": {
          "type": "boolean"
        },
        "source": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/source"
            },
            {
              "description": "Source field for generating the end time"
            }
          ]
        },
        "target": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "keepStructure": {
          "description": "Keep folder structure on archiving with isRecursive active",
          "type": "boolean"
        }
      },
      "required": [
        "time",
        "action",
        "entityUid",
        "isRecursive"
      ]
    },
    "Mail-inaddress": {
      "title": "Mail-inaddress",
      "type": "object",
      "properties": {
        "address": {
          "example": "some-random-address@folderit.com",
          "readOnly": true,
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "Folder": {
      "title": "Folder",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "type": "array",
          "items": {},
          "minItems": 3
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "type": "integer",
          "format": "int32"
        },
        "retention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retention"
            },
            {
              "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded"
            }
          ]
        },
        "activeRetention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/activeRetention"
            },
            {
              "readOnly": true
            }
          ]
        },
        "mailInAddress": {
          "$ref": "#/definitions/Mail-inaddress"
        },
        "permissions": {
          "$ref": "#/definitions/folder_properties-permissions"
        }
      }
    },
    "MetaBase": {
      "title": "MetaBase",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Stringmeta": {
      "title": "Stringmeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "string"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entitystringmeta": {
      "title": "Entitystringmeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Stringmeta"
        },
        "value": {
          "example": "meta value",
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        }
      }
    },
    "Textmeta": {
      "title": "Textmeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "text"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entitytextmeta": {
      "title": "Entitytextmeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Textmeta"
        },
        "value": {
          "example": "meta value",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Integermeta": {
      "title": "Integermeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "integer"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entityintegermeta": {
      "title": "Entityintegermeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Integermeta"
        },
        "value": {
          "example": 42,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Integermeta1": {
      "title": "Integermeta1",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "float"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "decimalScale": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 18.0,
          "format": "int32"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entitydecimalmeta": {
      "title": "Entitydecimalmeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Integermeta1"
        },
        "value": {
          "example": "42.50",
          "type": "string"
        },
        "scale": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 18.0,
          "format": "int32"
        }
      }
    },
    "Datemeta": {
      "title": "Datemeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "date"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entitydatemeta": {
      "title": "Entitydatemeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Datemeta"
        },
        "value": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Datetimemeta": {
      "title": "Datetimemeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "datetime"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entitydatetimemeta": {
      "title": "Entitydatetimemeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Datetimemeta"
        },
        "value": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Timemeta": {
      "title": "Timemeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "time"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entitytimemeta": {
      "title": "Entitytimemeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Timemeta"
        },
        "value": {
          "example": "17:32:28",
          "type": "string"
        }
      }
    },
    "Booleanmeta": {
      "title": "Booleanmeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "boolean"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "description": "Boolean meta does not support setting this property to `true`",
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entitybooleanmeta": {
      "title": "Entitybooleanmeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Booleanmeta"
        },
        "value": {
          "type": "boolean"
        }
      }
    },
    "URLmeta": {
      "title": "URLmeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "url"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "EntityURLmeta": {
      "title": "EntityURLmeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/URLmeta"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Emailmeta": {
      "title": "Emailmeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "email"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      },
      "required": [
        "type"
      ]
    },
    "Entityemailmeta": {
      "title": "Entityemailmeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Emailmeta"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "MetaSelectOption": {
      "title": "MetaSelectOption",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "value": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "order": {
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 65535.0,
          "format": "int32"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "isUsed": {
          "type": "boolean"
        }
      }
    },
    "Selectmeta": {
      "title": "Selectmeta",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "select"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "options": {
          "description": "Options list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetaSelectOption"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "Entityselectmeta": {
      "title": "Entityselectmeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "meta": {
          "$ref": "#/definitions/Selectmeta"
        },
        "value": {
          "description": "Option UID",
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "Entity1": {
      "title": "Entity1",
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "maxLength": 255
        },
        "numberingSchemeUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "mailSender": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "mailSenderName": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "mailContent": {
          "readOnly": true,
          "type": "string",
          "maxLength": 65535
        },
        "mailSubject": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "note": {
          "type": "string",
          "maxLength": 65535
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "FolderStats": {
      "title": "FolderStats",
      "type": "object",
      "properties": {
        "folders": {
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "files": {
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "missingMeta": {
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "size": {
          "example": 3,
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "time": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Folder(withexpandedfields)2": {
      "title": "Folder(withexpandedfields)2",
      "type": "object",
      "properties": {
        "entity": {},
        "parent": {
          "$ref": "#/definitions/Folder"
        },
        "meta": {
          "type": "array",
          "items": {}
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folderShare"
          }
        },
        "extra": {
          "$ref": "#/definitions/Entity1"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "type": "integer",
          "minimum": -32768.0,
          "maximum": 32767.0,
          "format": "int32"
        },
        "inboxFolder": {
          "type": "boolean"
        },
        "teamFolder": {
          "type": "boolean"
        },
        "folderStats": {
          "$ref": "#/definitions/FolderStats"
        },
        "visibleColumnsWithMeta": {
          "description": "Array of columns to be shown by the client",
          "type": "array",
          "items": {},
          "minItems": 3
        },
        "sort": {
          "description": "Column names, prefixed with a dash (`-`) for descending order, separated with a comma",
          "example": "name",
          "type": "string"
        },
        "viewType": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/viewType"
            },
            {
              "description": "View type of a folder listing"
            }
          ]
        }
      }
    },
    "Folder(withexpandedfields)": {
      "title": "Folder(withexpandedfields)",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "type": "array",
          "items": {},
          "minItems": 3
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "type": "integer",
          "format": "int32"
        },
        "retention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retention"
            },
            {
              "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded"
            }
          ]
        },
        "activeRetention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/activeRetention"
            },
            {
              "readOnly": true
            }
          ]
        },
        "mailInAddress": {
          "$ref": "#/definitions/Mail-inaddress"
        },
        "permissions": {
          "$ref": "#/definitions/folder_properties-permissions"
        },
        "entity": {},
        "parent": {
          "$ref": "#/definitions/Folder"
        },
        "meta": {
          "type": "array",
          "items": {}
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folderShare"
          }
        },
        "extra": {
          "$ref": "#/definitions/Entity1"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "type": "integer",
          "minimum": -32768.0,
          "maximum": 32767.0,
          "format": "int32"
        },
        "inboxFolder": {
          "type": "boolean"
        },
        "teamFolder": {
          "type": "boolean"
        },
        "folderStats": {
          "$ref": "#/definitions/FolderStats"
        },
        "visibleColumnsWithMeta": {
          "description": "Array of columns to be shown by the client",
          "type": "array",
          "items": {},
          "minItems": 3
        },
        "sort": {
          "description": "Column names, prefixed with a dash (`-`) for descending order, separated with a comma",
          "example": "name",
          "type": "string"
        },
        "viewType": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/viewType"
            },
            {
              "description": "View type of a folder listing"
            }
          ]
        }
      }
    },
    "type": {
      "title": "type",
      "type": "string",
      "enum": [
        "folder",
        "file",
        "link"
      ]
    },
    "retentionEnd": {
      "title": "retentionEnd",
      "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting",
      "type": "object",
      "properties": {
        "end": {
          "description": "null value for both end and action results in forced infinite retention",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "$ref": "#/definitions/action"
        },
        "target": {
          "description": "Archival target",
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "source": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/source"
            },
            {
              "description": "Indicates the source field for generating the end time",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "end",
        "action"
      ]
    },
    "File": {
      "title": "File",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "extension": {
          "example": "txt",
          "readOnly": true,
          "type": "string"
        },
        "mimeType": {
          "example": "text/plain",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string",
          "maxLength": 255
        },
        "versionUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "numberingSchemeUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "note": {
          "type": "string",
          "maxLength": 65535
        },
        "isLocked": {
          "description": "A file could be locked without specific user, in that case the lockedBy attribute will stay null",
          "readOnly": true,
          "type": "boolean"
        },
        "lockId": {
          "type": "string",
          "maxLength": 2048
        },
        "lockedBy": {
          "type": "string"
        },
        "lockTime": {
          "type": "integer",
          "format": "int32"
        },
        "isSentByMail": {
          "readOnly": true,
          "type": "boolean"
        },
        "mailSender": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "mailSenderName": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "mailContent": {
          "readOnly": true,
          "type": "string",
          "maxLength": 65535
        },
        "mailSubject": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the current version",
          "type": "boolean"
        },
        "hash": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/hash"
            },
            {
              "readOnly": true
            }
          ]
        },
        "deletedAt": {
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retentionEnd"
            },
            {
              "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
            }
          ]
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "readOnly": true,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "permissions": {
          "$ref": "#/definitions/properties-permissions"
        },
        "supports": {
          "$ref": "#/definitions/Supports"
        }
      }
    },
    "Tag": {
      "title": "Tag",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "myTag",
          "type": "string",
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      }
    },
    "Person": {
      "title": "Person",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "Johnny Smith",
          "type": "string",
          "maxLength": 255
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        }
      }
    },
    "Reminder1": {
      "title": "Reminder1",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "fileUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "remindAt": {
          "description": "Unix timestamp",
          "example": "1537177837",
          "type": "string"
        },
        "content": {
          "example": "Hello",
          "type": "string",
          "maxLength": 65535
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "reminder": {
      "title": "reminder",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "fileUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "remindAt": {
          "description": "Unix timestamp",
          "example": "1537177837",
          "type": "string"
        },
        "content": {
          "example": "Hello",
          "type": "string",
          "maxLength": 65535
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "groupUid": {
          "description": "Group UID",
          "example": "Abc_123-XY",
          "type": "string"
        },
        "email": {
          "description": "Email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Relateditem": {
      "title": "Relateditem",
      "type": "object",
      "properties": {
        "fileUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/type"
        }
      },
      "required": [
        "fileUid",
        "entityUid",
        "user",
        "createdAt",
        "type"
      ]
    },
    "hash": {
      "title": "hash",
      "type": "object",
      "properties": {
        "md5": {
          "example": "d571828bd7c88787c98cf0112f8cc7f1",
          "type": "string"
        },
        "sha256": {
          "example": "8a9f51d294e88ee1c600452542397cdac4c1064972e000c198e83e9a5052f488",
          "type": "string"
        }
      }
    },
    "Fileversion": {
      "title": "Fileversion",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "filename": {
          "example": "sample.txt",
          "readOnly": true,
          "type": "string"
        },
        "fileUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "mimeType": {
          "example": "text/plain",
          "readOnly": true,
          "type": "string"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the version",
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/hash"
            },
            {
              "readOnly": true
            }
          ]
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Filethumbnails": {
      "title": "Filethumbnails",
      "type": "object",
      "properties": {
        "avif_128": {
          "type": "string"
        },
        "avif_400": {
          "type": "string"
        },
        "jpg_128": {
          "type": "string"
        },
        "jpg_400": {
          "type": "string"
        }
      }
    },
    "Fileversion(withexpandedfields)2": {
      "title": "Fileversion(withexpandedfields)2",
      "type": "object",
      "properties": {
        "isActive": {
          "description": "Indicates if the version is active for the file",
          "type": "boolean"
        },
        "thumbnails": {
          "$ref": "#/definitions/Filethumbnails"
        }
      }
    },
    "Fileversion(withexpandedfields)": {
      "title": "Fileversion(withexpandedfields)",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "filename": {
          "example": "sample.txt",
          "readOnly": true,
          "type": "string"
        },
        "fileUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "mimeType": {
          "example": "text/plain",
          "readOnly": true,
          "type": "string"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the version",
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/hash"
            },
            {
              "readOnly": true
            }
          ]
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "isActive": {
          "description": "Indicates if the version is active for the file",
          "type": "boolean"
        },
        "thumbnails": {
          "$ref": "#/definitions/Filethumbnails"
        }
      }
    },
    "File(withexpandedfields)2": {
      "title": "File(withexpandedfields)2",
      "type": "object",
      "properties": {
        "entity": {},
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "people": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "meta": {
          "type": "array",
          "items": {}
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/reminder"
          }
        },
        "parent": {
          "$ref": "#/definitions/Folder"
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fileShare"
          }
        },
        "fileRelations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relateditem"
          }
        },
        "version": {},
        "thumbnails": {
          "$ref": "#/definitions/Filethumbnails"
        }
      }
    },
    "File(withexpandedfields)": {
      "title": "File(withexpandedfields)",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "extension": {
          "example": "txt",
          "readOnly": true,
          "type": "string"
        },
        "mimeType": {
          "example": "text/plain",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "type": "string",
          "maxLength": 255
        },
        "versionUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "numberingSchemeUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "note": {
          "type": "string",
          "maxLength": 65535
        },
        "isLocked": {
          "description": "A file could be locked without specific user, in that case the lockedBy attribute will stay null",
          "readOnly": true,
          "type": "boolean"
        },
        "lockId": {
          "type": "string",
          "maxLength": 2048
        },
        "lockedBy": {
          "type": "string"
        },
        "lockTime": {
          "type": "integer",
          "format": "int32"
        },
        "isSentByMail": {
          "readOnly": true,
          "type": "boolean"
        },
        "mailSender": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "mailSenderName": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "mailContent": {
          "readOnly": true,
          "type": "string",
          "maxLength": 65535
        },
        "mailSubject": {
          "readOnly": true,
          "type": "string",
          "maxLength": 512
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "previewAvailable": {
          "description": "Indicates whether preview is available for the current version",
          "type": "boolean"
        },
        "hash": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/hash"
            },
            {
              "readOnly": true
            }
          ]
        },
        "deletedAt": {
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retentionEnd"
            },
            {
              "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
            }
          ]
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "readOnly": true,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "approvalStatus": {
          "$ref": "#/definitions/ApprovalStatus"
        },
        "permissions": {
          "$ref": "#/definitions/properties-permissions"
        },
        "supports": {
          "$ref": "#/definitions/Supports"
        },
        "entity": {},
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "people": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Person"
          }
        },
        "meta": {
          "type": "array",
          "items": {}
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/reminder"
          }
        },
        "parent": {
          "$ref": "#/definitions/Folder"
        },
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fileShare"
          }
        },
        "fileRelations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relateditem"
          }
        },
        "version": {},
        "thumbnails": {
          "$ref": "#/definitions/Filethumbnails"
        }
      }
    },
    "Link": {
      "title": "Link",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "folderUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My link name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "address": {
          "type": "string"
        },
        "embedded": {
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "type": "integer",
          "format": "int32"
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "readOnly": true,
          "type": "boolean"
        },
        "retentionEnd": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retentionEnd"
            },
            {
              "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
            }
          ]
        },
        "permissions": {
          "$ref": "#/definitions/Permissions9"
        }
      }
    },
    "Resolutionmethod": {
      "title": "Resolutionmethod",
      "type": "string",
      "enum": [
        "approval",
        "DocuSign",
        "eID",
        "acknowledgement",
        "eSign",
        "review"
      ]
    },
    "Resolution": {
      "title": "Resolution",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "Entity UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "fileVersionUid": {
          "description": "File version UID",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "status": {
          "$ref": "#/definitions/Status3"
        },
        "method": {
          "$ref": "#/definitions/Resolutionmethod"
        },
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "note": {
          "type": "string"
        },
        "showMeta": {
          "type": "boolean"
        },
        "showRelatedEntities": {
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "initiatorUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "lastActivityAt": {
          "type": "integer",
          "format": "int32"
        },
        "timeoutAt": {
          "type": "integer",
          "format": "int32"
        },
        "isWorkflowManaged": {
          "type": "boolean"
        }
      }
    },
    "Resolution(withexpandedfields)2": {
      "title": "Resolution(withexpandedfields)2",
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/Permissions10"
        },
        "entity": {},
        "fileVersion": {}
      }
    },
    "Resolution(withexpandedfields)": {
      "title": "Resolution(withexpandedfields)",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "Entity UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "fileVersionUid": {
          "description": "File version UID",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "status": {
          "$ref": "#/definitions/Status3"
        },
        "method": {
          "$ref": "#/definitions/Resolutionmethod"
        },
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "note": {
          "type": "string"
        },
        "showMeta": {
          "type": "boolean"
        },
        "showRelatedEntities": {
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "initiatorUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "lastActivityAt": {
          "type": "integer",
          "format": "int32"
        },
        "timeoutAt": {
          "type": "integer",
          "format": "int32"
        },
        "isWorkflowManaged": {
          "type": "boolean"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions10"
        },
        "entity": {},
        "fileVersion": {}
      }
    },
    "Workflow": {
      "title": "Workflow",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "isActive": {
          "type": "boolean"
        },
        "isRecursive": {
          "description": "Not applicable without entityUid",
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Version": {
      "title": "Version",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "isActive": {
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "stepBase": {
      "title": "stepBase",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "params": {
          "type": "object"
        }
      },
      "required": [
        "type"
      ]
    },
    "moveStep": {
      "title": "moveStep",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "move"
        },
        "params": {
          "$ref": "#/definitions/Params"
        }
      },
      "required": [
        "type",
        "params"
      ]
    },
    "resolutionStep": {
      "title": "resolutionStep",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "resolution"
        },
        "params": {
          "$ref": "#/definitions/Params1"
        },
        "onFailure": {
          "type": "array",
          "items": {},
          "minItems": 1
        },
        "onSuccess": {
          "type": "array",
          "items": {},
          "minItems": 1
        },
        "onTimeout": {
          "type": "array",
          "items": {},
          "minItems": 1
        }
      },
      "required": [
        "type",
        "params"
      ]
    },
    "addInvitesStep": {
      "title": "addInvitesStep",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "addInvites"
        },
        "params": {
          "$ref": "#/definitions/Params2"
        },
        "onFailure": {
          "type": "array",
          "items": {},
          "minItems": 1
        },
        "onSuccess": {
          "type": "array",
          "items": {},
          "minItems": 1
        },
        "onTimeout": {
          "type": "array",
          "items": {},
          "minItems": 1
        }
      },
      "required": [
        "type",
        "params"
      ]
    },
    "resolutionCompleteStep": {
      "title": "resolutionCompleteStep",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "resolutionComplete"
        },
        "params": {
          "$ref": "#/definitions/Params3"
        }
      },
      "required": [
        "type",
        "params"
      ]
    },
    "delayStep": {
      "title": "delayStep",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "default": "delay"
        },
        "params": {
          "$ref": "#/definitions/Params4"
        }
      },
      "required": [
        "type",
        "params"
      ]
    },
    "Version(withexpandedfields)2": {
      "title": "Version(withexpandedfields)2",
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {},
          "minItems": 1
        }
      }
    },
    "Version(withexpandedfields)": {
      "title": "Version(withexpandedfields)",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "isActive": {
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "steps": {
          "type": "array",
          "items": {},
          "minItems": 1
        }
      }
    },
    "Workflowtriggerevent": {
      "title": "Workflowtriggerevent",
      "type": "string",
      "enum": [
        "entityNew",
        "entityDelete",
        "entityRestore",
        "entityMove",
        "entityName",
        "entityNote",
        "entityDescription",
        "entityNumber",
        "entityDate",
        "entityDueDate",
        "entityMetaNew",
        "entityMetaDelete",
        "entityMetaValue",
        "entityTagNew",
        "entityTagDelete",
        "entityRelationNew",
        "entityRelationDelete",
        "fileVersionNew",
        "fileVersionDelete",
        "fileVersionRestore",
        "fileSigneeNew",
        "fileSigneeDelete",
        "folderLanguage",
        "folderMetaUpdate",
        "linkAddress",
        "linkEmbedded",
        "resolutionResponse",
        "resolutionComplete",
        "shareNew",
        "shareDelete",
        "shareUpdate"
      ]
    },
    "resolutionStatus": {
      "title": "resolutionStatus",
      "type": "string",
      "enum": [
        "deleted",
        "preparing",
        "active",
        "inProgress",
        "complete",
        "rejected"
      ]
    },
    "Sourceofevent": {
      "title": "Sourceofevent",
      "type": "object",
      "properties": {
        "resolution": {
          "$ref": "#/definitions/Resolution1"
        }
      }
    },
    "Entityname": {
      "title": "Entityname",
      "type": "object",
      "properties": {
        "caseSensitive": {
          "type": "boolean"
        },
        "operator": {
          "$ref": "#/definitions/Operator"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "caseSensitive",
        "operator",
        "value"
      ]
    },
    "Trigger": {
      "title": "Trigger",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workflowtriggerevent"
          },
          "minItems": 1
        },
        "condition": {
          "type": "array",
          "items": {}
        }
      }
    },
    "Workflow(withexpandedfields)2": {
      "title": "Workflow(withexpandedfields)2",
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "entity": {},
        "version": {},
        "versions": {
          "type": "array",
          "items": {}
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trigger"
          }
        }
      }
    },
    "Workflow(withexpandedfields)": {
      "title": "Workflow(withexpandedfields)",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "isActive": {
          "type": "boolean"
        },
        "isRecursive": {
          "description": "Not applicable without entityUid",
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "permissions": {
          "$ref": "#/definitions/metaBase_properties-permissions"
        },
        "entity": {},
        "version": {},
        "versions": {
          "type": "array",
          "items": {}
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trigger"
          }
        }
      }
    },
    "Entity(withexpandedfields)2": {
      "title": "Entity(withexpandedfields)2",
      "type": "object",
      "properties": {
        "folder": {},
        "file": {},
        "link": {
          "$ref": "#/definitions/Link"
        },
        "asic": {},
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Share"
          }
        },
        "extra": {
          "$ref": "#/definitions/Entity1"
        },
        "meta": {
          "type": "array",
          "items": {}
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "type": "integer",
          "minimum": -32768.0,
          "maximum": 32767.0,
          "format": "int32"
        },
        "inboxFolder": {
          "type": "boolean"
        },
        "teamFolder": {
          "type": "boolean"
        },
        "folderStats": {
          "$ref": "#/definitions/FolderStats"
        },
        "isRoot": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "extension": {
          "example": "txt",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "creator": {
          "$ref": "#/definitions/Otheruser"
        },
        "icon": {
          "$ref": "#/definitions/icon"
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/reminder"
          }
        },
        "entityRelations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relateditem"
          }
        },
        "resolutions": {
          "type": "array",
          "items": {}
        },
        "resolutionSupport": {
          "description": "List of supported resolution methods, which could be initiated on this entity",
          "example": {
            "approval": true,
            "acknowledgement": true,
            "esign": false
          },
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "workflows": {
          "type": "array",
          "items": {}
        }
      }
    },
    "Entity(withexpandedfields)": {
      "title": "Entity(withexpandedfields)",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "deletedAt": {
          "type": "integer",
          "format": "int32"
        },
        "purgeTime": {
          "type": "integer",
          "format": "int32"
        },
        "retentionEnd": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retentionEnd"
            },
            {
              "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
            }
          ]
        },
        "retentionIsCustom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "readOnly": true,
          "type": "boolean"
        },
        "retention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retention"
            },
            {
              "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded"
            }
          ]
        },
        "activeRetention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/activeRetention"
            },
            {
              "readOnly": true
            }
          ]
        },
        "folder": {},
        "file": {},
        "link": {
          "$ref": "#/definitions/Link"
        },
        "asic": {},
        "shares": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Share"
          }
        },
        "extra": {
          "$ref": "#/definitions/Entity1"
        },
        "meta": {
          "type": "array",
          "items": {}
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "type": "integer",
          "minimum": -32768.0,
          "maximum": 32767.0,
          "format": "int32"
        },
        "inboxFolder": {
          "type": "boolean"
        },
        "teamFolder": {
          "type": "boolean"
        },
        "folderStats": {
          "$ref": "#/definitions/FolderStats"
        },
        "isRoot": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "extension": {
          "example": "txt",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "creator": {
          "$ref": "#/definitions/Otheruser"
        },
        "icon": {
          "$ref": "#/definitions/icon"
        },
        "reminders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/reminder"
          }
        },
        "entityRelations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relateditem"
          }
        },
        "resolutions": {
          "type": "array",
          "items": {}
        },
        "resolutionSupport": {
          "description": "List of supported resolution methods, which could be initiated on this entity",
          "example": {
            "approval": true,
            "acknowledgement": true,
            "esign": false
          },
          "type": "object",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "workflows": {
          "type": "array",
          "items": {}
        }
      }
    },
    "Relateditem(withexpandedfields)": {
      "title": "Relateditem(withexpandedfields)",
      "type": "object",
      "properties": {
        "entity": {}
      }
    },
    "Relateditem(withexpandedfields)2": {
      "title": "Relateditem(withexpandedfields)2",
      "type": "object",
      "properties": {
        "fileUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "entity": {}
      },
      "required": [
        "fileUid",
        "entityUid",
        "user",
        "createdAt",
        "type"
      ]
    },
    "duplication-options": {
      "title": "duplication-options",
      "type": "object",
      "properties": {
        "filePeople": {
          "description": "Include file people/signees",
          "type": "boolean",
          "default": true
        },
        "files": {
          "description": "Include files inside folders",
          "type": "boolean",
          "default": true
        },
        "meta": {
          "description": "Include meta",
          "type": "boolean",
          "default": true
        },
        "relations": {
          "description": "Include relations",
          "type": "boolean",
          "default": false
        },
        "reminders": {
          "description": "Include reminders",
          "type": "boolean",
          "default": false
        },
        "resolutions": {
          "description": "Include resolutions",
          "type": "boolean",
          "default": false
        },
        "shares": {
          "description": "Include shares",
          "type": "boolean",
          "default": false
        },
        "tags": {
          "description": "Include tags",
          "type": "boolean",
          "default": true
        },
        "workflows": {
          "description": "Include workflows",
          "type": "boolean",
          "default": false
        }
      }
    },
    "duplicate": {
      "title": "duplicate",
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]{10}"
          },
          "minItems": 1,
          "pattern": "[a-zA-Z0-9_-]{10}"
        },
        "locationUid": {
          "type": "string",
          "pattern": "[a-zA-Z0-9_-]{10}"
        },
        "options": {
          "$ref": "#/definitions/duplication-options"
        }
      },
      "required": [
        "entities",
        "locationUid"
      ]
    },
    "duplicationStatus": {
      "title": "duplicationStatus",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/Status4"
        },
        "progress": {
          "type": "integer",
          "minimum": 0.0,
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "failedEntity": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "duplicates": {
          "description": "Contains a list of duplicated entities in the original order",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$"
          },
          "minLength": 10,
          "maxLength": 10,
          "minItems": 1,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "status",
        "progress",
        "total"
      ]
    },
    "errorResponse": {
      "title": "errorResponse",
      "type": "object",
      "properties": {
        "name": {
          "description": "Error name",
          "type": "string"
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Error status code",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "fileUploadCreateBase": {
      "title": "fileUploadCreateBase",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "create"
        },
        "fileSize": {
          "type": "number",
          "maximum": 5497558138880.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "type": "object"
        }
      },
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType"
      ]
    },
    "File1": {
      "title": "File1",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "create"
        },
        "fileSize": {
          "type": "number",
          "maximum": 5497558138880.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "type": "object"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType",
        "folderUid"
      ]
    },
    "Fileversion1": {
      "title": "Fileversion1",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "create"
        },
        "fileSize": {
          "type": "number",
          "maximum": 5497558138880.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "type": "object"
        },
        "fileUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType",
        "fileUid"
      ]
    },
    "Archiveunpack": {
      "title": "Archiveunpack",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "create"
        },
        "fileSize": {
          "type": "number",
          "maximum": 21474836480.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "parts": {
          "description": "Keys are part numbers, values are content lengths (number type)",
          "type": "object"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "unpack": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Unpack"
            },
            {
              "description": "Unpacking options"
            }
          ]
        }
      },
      "required": [
        "action",
        "fileSize",
        "fileName",
        "contentType",
        "folderUid",
        "unpack"
      ]
    },
    "Part": {
      "title": "Part",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "part"
        },
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "partNumber": {
          "type": "number",
          "minimum": 1.0,
          "maximum": 10000.0,
          "format": "double"
        },
        "contentLength": {
          "type": "number",
          "minimum": 1.0,
          "maximum": 5368709120.0,
          "format": "double"
        }
      },
      "required": [
        "action",
        "uploadId",
        "key",
        "partNumber",
        "contentLength"
      ]
    },
    "Abort": {
      "title": "Abort",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "abort"
        },
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "action",
        "uploadId",
        "key"
      ]
    },
    "fileUploadCompleteBase": {
      "title": "fileUploadCompleteBase",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "complete"
        },
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "fileSize": {
          "type": "number",
          "maximum": 5497558138880.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        }
      },
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName"
      ]
    },
    "File2": {
      "title": "File2",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "complete"
        },
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "fileSize": {
          "type": "number",
          "maximum": 5497558138880.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName",
        "folderUid"
      ]
    },
    "Fileversion2": {
      "title": "Fileversion2",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "complete"
        },
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "fileSize": {
          "type": "number",
          "maximum": 5497558138880.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        },
        "fileUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName",
        "fileUid"
      ]
    },
    "Archiveunpack1": {
      "title": "Archiveunpack1",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "complete"
        },
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "fileSize": {
          "type": "number",
          "maximum": 21474836480.0,
          "format": "double"
        },
        "fileName": {
          "type": "string"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "unpack": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Unpack"
            },
            {
              "description": "Unpacking options"
            }
          ]
        }
      },
      "required": [
        "action",
        "uploadId",
        "key",
        "fileSize",
        "fileName",
        "folderUid",
        "unpack"
      ]
    },
    "Uploadedparts": {
      "title": "Uploadedparts",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "parts"
        },
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "action",
        "uploadId",
        "key"
      ]
    },
    "properties-permissions": {
      "title": "properties-permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canUpdateContent": {
          "description": "Add/manage versions",
          "example": true,
          "type": "boolean"
        },
        "canUpdateOnline": {
          "description": "Edit file in the cloud",
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        },
        "canDownload": {
          "example": true,
          "type": "boolean"
        },
        "canPreview": {
          "example": true,
          "type": "boolean"
        },
        "canLock": {
          "example": true,
          "type": "boolean"
        },
        "canUpdateRetentionEnd": {
          "example": true,
          "type": "boolean"
        },
        "canAudit": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Filemeta": {
      "title": "Filemeta",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "metaUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "value": {},
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Person1": {
      "title": "Person1",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "Johnny Smith",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Tag1": {
      "title": "Tag1",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "myTag",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "File3": {
      "title": "File3",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "versionUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "myFile.txt",
          "type": "string",
          "maxLength": 255
        },
        "extension": {
          "example": "txt",
          "readOnly": true,
          "type": "string"
        },
        "mimeType": {
          "example": "text/plain",
          "readOnly": true,
          "type": "string"
        },
        "size": {
          "example": 123,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "number": {
          "example": "Sample 1.1",
          "type": "string",
          "maxLength": 255
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "note": {
          "example": "My note",
          "type": "string",
          "maxLength": 65535
        },
        "isSentByMail": {
          "readOnly": true,
          "type": "boolean"
        },
        "mailSender": {
          "readOnly": true,
          "type": "string"
        },
        "mailSenderName": {
          "readOnly": true,
          "type": "string"
        },
        "mailContent": {
          "readOnly": true,
          "type": "string"
        },
        "mailSubject": {
          "readOnly": true,
          "type": "string"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "hash": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/hash"
            },
            {
              "readOnly": true
            }
          ]
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "meta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Filemeta"
          }
        },
        "people": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Person1"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag1"
          }
        }
      }
    },
    "viewType": {
      "title": "viewType",
      "description": "View type of a folder listing",
      "type": "string",
      "enum": [
        "list",
        "thumbnail"
      ]
    },
    "folder_properties-permissions": {
      "title": "folder_properties-permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        },
        "canDownload": {
          "example": true,
          "type": "boolean"
        },
        "canCreateFolder": {
          "example": true,
          "type": "boolean"
        },
        "canCreateFile": {
          "example": true,
          "type": "boolean"
        },
        "canUpdateRetention": {
          "example": true,
          "type": "boolean"
        },
        "canAudit": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "group_properties-permissions": {
      "title": "group_properties-permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        },
        "canViewMembers": {
          "example": true,
          "type": "boolean"
        },
        "canAddMember": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Groupmember(user)": {
      "title": "Groupmember(user)",
      "type": "object",
      "properties": {
        "uid": {
          "description": "User UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "User name",
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "description": "User email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/Type4"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions12"
        }
      }
    },
    "Groupmember(child)": {
      "title": "Groupmember(child)",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Group UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Group name",
          "example": "My group",
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type5"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions12"
        }
      }
    },
    "metaType": {
      "title": "metaType",
      "type": "string",
      "enum": [
        "string",
        "text",
        "integer",
        "float",
        "date",
        "datetime",
        "time",
        "boolean",
        "url",
        "email",
        "select"
      ]
    },
    "metaBase_properties-permissions": {
      "title": "metaBase_properties-permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Foldermeta": {
      "title": "Foldermeta",
      "type": "object",
      "properties": {
        "meta": {},
        "folderUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "isRequired": {
          "example": false,
          "type": "boolean"
        },
        "isRecursive": {
          "example": false,
          "type": "boolean"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "includeFiles": {
          "example": true,
          "type": "boolean"
        },
        "includeLinks": {
          "example": true,
          "type": "boolean"
        },
        "includeFolders": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "person_properties-permissions": {
      "title": "person_properties-permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Plan": {
      "title": "Plan",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "example": "Free plan",
          "type": "string"
        },
        "priceBase": {
          "example": 10,
          "type": "number",
          "format": "double"
        },
        "yearDiscount": {
          "example": 0.9,
          "type": "number",
          "format": "double"
        }
      }
    },
    "icon": {
      "title": "icon",
      "type": "string",
      "enum": [
        "folder",
        "file",
        "picture",
        "chart",
        "asic",
        "link"
      ]
    },
    "SearchResult": {
      "title": "SearchResult",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "icon": {
          "$ref": "#/definitions/icon"
        },
        "score": {
          "example": 1.5,
          "type": "number",
          "format": "double"
        },
        "sort": {
          "type": "array",
          "items": {}
        },
        "path": {
          "description": "UID Path tree",
          "example": "/someUid123/someUid124",
          "type": "string"
        },
        "pathUid": {
          "description": "UID Path tree",
          "example": "/someUid123/someUid124",
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SearchResult(withexpandedfields)": {
      "title": "SearchResult(withexpandedfields)",
      "type": "object",
      "properties": {
        "entity": {},
        "folder": {},
        "file": {},
        "link": {
          "$ref": "#/definitions/Link"
        },
        "asic": {},
        "highlight": {
          "type": "string"
        }
      }
    },
    "SearchResult(withexpandedfields)2": {
      "title": "SearchResult(withexpandedfields)2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/type"
        },
        "icon": {
          "$ref": "#/definitions/icon"
        },
        "score": {
          "example": 1.5,
          "type": "number",
          "format": "double"
        },
        "sort": {
          "type": "array",
          "items": {}
        },
        "path": {
          "description": "UID Path tree",
          "example": "/someUid123/someUid124",
          "type": "string"
        },
        "pathUid": {
          "description": "UID Path tree",
          "example": "/someUid123/someUid124",
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "entity": {},
        "folder": {},
        "file": {},
        "link": {
          "$ref": "#/definitions/Link"
        },
        "asic": {},
        "highlight": {
          "type": "string"
        }
      }
    },
    "andOperator": {
      "title": "andOperator",
      "description": "Require all items",
      "type": "object",
      "properties": {
        "andOperator": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "andOperator"
      ]
    },
    "orOperator": {
      "title": "orOperator",
      "description": "Require one of items",
      "type": "object",
      "properties": {
        "orOperator": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "orOperator"
      ]
    },
    "notOperator": {
      "title": "notOperator",
      "description": "Require item to not exist",
      "type": "object",
      "properties": {
        "notOperator": {}
      },
      "required": [
        "notOperator"
      ]
    },
    "tag_properties-permissions": {
      "title": "tag_properties-permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "share_properties-permissions": {
      "title": "share_properties-permissions",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "publicShareRole": {
      "title": "publicShareRole",
      "type": "string",
      "enum": [
        "READ",
        "PREVIEW"
      ]
    },
    "auditTrailFileEntryBase": {
      "title": "auditTrailFileEntryBase",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Entity2": {
      "title": "Entity2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "$ref": "#/definitions/type"
        }
      }
    },
    "Audittrailtag": {
      "title": "Audittrailtag",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Tag UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Tag name",
          "example": "myTag",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Audittrailperson": {
      "title": "Audittrailperson",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Person UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Person name",
          "example": "Johnny Smith",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "auditTrailShare": {
      "title": "auditTrailShare",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Share UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "groupUid": {
          "description": "Group UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "groupName": {
          "description": "Group name",
          "example": "My group",
          "type": "string"
        },
        "userUid": {
          "description": "User UID",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "description": "Email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "public": {
          "type": "boolean"
        }
      }
    },
    "Audittrailfilemeta": {
      "title": "Audittrailfilemeta",
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "metaUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "type": {
          "$ref": "#/definitions/metaType1"
        },
        "multiple": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "value": {},
        "decimalScale": {
          "type": "integer",
          "minimum": 1.0,
          "maximum": 18.0,
          "format": "int32"
        }
      },
      "required": [
        "uid",
        "metaUid",
        "type",
        "multiple",
        "name",
        "value"
      ]
    },
    "Audittrailfileapproval": {
      "title": "Audittrailfileapproval",
      "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses",
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/Resolutionmethod"
        },
        "name": {
          "type": "string"
        },
        "versionUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "resolutionUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "inviteUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "invitee": {
          "type": "string",
          "maxLength": 255
        },
        "inviteeUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "text": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "auditTrailFolderEntryBase": {
      "title": "auditTrailFolderEntryBase",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Audittrailfoldermeta": {
      "title": "Audittrailfoldermeta",
      "type": "object",
      "properties": {
        "uid": {
          "description": "FolderMeta UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "metaUid": {
          "description": "Meta UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Meta name",
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "isRequired": {
          "example": false,
          "type": "boolean"
        },
        "isRecursive": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Audittrailfolderautomatedworkflow": {
      "title": "Audittrailfolderautomatedworkflow",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status5"
            },
            {
              "example": "active"
            }
          ]
        },
        "isRecursive": {
          "example": true,
          "type": "boolean"
        },
        "type": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Type8"
            },
            {
              "example": "parallel"
            }
          ]
        },
        "text": {
          "type": "string",
          "maxLength": 500
        }
      }
    },
    "Audittrailautomatedfilenumbering": {
      "title": "Audittrailautomatedfilenumbering",
      "type": "object",
      "properties": {
        "scheme": {
          "example": "Document 1.{number}",
          "type": "string"
        },
        "isRecursive": {
          "example": true,
          "type": "boolean"
        },
        "name": {
          "example": "This is my custom numbering",
          "type": "string",
          "maxLength": 255
        },
        "resetType": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ResetType"
            },
            {
              "example": "yearly"
            }
          ]
        },
        "resetMonth": {
          "description": "Used with yearly reset",
          "example": 1,
          "type": "integer",
          "minimum": 1.0,
          "maximum": 12.0,
          "format": "int32"
        },
        "resetDay": {
          "description": "0 -> last day of month\nUsed with yearly and monthly reset",
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 31.0,
          "format": "int32"
        },
        "resetWeekday": {
          "description": "Used with weekly reset",
          "type": "integer",
          "minimum": 1.0,
          "maximum": 7.0,
          "format": "int32"
        },
        "number": {
          "description": "Next number to be used",
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "applyFiles": {
          "description": "Apply numbering to files",
          "example": true,
          "type": "boolean"
        },
        "applyLinks": {
          "description": "Apply numbering to links",
          "example": true,
          "type": "boolean"
        },
        "applyFolders": {
          "description": "Apply numbering to folders",
          "example": true,
          "type": "boolean"
        }
      }
    },
    "auditTrailAccountEntryBase": {
      "title": "auditTrailAccountEntryBase",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Audittrailmeta": {
      "title": "Audittrailmeta",
      "type": "object",
      "properties": {
        "metaUid": {
          "example": "abcdefghij",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "type": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/metaType1"
            },
            {
              "description": "Meta type",
              "default": "string"
            }
          ]
        },
        "multiple": {
          "description": "Meta multiple",
          "example": false,
          "type": "boolean"
        },
        "name": {
          "example": "Owner",
          "type": "string"
        },
        "description": {
          "example": "Owner of the file",
          "type": "string"
        }
      }
    },
    "Audittrailuser": {
      "title": "Audittrailuser",
      "type": "object",
      "properties": {
        "uid": {
          "description": "User UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "description": "User email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Audittrailgroup": {
      "title": "Audittrailgroup",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Group UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Group name",
          "example": "My group",
          "type": "string"
        },
        "oldName": {
          "type": "string"
        }
      }
    },
    "Audittrailgroupuser": {
      "title": "Audittrailgroupuser",
      "type": "object",
      "properties": {
        "uid": {
          "description": "User UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "description": "User email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "groupUid": {
          "description": "Group UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "groupName": {
          "description": "Group name",
          "example": "My group",
          "type": "string"
        }
      }
    },
    "Audittrailgroupuser1": {
      "title": "Audittrailgroupuser1",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Child group UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Child group name",
          "example": "My group",
          "type": "string"
        },
        "groupUid": {
          "description": "Group UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "groupName": {
          "description": "Group name",
          "example": "My group",
          "type": "string"
        }
      }
    },
    "Fileentries": {
      "title": "Fileentries",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "event": {
          "type": "string",
          "default": "fileNew"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "type": "string",
          "maxLength": 4,
          "pattern": "^[a-zA-Z0-9]+$"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Data18"
            },
            {
              "description": "Either source or target can be null, in which case it was or became a section"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "accountUid",
        "entityUid",
        "event",
        "time",
        "requestKey",
        "type",
        "data"
      ]
    },
    "resolution-invite": {
      "title": "resolution-invite",
      "type": "object",
      "properties": {
        "order": {
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "email": {
          "type": "string"
        },
        "userUid": {
          "type": "string",
          "pattern": "[a-zA-Z0-9_-]{10}"
        },
        "groupUid": {
          "type": "string",
          "pattern": "[a-zA-Z0-9_-]{10}"
        }
      },
      "required": [
        "email",
        "userUid",
        "groupUid"
      ]
    },
    "resolution-create": {
      "title": "resolution-create",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "invites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resolution-invite"
          },
          "minItems": 1
        },
        "method": {
          "$ref": "#/definitions/Resolutionmethod"
        },
        "note": {
          "type": "string"
        },
        "showMeta": {
          "type": "boolean"
        },
        "showRelatedEntities": {
          "type": "boolean"
        },
        "timeoutTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "type",
        "method"
      ]
    },
    "resolution-update": {
      "title": "resolution-update",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "note": {
          "type": "string"
        },
        "showMeta": {
          "type": "boolean"
        },
        "showRelatedEntities": {
          "type": "boolean"
        },
        "timeoutTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Resolutioninvite1": {
      "title": "Resolutioninvite1",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "order": {
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "email": {
          "description": "User email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "userUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "delegateUserUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "status": {
          "$ref": "#/definitions/Status6"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Resolutioninvite(withexpandedfields)": {
      "title": "Resolutioninvite(withexpandedfields)",
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "delegateUser": {
          "$ref": "#/definitions/Otheruser"
        }
      }
    },
    "Resolutioninvite(withexpandedfields)2": {
      "title": "Resolutioninvite(withexpandedfields)2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "order": {
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "email": {
          "description": "User email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "userUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "delegateUserUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "status": {
          "$ref": "#/definitions/Status6"
        },
        "createdAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updatedAt": {
          "description": "UNIX timestamp",
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "delegateUser": {
          "$ref": "#/definitions/Otheruser"
        }
      }
    },
    "invite-update": {
      "title": "invite-update",
      "type": "object",
      "properties": {
        "order": {
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        }
      }
    },
    "workflow-create": {
      "title": "workflow-create",
      "type": "object",
      "properties": {
        "entityUid": {
          "type": "string",
          "pattern": "[a-zA-Z0-9_-]{10}"
        },
        "isActive": {
          "type": "boolean"
        },
        "isRecursive": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "steps": {
          "type": "array",
          "items": {},
          "minItems": 1
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workflow-trigger-create"
          }
        }
      }
    },
    "workflow-update": {
      "title": "workflow-update",
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean"
        },
        "isRecursive": {
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "maxLength": 255
        },
        "steps": {
          "type": "array",
          "items": {},
          "minItems": 1
        }
      }
    },
    "workflow-version-create": {
      "title": "workflow-version-create",
      "type": "object",
      "properties": {
        "steps": {
          "type": "array",
          "items": {},
          "minItems": 1
        }
      },
      "required": [
        "steps"
      ]
    },
    "workflow-version-update": {
      "title": "workflow-version-update",
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean"
        }
      }
    },
    "workflow-trigger-create": {
      "title": "workflow-trigger-create",
      "type": "object",
      "properties": {
        "condition": {
          "type": "array",
          "items": {}
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workflowtriggerevent"
          },
          "minItems": 1
        }
      },
      "required": [
        "events"
      ]
    },
    "workflow-trigger-update": {
      "title": "workflow-trigger-update",
      "type": "object",
      "properties": {
        "condition": {
          "type": "array",
          "items": {}
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workflowtriggerevent"
          },
          "minItems": 1
        }
      }
    },
    "400-badRequest1": {
      "title": "400-badRequest1",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Name2"
            },
            {
              "description": "Error name"
            }
          ]
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status9"
            },
            {
              "description": "Error status code"
            }
          ]
        }
      }
    },
    "401-unauthorized1": {
      "title": "401-unauthorized1",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Name"
            },
            {
              "description": "Error name"
            }
          ]
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status7"
            },
            {
              "description": "Error status code"
            }
          ]
        }
      }
    },
    "403-forbidden1": {
      "title": "403-forbidden1",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Name4"
            },
            {
              "description": "Error name"
            }
          ]
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status11"
            },
            {
              "description": "Error status code"
            }
          ]
        }
      }
    },
    "404-notFound1": {
      "title": "404-notFound1",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Name3"
            },
            {
              "description": "Error name"
            }
          ]
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status10"
            },
            {
              "description": "Error status code"
            }
          ]
        }
      }
    },
    "409-conflict1": {
      "title": "409-conflict1",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Name5"
            },
            {
              "description": "Error name"
            }
          ]
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status12"
            },
            {
              "description": "Error status code"
            }
          ]
        }
      }
    },
    "422-unprocessableEntity1": {
      "title": "422-unprocessableEntity1",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Name1"
            },
            {
              "description": "Error name"
            }
          ]
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status8"
            },
            {
              "description": "Error status code"
            }
          ]
        }
      }
    },
    "500-serverError1": {
      "title": "500-serverError1",
      "type": "object",
      "properties": {
        "name": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Name6"
            },
            {
              "description": "Error name"
            }
          ]
        },
        "message": {
          "description": "Error message",
          "example": "This is an error message explaining the issue",
          "type": "string"
        },
        "code": {
          "description": "Not used",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status13"
            },
            {
              "description": "Error status code"
            }
          ]
        }
      }
    },
    "Accountcreated": {
      "title": "Accountcreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountNew"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Accountdeleted": {
      "title": "Accountdeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Accountdownloaded": {
      "title": "Accountdownloaded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountDownload"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Accountinboxtoggled": {
      "title": "Accountinboxtoggled",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountInbox"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Accountindexingchanged": {
      "title": "Accountindexingchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountIndexing"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AccountOCRlanguagechanged": {
      "title": "AccountOCRlanguagechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountLanguage"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": "English",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Accountrenamed": {
      "title": "Accountrenamed",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountName"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": "New account name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Accountsectionsreordered": {
      "title": "Accountsectionsreordered",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountSectionOrder"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Accountshared": {
      "title": "Accountshared",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "shareNew"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Accountteamfoldertoggled": {
      "title": "Accountteamfoldertoggled",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamFolder"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Accountwatermarkingtoggled": {
      "title": "Accountwatermarkingtoggled",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountWatermarking"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "action": {
      "title": "action",
      "type": "string",
      "enum": [
        "delete",
        "purge",
        "archive"
      ]
    },
    "Action3": {
      "title": "Action3",
      "type": "string",
      "enum": [
        "activate"
      ]
    },
    "Activatemail-inaddress": {
      "title": "Activatemail-inaddress",
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/Action3"
        }
      }
    },
    "Activatedmail-inaddress": {
      "title": "Activatedmail-inaddress",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderEmailActivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Data15"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Active": {
      "title": "Active",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status15"
            },
            {
              "description": "Unpacking currently active"
            }
          ]
        },
        "text": {
          "$ref": "#/definitions/Text2"
        },
        "progress": {
          "type": "number",
          "format": "double"
        },
        "progressMax": {
          "type": "number",
          "format": "double"
        },
        "currentPath": {
          "type": "string"
        }
      }
    },
    "AddRemindersRequest": {
      "title": "AddRemindersRequest",
      "type": "object",
      "properties": {
        "content": {
          "example": "Hello",
          "type": "string",
          "maxLength": 65535
        },
        "remindAt": {
          "description": "Unix timestamp",
          "example": "1537177837",
          "type": "string"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string"
        },
        "groupUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "content",
        "remindAt",
        "email",
        "groupUid"
      ]
    },
    "ApprovalStatus": {
      "title": "ApprovalStatus",
      "type": "string",
      "enum": [
        "active",
        "inProgress",
        "approved",
        "rejected",
        "deleted"
      ]
    },
    "Archiveuncompressed": {
      "title": "Archiveuncompressed",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderUncompress"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": "Archive name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Archiveunpack2": {
      "title": "Archiveunpack2",
      "type": "object",
      "properties": {
        "key": {
          "description": "Unpack key, check status from [`GET /accounts/{accountUid}/files/unpack-status/{key}`](#tag/File/operation/getUnpackStatus)",
          "example": "GpW5kHBr",
          "type": "string"
        }
      }
    },
    "AutomatedFileNumberingdisabled": {
      "title": "AutomatedFileNumberingdisabled",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "numberingInherit"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "AutomatedFileNumberingenabled": {
      "title": "AutomatedFileNumberingenabled",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "numberingActivate"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedFileNumberingnamechanged": {
      "title": "AutomatedFileNumberingnamechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "numberingName"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedFileNumberingnextnumberchanged": {
      "title": "AutomatedFileNumberingnextnumberchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "numberingNumber"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedFileNumberingresetchanged": {
      "title": "AutomatedFileNumberingresetchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "numberingReset"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedFileNumberingschemechanged": {
      "title": "AutomatedFileNumberingschemechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "numberingScheme"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingactivated": {
      "title": "AutomatedNumberingactivated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingActivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingdeactivated": {
      "title": "AutomatedNumberingdeactivated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingDeactivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberinginclusionoffileschanged": {
      "title": "AutomatedNumberinginclusionoffileschanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingApplyFiles"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberinginclusionoffolderschanged": {
      "title": "AutomatedNumberinginclusionoffolderschanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingApplyFolders"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberinginclusionoflinkschanged": {
      "title": "AutomatedNumberinginclusionoflinkschanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingApplyLinks"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingnamechanged": {
      "title": "AutomatedNumberingnamechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingName"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingnextnumberchanged": {
      "title": "AutomatedNumberingnextnumberchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingNumber"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingrecursionchanged": {
      "title": "AutomatedNumberingrecursionchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingRecursive"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingresetchanged": {
      "title": "AutomatedNumberingresetchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingReset"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingschemechanged": {
      "title": "AutomatedNumberingschemechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingScheme"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailautomatedfilenumbering"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "AutomatedNumberingsettoinherit": {
      "title": "AutomatedNumberingsettoinherit",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "numberingInherit"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Boolean": {
      "title": "Boolean",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator9"
        },
        "value": {
          "type": "boolean"
        }
      },
      "required": [
        "uid"
      ]
    },
    "Byemail": {
      "title": "Byemail",
      "type": "object",
      "properties": {
        "email": {
          "example": "newMember@foo.bar",
          "type": "string"
        }
      },
      "required": [
        "email"
      ]
    },
    "BygroupUid": {
      "title": "BygroupUid",
      "type": "object",
      "properties": {
        "groupUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "groupUid"
      ]
    },
    "Byname": {
      "title": "Byname",
      "type": "object",
      "properties": {
        "name": {
          "example": "Johnny Smith",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "name"
      ]
    },
    "Byuid": {
      "title": "Byuid",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "uid"
      ]
    },
    "ByuserUid": {
      "title": "ByuserUid",
      "type": "object",
      "properties": {
        "userUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "userUid",
        "email"
      ]
    },
    "ByuserUid1": {
      "title": "ByuserUid1",
      "type": "object",
      "properties": {
        "userUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "userUid"
      ]
    },
    "Cause": {
      "title": "Cause",
      "description": "Used for marking actions performed by background processes",
      "type": "string",
      "enum": [
        "retention"
      ]
    },
    "Conflictingfile": {
      "title": "Conflictingfile",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status19"
            },
            {
              "description": "Found a conflicting file"
            }
          ]
        },
        "text": {
          "$ref": "#/definitions/Text6"
        },
        "progress": {
          "type": "string"
        },
        "progressMax": {
          "type": "string"
        },
        "currentPath": {
          "example": "./someFile.txt",
          "type": "string"
        }
      }
    },
    "Create": {
      "title": "Create",
      "type": "object",
      "properties": {
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "CreatewithURLs": {
      "title": "CreatewithURLs",
      "type": "object",
      "properties": {
        "uploadId": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "urls": {
          "description": "List of URLs, same as from the \"part\" action",
          "type": "object"
        }
      }
    },
    "Createdmail-inaddress": {
      "title": "Createdmail-inaddress",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderEmailNew"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Data15"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "createdFrom": {
      "title": "createdFrom",
      "type": "object",
      "properties": {
        "createdFrom": {
          "description": "From upload date"
        }
      },
      "required": [
        "createdFrom"
      ]
    },
    "createdTo": {
      "title": "createdTo",
      "type": "object",
      "properties": {
        "createdTo": {
          "description": "To upload date"
        }
      },
      "required": [
        "createdTo"
      ]
    },
    "Data": {
      "title": "Data",
      "type": "object",
      "properties": {
        "fileVersionUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Data2": {
      "title": "Data2",
      "type": "object",
      "properties": {
        "uid": {
          "description": "FileVersion UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "File name",
          "example": "sample.txt",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Data5": {
      "title": "Data5",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Item UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Item name",
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "type": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/type6"
            },
            {
              "description": "Item type"
            }
          ]
        }
      }
    },
    "Data7": {
      "title": "Data7",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/Sourcefolder"
        },
        "target": {
          "$ref": "#/definitions/Targetfolder"
        }
      }
    },
    "Data8": {
      "title": "Data8",
      "type": "object",
      "properties": {
        "end": {
          "description": "null value for both end and action results in forced infinite retention",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "$ref": "#/definitions/action"
        },
        "custom": {
          "description": "Indicates whether the retentionEnd is overridden from the default",
          "readOnly": true,
          "type": "boolean"
        },
        "target": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "Data9": {
      "title": "Data9",
      "description": "Either source or target can be null, in which case it was or became a section",
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/Sourcefolder"
        },
        "target": {
          "$ref": "#/definitions/Targetfolder"
        }
      }
    },
    "Data10": {
      "title": "Data10",
      "description": "Target can be null, in which case it became a section",
      "type": "object",
      "properties": {
        "folder": {
          "$ref": "#/definitions/Folderthatmoved"
        },
        "target": {
          "$ref": "#/definitions/Targetfolder"
        }
      }
    },
    "Data11": {
      "title": "Data11",
      "description": "Source can be null, in which case it was a section",
      "type": "object",
      "properties": {
        "folder": {
          "$ref": "#/definitions/Folderthatmoved"
        },
        "source": {
          "$ref": "#/definitions/Sourcefolder"
        }
      }
    },
    "Data12": {
      "title": "Data12",
      "type": "object",
      "properties": {
        "file": {
          "$ref": "#/definitions/File4"
        },
        "folder": {
          "$ref": "#/definitions/Folder1"
        }
      }
    },
    "Data14": {
      "title": "Data14",
      "type": "object",
      "properties": {
        "time": {
          "description": "Retention time order can matter as the durations are processed in the order they are stored  \nFor example:  \n1m5d -> time uploaded + 1 month + 5 days  \n5d1m -> time uploaded + 5 days + 1 month  \nFormat accepts input with spaces between durations (accepts both \"1m5d\" and \"1m 5d\" are valid), excess whitespace is trimmed automatically  \nSet time to 0 length string and action to null to force infinite retention",
          "example": "1m5d",
          "type": "string",
          "maxLength": 30
        },
        "action": {
          "$ref": "#/definitions/action"
        },
        "isRecursive": {
          "type": "boolean"
        },
        "target": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "keepStructure": {
          "description": "Keep folder structure on archiving with isRecursive active",
          "type": "boolean"
        }
      }
    },
    "Data15": {
      "title": "Data15",
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "Data18": {
      "title": "Data18",
      "description": "Either source or target can be null, in which case it was or became a section",
      "type": "object",
      "properties": {
        "uid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "File name",
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "source": {
          "$ref": "#/definitions/Sourcefolder"
        },
        "target": {
          "$ref": "#/definitions/Targetfolder"
        }
      }
    },
    "Date": {
      "title": "Date",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator4"
        },
        "value": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "uid"
      ]
    },
    "Datechanged": {
      "title": "Datechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileDate"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "dateDueFrom": {
      "title": "dateDueFrom",
      "type": "object",
      "properties": {
        "dateDueFrom": {
          "description": "From date due"
        }
      },
      "required": [
        "dateDueFrom"
      ]
    },
    "dateDueTo": {
      "title": "dateDueTo",
      "type": "object",
      "properties": {
        "dateDueTo": {
          "description": "To date due"
        }
      },
      "required": [
        "dateDueTo"
      ]
    },
    "dateFrom": {
      "title": "dateFrom",
      "type": "object",
      "properties": {
        "dateFrom": {
          "description": "From date"
        }
      },
      "required": [
        "dateFrom"
      ]
    },
    "dateOrCreatedFrom": {
      "title": "dateOrCreatedFrom",
      "type": "object",
      "properties": {
        "dateOrCreatedFrom": {
          "description": "From date"
        }
      },
      "required": [
        "dateOrCreatedFrom"
      ]
    },
    "dateOrCreatedTo": {
      "title": "dateOrCreatedTo",
      "type": "object",
      "properties": {
        "dateOrCreatedTo": {
          "description": "To date"
        }
      },
      "required": [
        "dateOrCreatedTo"
      ]
    },
    "Datetime": {
      "title": "Datetime",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator4"
        },
        "value": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "uid"
      ]
    },
    "dateTo": {
      "title": "dateTo",
      "type": "object",
      "properties": {
        "dateTo": {
          "description": "To date"
        }
      },
      "required": [
        "dateTo"
      ]
    },
    "Deactivatemail-inaddress": {
      "title": "Deactivatemail-inaddress",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "deactivate"
        }
      },
      "required": [
        "action"
      ]
    },
    "Deactivatedmail-inaddress": {
      "title": "Deactivatedmail-inaddress",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderEmailDeactivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Data15"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Decimal": {
      "title": "Decimal",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator4"
        },
        "value": {
          "example": "42.50",
          "type": "string"
        }
      }
    },
    "Duedatechanged": {
      "title": "Duedatechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileDueDate"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Duplicatedfile": {
      "title": "Duplicatedfile",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfileDuplicate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Duplicatedsubfolder": {
      "title": "Duplicatedsubfolder",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfolderDuplicate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "E-mail": {
      "title": "E-mail",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator2"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Endpoint": {
      "title": "Endpoint",
      "type": "string",
      "enum": [
        "frontend",
        "api"
      ]
    },
    "Exists": {
      "title": "Exists",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator1"
        }
      },
      "required": [
        "uid"
      ]
    },
    "expand": {
      "title": "expand",
      "type": "string",
      "enum": [
        "dateFormat",
        "timeFormat"
      ]
    },
    "expand1": {
      "title": "expand1",
      "type": "string",
      "enum": [
        "remoteUsername",
        "status"
      ]
    },
    "expand2": {
      "title": "expand2",
      "type": "string",
      "enum": [
        "shares",
        "stats"
      ]
    },
    "expand3": {
      "title": "expand3",
      "type": "string",
      "enum": [
        "property1",
        "property2",
        "property3"
      ]
    },
    "expand4": {
      "title": "expand4",
      "type": "string",
      "enum": [
        "entity",
        "account",
        "tag"
      ]
    },
    "expand5": {
      "title": "expand5",
      "type": "string",
      "enum": [
        "parent",
        "meta",
        "people",
        "tags",
        "reminders",
        "shares",
        "fileRelations",
        "version"
      ]
    },
    "expand6": {
      "title": "expand6",
      "type": "string",
      "enum": [
        "parent",
        "meta",
        "shares",
        "extra",
        "sectionOrder",
        "inboxFolder",
        "teamFolder",
        "folderStats",
        "sort",
        "viewType"
      ]
    },
    "expand7": {
      "title": "expand7",
      "type": "string",
      "enum": [
        "parent",
        "meta",
        "people",
        "tags",
        "reminders",
        "shares",
        "fileRelations"
      ]
    },
    "expand8": {
      "title": "expand8",
      "type": "string",
      "enum": [
        "users",
        "groups",
        "shares"
      ]
    },
    "expand9": {
      "title": "expand9",
      "type": "string",
      "enum": [
        "entity",
        "folder",
        "file",
        "link",
        "asic",
        "highlight"
      ]
    },
    "expand10": {
      "title": "expand10",
      "type": "string",
      "enum": [
        "activeUser"
      ]
    },
    "extension": {
      "title": "extension",
      "type": "object",
      "properties": {
        "extension": {
          "description": "Extension"
        }
      },
      "required": [
        "extension"
      ]
    },
    "Extra": {
      "title": "Extra",
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "maxLength": 255
        },
        "note": {
          "type": "string",
          "maxLength": 65535
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Failure": {
      "title": "Failure",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status16"
            },
            {
              "description": "Unpacking failed"
            }
          ]
        },
        "text": {
          "$ref": "#/definitions/Text3"
        },
        "progress": {
          "type": "string"
        },
        "progressMax": {
          "type": "string"
        },
        "currentPath": {
          "type": "string"
        }
      }
    },
    "Field": {
      "title": "Field",
      "type": "string",
      "enum": [
        "name",
        "tags",
        "date",
        "due_date",
        "created_at",
        "updated_at",
        "signees",
        "id",
        "size",
        "mail_sender",
        "retention_end",
        "language",
        "number",
        "note",
        "creator",
        "extension",
        "approved_at",
        "signed_at",
        "acknowledged_at"
      ]
    },
    "Field1": {
      "title": "Field1",
      "type": "string",
      "enum": [
        "score",
        "id",
        "uid",
        "name",
        "size",
        "number",
        "date",
        "dueDate",
        "mailSender",
        "mailSenderName",
        "mailSubject",
        "extension",
        "mimeType",
        "address",
        "meta:<uid>"
      ]
    },
    "FileApprovalapproved": {
      "title": "FileApprovalapproved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileResolutionApproved"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Audittrailfileapproval"
            },
            {
              "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileApprovalcancelled": {
      "title": "FileApprovalcancelled",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileResolutionDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Audittrailfileapproval"
            },
            {
              "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileApprovalrejected": {
      "title": "FileApprovalrejected",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileResolutionRejected"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Audittrailfileapproval"
            },
            {
              "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileApprovalresponseapproved": {
      "title": "FileApprovalresponseapproved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileResolutionResponseApproved"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Audittrailfileapproval"
            },
            {
              "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileApprovalresponserejected": {
      "title": "FileApprovalresponserejected",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileResolutionResponseRejected"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Audittrailfileapproval"
            },
            {
              "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileApprovalstarted": {
      "title": "FileApprovalstarted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileResolutionNew"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Audittrailfileapproval"
            },
            {
              "description": "inviteId, invitee, inviteeId and text properties are only filled for approval responses"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filedeleted": {
      "title": "Filedeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Filedeleted1": {
      "title": "Filedeleted1",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfileDelete"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filedownloaded": {
      "title": "Filedownloaded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileDownload"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Fileduplicated": {
      "title": "Fileduplicated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileDuplicate"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filelocked": {
      "title": "Filelocked",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileLock"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Filemoved": {
      "title": "Filemoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileMove"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data7"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filemovedaway": {
      "title": "Filemovedaway",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfileMove"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Data12"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filemovedin": {
      "title": "Filemovedin",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfileMoveTarget"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Data12"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filenumberchanged": {
      "title": "Filenumberchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileNumber"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileOCRlanguagechanged": {
      "title": "FileOCRlanguagechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileLanguage"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "example": "English",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Fileopenedforonlineediting": {
      "title": "Fileopenedforonlineediting",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileOnlineEdit"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Fileopenedforonlineviewing": {
      "title": "Fileopenedforonlineviewing",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileOnlineView"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Filepreviewdownloaded": {
      "title": "Filepreviewdownloaded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "filePreviewDownload"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filerenamed": {
      "title": "Filerenamed",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileName"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "example": "New file name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Fileretentionchanged": {
      "title": "Fileretentionchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileRetentionEnd"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data8"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Fileretentionchanged1": {
      "title": "Fileretentionchanged1",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileRetentionEnd"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Fileshared": {
      "title": "Fileshared",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "shareNew"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Filetoolarge": {
      "title": "Filetoolarge",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status17"
            },
            {
              "description": "File inside the archive is too large to unpack"
            }
          ]
        },
        "text": {
          "$ref": "#/definitions/Text4"
        },
        "progress": {
          "type": "string"
        },
        "progressMax": {
          "type": "string"
        },
        "currentPath": {
          "example": "./someFile.txt",
          "type": "string"
        }
      }
    },
    "Fileunlocked": {
      "title": "Fileunlocked",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileUnlock"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Fileuploaded": {
      "title": "Fileuploaded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileNew"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "File4": {
      "title": "File4",
      "type": "object",
      "properties": {
        "uid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "File name",
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "FileMetacreated": {
      "title": "FileMetacreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileMetaRequired"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Audittrailfilemeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileMetadeleted": {
      "title": "FileMetadeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileMetaDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Audittrailfilemeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FileMetavaluechanged": {
      "title": "FileMetavaluechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileMetaValue"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Audittrailfilemeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "filterItem": {
      "title": "filterItem",
      "type": "object",
      "properties": {
        "tag": {
          "description": "Tag"
        }
      },
      "required": [
        "tag"
      ]
    },
    "filterItem1": {
      "title": "filterItem1",
      "type": "object",
      "properties": {
        "person": {
          "description": "Person"
        }
      },
      "required": [
        "person"
      ]
    },
    "filterItem2": {
      "title": "filterItem2",
      "type": "object",
      "properties": {
        "number": {
          "description": "Number",
          "type": "string"
        },
        "operator": {
          "$ref": "#/definitions/Operator13"
        }
      },
      "required": [
        "number"
      ]
    },
    "FolderAutomatedWorkflowactivated": {
      "title": "FolderAutomatedWorkflowactivated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderResolutionActivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfolderautomatedworkflow"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderAutomatedWorkflowdeactivated": {
      "title": "FolderAutomatedWorkflowdeactivated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderResolutionDeactivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfolderautomatedworkflow"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderAutomatedWorkflowmethodchanged": {
      "title": "FolderAutomatedWorkflowmethodchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderResolutionMethod"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfolderautomatedworkflow"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderAutomatedWorkflowrecursionchanged": {
      "title": "FolderAutomatedWorkflowrecursionchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderResolutionRecursive"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfolderautomatedworkflow"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderAutomatedWorkflowsettoinherit": {
      "title": "FolderAutomatedWorkflowsettoinherit",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderResolutionInherit"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "FolderAutomatedWorkflowtextchanged": {
      "title": "FolderAutomatedWorkflowtextchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderResolutionText"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfolderautomatedworkflow"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderAutomatedWorkflowtypechanged": {
      "title": "FolderAutomatedWorkflowtypechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderResolutionType"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfolderautomatedworkflow"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Foldercreated": {
      "title": "Foldercreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderNew"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Folderdeleted": {
      "title": "Folderdeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderDelete"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Folderdownloaded": {
      "title": "Folderdownloaded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderDownload"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Folderduplicated": {
      "title": "Folderduplicated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderDuplicate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Foldermoved": {
      "title": "Foldermoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderMove"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Data9"
            },
            {
              "description": "Either source or target can be null, in which case it was or became a section"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderOCRlanguagechanged": {
      "title": "FolderOCRlanguagechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderLanguage"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": "English",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Folderrename": {
      "title": "Folderrename",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderName"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "example": "New folder name",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Folderretentionchanged": {
      "title": "Folderretentionchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderRetention"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Data14"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Foldershared": {
      "title": "Foldershared",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "shareNew"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Folderthatmoved": {
      "title": "Folderthatmoved",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Folder name",
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "Foldervisiblecolumnschanged": {
      "title": "Foldervisiblecolumnschanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderVisibleColumns"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Folder1": {
      "title": "Folder1",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Folder name",
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "Folder3": {
      "title": "Folder3",
      "type": "object",
      "properties": {
        "name": {
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "type": "array",
          "items": {},
          "minItems": 3
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "parentUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "name",
        "parentUid"
      ]
    },
    "FolderMetacreated": {
      "title": "FolderMetacreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderMetaNew"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfoldermeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderMetadeleted": {
      "title": "FolderMetadeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderMetaDelete"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfoldermeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderMetarecursivechanged": {
      "title": "FolderMetarecursivechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderMetaRecursive"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfoldermeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "FolderMetarequiredchanged": {
      "title": "FolderMetarequiredchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderMetaRequired"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailfoldermeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Genericaction": {
      "title": "Genericaction",
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        }
      },
      "required": [
        "action"
      ]
    },
    "Groupcreated": {
      "title": "Groupcreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountGroupAdd"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailgroup"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Groupdeleted": {
      "title": "Groupdeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountGroupDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailgroup"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Groupmember(child)added": {
      "title": "Groupmember(child)added",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountGroupChildAdd"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailgroupuser1"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Groupmember(child)removed": {
      "title": "Groupmember(child)removed",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountGroupChildDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailgroupuser1"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Groupmember(user)added": {
      "title": "Groupmember(user)added",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountGroupUserAdd"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailgroupuser"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Groupmember(user)removed": {
      "title": "Groupmember(user)removed",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountGroupUserDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailgroupuser"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Grouprenamed": {
      "title": "Grouprenamed",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountGroupName"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailgroup"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "hasRelations": {
      "title": "hasRelations",
      "type": "object",
      "properties": {
        "hasRelations": {
          "description": "Find files that have or don't have related files set",
          "type": "boolean"
        }
      },
      "required": [
        "hasRelations"
      ]
    },
    "Integer": {
      "title": "Integer",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator4"
        },
        "value": {
          "example": 42,
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "language": {
      "title": "language",
      "type": "object",
      "properties": {
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        }
      },
      "required": [
        "language"
      ]
    },
    "Lockedfile": {
      "title": "Lockedfile",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status20"
            },
            {
              "description": "Found a locked file"
            }
          ]
        },
        "text": {
          "$ref": "#/definitions/Text7"
        },
        "progress": {
          "type": "string"
        },
        "progressMax": {
          "type": "string"
        },
        "currentPath": {
          "example": "./someFile.txt",
          "type": "string"
        }
      }
    },
    "mailContent": {
      "title": "mailContent",
      "type": "object",
      "properties": {
        "mailContent": {
          "description": "Mail Content",
          "type": "string"
        }
      },
      "required": [
        "mailContent"
      ]
    },
    "mailSenderEmail": {
      "title": "mailSenderEmail",
      "type": "object",
      "properties": {
        "mailSenderEmail": {
          "description": "Mail Sender e-mail",
          "type": "string"
        }
      },
      "required": [
        "mailSenderEmail"
      ]
    },
    "mailSenderName": {
      "title": "mailSenderName",
      "type": "object",
      "properties": {
        "mailSenderName": {
          "description": "Mail Sender Name",
          "type": "string"
        }
      },
      "required": [
        "mailSenderName"
      ]
    },
    "mailSubject": {
      "title": "mailSubject",
      "type": "object",
      "properties": {
        "mailSubject": {
          "description": "Mail Subject",
          "type": "string"
        }
      },
      "required": [
        "mailSubject"
      ]
    },
    "Meta": {
      "title": "Meta",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Meta UID",
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Meta name",
          "type": "string"
        }
      }
    },
    "MetaColumn": {
      "title": "MetaColumn",
      "type": "object",
      "properties": {
        "meta": {
          "description": "Meta UID",
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "MetaColumn1": {
      "title": "MetaColumn1",
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/Meta"
        }
      }
    },
    "Metacreated": {
      "title": "Metacreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "metaNew"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailmeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Metadeleted": {
      "title": "Metadeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "metaDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailmeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Metadescriptionchanged": {
      "title": "Metadescriptionchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "metaDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailmeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Metanamechanged": {
      "title": "Metanamechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "metaName"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailmeta"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "meta1": {
      "title": "meta1",
      "type": "object",
      "properties": {
        "meta": {
          "description": "Include meta",
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "meta"
      ]
    },
    "metaType1": {
      "title": "metaType1",
      "description": "Meta type",
      "type": "string",
      "enum": [
        "string",
        "text",
        "integer",
        "float",
        "date",
        "datetime",
        "time",
        "boolean",
        "url",
        "email",
        "select"
      ]
    },
    "Name": {
      "title": "Name",
      "description": "Error name",
      "type": "string",
      "enum": [
        "Unauthorized"
      ]
    },
    "Name1": {
      "title": "Name1",
      "description": "Error name",
      "type": "string",
      "enum": [
        "Unprocessable entity"
      ]
    },
    "Name2": {
      "title": "Name2",
      "description": "Error name",
      "type": "string",
      "enum": [
        "Bad Request"
      ]
    },
    "Name3": {
      "title": "Name3",
      "description": "Error name",
      "type": "string",
      "enum": [
        "Not Found"
      ]
    },
    "Name4": {
      "title": "Name4",
      "description": "Error name",
      "type": "string",
      "enum": [
        "Forbidden"
      ]
    },
    "Name5": {
      "title": "Name5",
      "description": "Error name",
      "type": "string",
      "enum": [
        "Conflict"
      ]
    },
    "Name6": {
      "title": "Name6",
      "description": "Error name",
      "type": "string",
      "enum": [
        "Internal Server Error"
      ]
    },
    "Newfile": {
      "title": "Newfile",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfileNew"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Newsubfolder": {
      "title": "Newsubfolder",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfolderNew"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Notechanged": {
      "title": "Notechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileNote"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "example": "New file note",
          "type": "string"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Operator": {
      "title": "Operator",
      "type": "string",
      "enum": [
        "contains",
        "equals"
      ]
    },
    "Operator1": {
      "title": "Operator1",
      "type": "string",
      "enum": [
        "exists"
      ]
    },
    "Operator2": {
      "title": "Operator2",
      "type": "string",
      "enum": [
        "has",
        "is",
        "prefix",
        "wildcard"
      ]
    },
    "Operator4": {
      "title": "Operator4",
      "type": "string",
      "enum": [
        "is",
        "lt",
        "lte",
        "gt",
        "gte"
      ]
    },
    "Operator9": {
      "title": "Operator9",
      "type": "string",
      "enum": [
        "is"
      ]
    },
    "Operator13": {
      "title": "Operator13",
      "type": "string",
      "enum": [
        "has"
      ]
    },
    "Order": {
      "title": "Order",
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "Otheruser1": {
      "title": "Otheruser1",
      "description": "Indicates that a substitute user performed the action",
      "type": "object",
      "properties": {
        "uid": {
          "description": "User UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "User name",
          "type": "string",
          "maxLength": 255
        },
        "email": {
          "description": "User email",
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        }
      }
    },
    "Outofspace": {
      "title": "Outofspace",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status18"
            },
            {
              "description": "Account does not have enough space to uncompress the archive"
            }
          ]
        },
        "text": {
          "$ref": "#/definitions/Text5"
        },
        "progress": {
          "type": "string"
        },
        "progressMax": {
          "type": "string"
        },
        "currentPath": {
          "type": "string"
        }
      }
    },
    "Params": {
      "title": "Params",
      "type": "object",
      "properties": {
        "destination": {
          "type": "string",
          "pattern": "[a-zA-Z0-9_-]{10}"
        }
      },
      "required": [
        "destination"
      ]
    },
    "Params1": {
      "title": "Params1",
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/Type2"
        },
        "invites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resolution-invite"
          },
          "minItems": 1
        },
        "keepActive": {
          "type": "boolean"
        },
        "method": {
          "$ref": "#/definitions/Resolutionmethod"
        },
        "note": {
          "type": "string"
        },
        "showMeta": {
          "type": "boolean"
        },
        "showRelatedEntities": {
          "type": "boolean"
        },
        "timeout": {}
      },
      "required": [
        "type",
        "invites",
        "method"
      ]
    },
    "Params2": {
      "title": "Params2",
      "type": "object",
      "properties": {
        "invites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resolution-invite"
          },
          "minItems": 1
        },
        "method": {
          "$ref": "#/definitions/Resolutionmethod"
        },
        "timeout": {}
      },
      "required": [
        "invites",
        "method"
      ]
    },
    "Params3": {
      "title": "Params3",
      "type": "object",
      "properties": {
        "method": {
          "$ref": "#/definitions/Resolutionmethod"
        }
      },
      "required": [
        "method"
      ]
    },
    "Params4": {
      "title": "Params4",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount of seconds to delay",
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        }
      },
      "required": [
        "amount"
      ]
    },
    "parentUid": {
      "title": "parentUid",
      "type": "object",
      "properties": {
        "parentUid": {
          "description": "Search from this parent",
          "example": "someUid123",
          "type": "string"
        }
      },
      "required": [
        "parentUid"
      ]
    },
    "Partdata": {
      "title": "Partdata",
      "type": "object",
      "properties": {
        "partNumber": {
          "type": "number",
          "format": "double"
        },
        "contentLength": {
          "type": "number",
          "format": "double"
        },
        "lastModified": {
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Part1": {
      "title": "Part1",
      "type": "object",
      "properties": {
        "url": {
          "description": "Send file data as PUT request to this url",
          "type": "string"
        }
      }
    },
    "Permissions9": {
      "title": "Permissions9",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        },
        "canShare": {
          "example": true,
          "type": "boolean"
        },
        "canUpdateRetention": {
          "example": true,
          "type": "boolean"
        },
        "canAudit": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Permissions10": {
      "title": "Permissions10",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canUpdate": {
          "example": true,
          "type": "boolean"
        },
        "canAddInvites": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Permissions12": {
      "title": "Permissions12",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "Personadded": {
      "title": "Personadded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileSigneeNew"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Audittrailperson"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Personcreated": {
      "title": "Personcreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "signeeNew"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Persondeleted": {
      "title": "Persondeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "signeeDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Personnamechanged": {
      "title": "Personnamechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "signeeName"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Personremoved": {
      "title": "Personremoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileSigneeDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Audittrailperson"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Person2": {
      "title": "Person2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "uid"
      ]
    },
    "properties-sort": {
      "title": "properties-sort",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "#/definitions/Field1"
        },
        "order": {
          "$ref": "#/definitions/Order"
        }
      }
    },
    "query": {
      "title": "query",
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        },
        "queryFilter": {
          "description": "Query filter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/queryFilter"
          }
        }
      },
      "required": [
        "query"
      ]
    },
    "queryFilter": {
      "title": "queryFilter",
      "type": "string",
      "enum": [
        "id",
        "uid",
        "name",
        "meta",
        "tag",
        "person",
        "content",
        "note",
        "number",
        "mailSubject",
        "mailSenderEmail",
        "mailSenderName",
        "mailContent"
      ]
    },
    "Recurrence": {
      "title": "Recurrence",
      "type": "string",
      "enum": [
        "daily",
        "weekly",
        "monthly",
        "quarterly",
        "semi-yearly",
        "yearly"
      ]
    },
    "Relateditemadded": {
      "title": "Relateditemadded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileRelationNew"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data5"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Relateditemremoved": {
      "title": "Relateditemremoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileRelationDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data5"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "relatedUid": {
      "title": "relatedUid",
      "type": "object",
      "properties": {
        "relatedUid": {
          "description": "Return only the ones with specified related file UIDs",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 10,
            "maxLength": 10,
            "pattern": "^[a-zA-Z0-9_-]+$"
          },
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "relatedUid"
      ]
    },
    "Resetmail-inaddress": {
      "title": "Resetmail-inaddress",
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "default": "reset"
        }
      },
      "required": [
        "action"
      ]
    },
    "ResetType": {
      "title": "ResetType",
      "example": "yearly",
      "type": "string",
      "enum": [
        "never",
        "yearly",
        "monthly",
        "weekly",
        "daily"
      ]
    },
    "Resolution1": {
      "title": "Resolution1",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/resolutionStatus"
        },
        "uid": {
          "type": "string",
          "pattern": "[a-zA-Z0-9_-]{10}"
        }
      }
    },
    "Section": {
      "title": "Section",
      "type": "object",
      "properties": {
        "name": {
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "type": "array",
          "items": {},
          "minItems": 3
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Sectioncreated": {
      "title": "Sectioncreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountSectionNew"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sectiondeleted": {
      "title": "Sectiondeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountSectionDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sectionduplicated": {
      "title": "Sectionduplicated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountSectionDuplicate"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Select": {
      "title": "Select",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator9"
        },
        "value": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "Shareactivated": {
      "title": "Shareactivated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "shareActivate"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareactivated1": {
      "title": "Shareactivated1",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "shareActivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareactivated2": {
      "title": "Shareactivated2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "shareActivate"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sharedeactivated": {
      "title": "Sharedeactivated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "shareDeactivate"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sharedeactivated1": {
      "title": "Sharedeactivated1",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "shareDeactivate"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sharedeactivated2": {
      "title": "Sharedeactivated2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "shareDeactivate"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareexpirationchanged": {
      "title": "Shareexpirationchanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "shareExpiration"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareexpirationchanged1": {
      "title": "Shareexpirationchanged1",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "shareExpiration"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareexpirationchanged2": {
      "title": "Shareexpirationchanged2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "shareExpiration"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareremoved": {
      "title": "Shareremoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "shareDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareremoved1": {
      "title": "Shareremoved1",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "shareDelete"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Shareremoved2": {
      "title": "Shareremoved2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "shareDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sharerolechanged": {
      "title": "Sharerolechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "shareRole"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sharerolechanged1": {
      "title": "Sharerolechanged1",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "shareRole"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Sharerolechanged2": {
      "title": "Sharerolechanged2",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "shareRole"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/auditTrailShare"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "sort": {
      "title": "sort",
      "type": "string",
      "enum": [
        "id",
        "-id"
      ]
    },
    "Sourcefolder": {
      "title": "Sourcefolder",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Folder name",
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "Status": {
      "title": "Status",
      "type": "string",
      "enum": [
        "ACTIVE",
        "DEACTIVATED",
        "PENDING",
        "DELETED"
      ]
    },
    "Status1": {
      "title": "Status1",
      "type": "string",
      "enum": [
        "active",
        "inactive",
        "invite",
        "invite-inactive"
      ]
    },
    "Status3": {
      "title": "Status3",
      "type": "string",
      "enum": [
        "preparing",
        "active",
        "inProgress",
        "complete",
        "rejected"
      ]
    },
    "Status4": {
      "title": "Status4",
      "type": "string",
      "enum": [
        "success",
        "active",
        "failure"
      ]
    },
    "Status5": {
      "title": "Status5",
      "example": "active",
      "type": "string",
      "enum": [
        "inherit",
        "active",
        "inactive"
      ]
    },
    "Status6": {
      "title": "Status6",
      "type": "string",
      "enum": [
        "pending",
        "pendingInvite",
        "active",
        "approved",
        "rejected"
      ]
    },
    "Status7": {
      "title": "Status7",
      "description": "Error status code",
      "type": "integer",
      "format": "int32",
      "enum": [
        "401"
      ]
    },
    "Status8": {
      "title": "Status8",
      "description": "Error status code",
      "type": "integer",
      "format": "int32",
      "enum": [
        "422"
      ]
    },
    "Status9": {
      "title": "Status9",
      "description": "Error status code",
      "type": "integer",
      "format": "int32",
      "enum": [
        "400"
      ]
    },
    "Status10": {
      "title": "Status10",
      "description": "Error status code",
      "type": "integer",
      "format": "int32",
      "enum": [
        "404"
      ]
    },
    "Status11": {
      "title": "Status11",
      "description": "Error status code",
      "type": "integer",
      "format": "int32",
      "enum": [
        "403"
      ]
    },
    "Status12": {
      "title": "Status12",
      "description": "Error status code",
      "type": "integer",
      "format": "int32",
      "enum": [
        "409"
      ]
    },
    "Status13": {
      "title": "Status13",
      "description": "Error status code",
      "type": "integer",
      "format": "int32",
      "enum": [
        "500"
      ]
    },
    "Status14": {
      "title": "Status14",
      "description": "Unpacking finished",
      "type": "integer",
      "format": "int32",
      "enum": [
        "0"
      ]
    },
    "Status15": {
      "title": "Status15",
      "description": "Unpacking currently active",
      "type": "integer",
      "format": "int32",
      "enum": [
        "1"
      ]
    },
    "Status16": {
      "title": "Status16",
      "description": "Unpacking failed",
      "type": "integer",
      "format": "int32",
      "enum": [
        "2"
      ]
    },
    "Status17": {
      "title": "Status17",
      "description": "File inside the archive is too large to unpack",
      "type": "integer",
      "format": "int32",
      "enum": [
        "3"
      ]
    },
    "Status18": {
      "title": "Status18",
      "description": "Account does not have enough space to uncompress the archive",
      "type": "integer",
      "format": "int32",
      "enum": [
        "4"
      ]
    },
    "Status19": {
      "title": "Status19",
      "description": "Found a conflicting file",
      "type": "integer",
      "format": "int32",
      "enum": [
        "5"
      ]
    },
    "Status20": {
      "title": "Status20",
      "description": "Found a locked file",
      "type": "integer",
      "format": "int32",
      "enum": [
        "6"
      ]
    },
    "Status21": {
      "title": "Status21",
      "type": "string",
      "enum": [
        "ACTIVE",
        "DEACTIVATED"
      ]
    },
    "String": {
      "title": "String",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator2"
        },
        "value": {
          "example": "meta value",
          "type": "string",
          "minLength": 1,
          "maxLength": 512
        }
      }
    },
    "Subfolderdeleted": {
      "title": "Subfolderdeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfolderDelete"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Entity2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Subfoldermovedaway": {
      "title": "Subfoldermovedaway",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfolderMove"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Data10"
            },
            {
              "description": "Target can be null, in which case it became a section"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Subfoldermovedin": {
      "title": "Subfoldermovedin",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "folder"
        },
        "event": {
          "type": "string",
          "default": "folderSubfolderMoveTarget"
        },
        "entityUid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Data11"
            },
            {
              "description": "Source can be null, in which case it was a section"
            }
          ]
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Success": {
      "title": "Success",
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Status14"
            },
            {
              "description": "Unpacking finished"
            }
          ]
        },
        "text": {
          "$ref": "#/definitions/Text1"
        },
        "progress": {
          "example": 5,
          "type": "number",
          "format": "double"
        },
        "progressMax": {
          "example": 25,
          "type": "number",
          "format": "double"
        },
        "currentPath": {
          "type": "string"
        }
      }
    },
    "Supports": {
      "title": "Supports",
      "type": "object",
      "properties": {
        "versioning": {
          "description": "Indicates whether file support versioning with version, versionUid and previewAvailable",
          "type": "boolean"
        },
        "locking": {
          "description": "Indicates whether file supports locking",
          "type": "boolean"
        }
      }
    },
    "Tagadded": {
      "title": "Tagadded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileTagNew"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Tagcreated": {
      "title": "Tagcreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "tagNew"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Tagdeleted": {
      "title": "Tagdeleted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "tagDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Tagnamechanged": {
      "title": "Tagnamechanged",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "tagName"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Tagremoved": {
      "title": "Tagremoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileTagDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Audittrailtag"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Tag2": {
      "title": "Tag2",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "uid"
      ]
    },
    "Tag3": {
      "title": "Tag3",
      "type": "object",
      "properties": {
        "name": {
          "example": "myTag",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "name"
      ]
    },
    "tagUid": {
      "title": "tagUid",
      "type": "object",
      "properties": {
        "tagUid": {
          "description": "Required tag uid list",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "tagUid"
      ]
    },
    "Targetfolder": {
      "title": "Targetfolder",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Folder UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "name": {
          "description": "Folder name",
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        }
      }
    },
    "Teamuseraccepted": {
      "title": "Teamuseraccepted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserAccept"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Teamuseradoptionaccepted": {
      "title": "Teamuseradoptionaccepted",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserManagedAccept"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Teamuseradoptioninvitation": {
      "title": "Teamuseradoptioninvitation",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserManagedInvite"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailuser"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Teamuseradoptioninvitationremoval": {
      "title": "Teamuseradoptioninvitationremoval",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserManagedInviteDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailuser"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Teamuseradoptionrejected": {
      "title": "Teamuseradoptionrejected",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserManagedReject"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Teamusercreated": {
      "title": "Teamusercreated",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserAdd"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailuser"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Teamuserrejected": {
      "title": "Teamuserrejected",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserReject"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time"
      ]
    },
    "Teamuserremoved": {
      "title": "Teamuserremoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "account"
        },
        "event": {
          "type": "string",
          "default": "accountTeamUserDelete"
        },
        "entityUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "data": {
          "$ref": "#/definitions/Audittrailuser"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Text": {
      "title": "Text",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator2"
        },
        "value": {
          "example": "meta value",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Text1": {
      "title": "Text1",
      "type": "string",
      "enum": [
        "success"
      ]
    },
    "Text2": {
      "title": "Text2",
      "type": "string",
      "enum": [
        "active"
      ]
    },
    "Text3": {
      "title": "Text3",
      "type": "string",
      "enum": [
        "failure"
      ]
    },
    "Text4": {
      "title": "Text4",
      "type": "string",
      "enum": [
        "oversize"
      ]
    },
    "Text5": {
      "title": "Text5",
      "type": "string",
      "enum": [
        "freespace"
      ]
    },
    "Text6": {
      "title": "Text6",
      "type": "string",
      "enum": [
        "conflict"
      ]
    },
    "Text7": {
      "title": "Text7",
      "type": "string",
      "enum": [
        "locked"
      ]
    },
    "Time": {
      "title": "Time",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator4"
        },
        "value": {
          "example": "17:32:28",
          "type": "string"
        }
      },
      "required": [
        "uid"
      ]
    },
    "Type2": {
      "title": "Type2",
      "type": "string",
      "enum": [
        "parallel",
        "serial",
        "custom"
      ]
    },
    "Type4": {
      "title": "Type4",
      "type": "string",
      "enum": [
        "user"
      ]
    },
    "Type5": {
      "title": "Type5",
      "type": "string",
      "enum": [
        "child"
      ]
    },
    "type6": {
      "title": "type6",
      "description": "Item type",
      "type": "string",
      "enum": [
        "folder",
        "file",
        "link"
      ]
    },
    "Type8": {
      "title": "Type8",
      "example": "parallel",
      "type": "string",
      "enum": [
        "parallel",
        "serial"
      ]
    },
    "Unpack": {
      "title": "Unpack",
      "description": "Unpacking options",
      "type": "object",
      "properties": {
        "overwrite": {
          "description": "Overwrite existing files (add new version)",
          "example": false,
          "type": "boolean"
        },
        "newFolder": {
          "description": "Create a new folder for the archive",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "overwrite",
        "newFolder"
      ]
    },
    "URL": {
      "title": "URL",
      "type": "object",
      "properties": {
        "uid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "operator": {
          "$ref": "#/definitions/Operator2"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "UserType": {
      "title": "UserType",
      "type": "string",
      "enum": [
        "private",
        "company"
      ]
    },
    "V2AccountsEntitiesActionDuplicateResponse": {
      "title": "V2AccountsEntitiesActionDuplicateResponse",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest": {
      "title": "V2AccountsEntitiesMetaMetaUidEntityMetaUidRequest",
      "type": "object",
      "properties": {
        "value": {}
      }
    },
    "V2AccountsEntitiesMetaMetaUidRequest": {
      "title": "V2AccountsEntitiesMetaMetaUidRequest",
      "type": "object",
      "properties": {
        "value": {}
      }
    },
    "V2AccountsEntitiesMetaRequest": {
      "title": "V2AccountsEntitiesMetaRequest",
      "type": "object",
      "properties": {
        "metaUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "value": {}
      },
      "required": [
        "metaUid",
        "value"
      ]
    },
    "V2AccountsEntitiesRelatedRequest": {
      "title": "V2AccountsEntitiesRelatedRequest",
      "type": "object",
      "properties": {
        "entityUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "entityUid"
      ]
    },
    "V2AccountsEntitiesRequest": {
      "title": "V2AccountsEntitiesRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "retention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retention"
            },
            {
              "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded"
            }
          ]
        },
        "retentionEnd": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retentionEnd"
            },
            {
              "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
            }
          ]
        },
        "extra": {
          "$ref": "#/definitions/Extra"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "example": 0,
          "type": "integer",
          "minimum": -32768.0,
          "maximum": 32767.0,
          "format": "int32"
        }
      }
    },
    "V2AccountsEntitiesRestoreRequest": {
      "title": "V2AccountsEntitiesRestoreRequest",
      "type": "object",
      "properties": {
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "V2AccountsEntitiesTagsRequest": {
      "title": "V2AccountsEntitiesTagsRequest",
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "tags"
      ]
    },
    "V2AccountsFilesDownloadResponse": {
      "title": "V2AccountsFilesDownloadResponse",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "V2AccountsFilesLockRequest": {
      "title": "V2AccountsFilesLockRequest",
      "type": "object",
      "properties": {
        "time": {
          "description": "When supplied, either a specific end time for lock or null for infinite lock duration",
          "type": "integer",
          "format": "int32"
        },
        "lockId": {
          "type": "string",
          "maxLength": 2048
        }
      }
    },
    "V2AccountsFilesMetaMetaUidFileMetaUidRequest": {
      "title": "V2AccountsFilesMetaMetaUidFileMetaUidRequest",
      "type": "object",
      "properties": {
        "value": {}
      }
    },
    "V2AccountsFilesMetaMetaUidRequest": {
      "title": "V2AccountsFilesMetaMetaUidRequest",
      "type": "object",
      "properties": {
        "value": {}
      }
    },
    "V2AccountsFilesMetaRequest": {
      "title": "V2AccountsFilesMetaRequest",
      "type": "object",
      "properties": {
        "metaUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "value": {}
      },
      "required": [
        "metaUid",
        "value"
      ]
    },
    "V2AccountsFilesPeopleRequest": {
      "title": "V2AccountsFilesPeopleRequest",
      "type": "object",
      "properties": {
        "people": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "people"
      ]
    },
    "V2AccountsFilesPreviewResponse": {
      "title": "V2AccountsFilesPreviewResponse",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "V2AccountsFilesRelatedRequest": {
      "title": "V2AccountsFilesRelatedRequest",
      "type": "object",
      "properties": {
        "fileUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "fileUid"
      ]
    },
    "V2AccountsFilesRequest": {
      "title": "V2AccountsFilesRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "My entity name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "dueDate": {
          "type": "string",
          "format": "date"
        },
        "note": {
          "type": "string",
          "maxLength": 65535
        },
        "number": {
          "type": "string",
          "maxLength": 255
        },
        "versionUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "folderUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "retentionEnd": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retentionEnd"
            },
            {
              "description": "Recycle/permanently delete/archive entity at end time  \nSetting retentionEnd object to null restores the default \"inherit from parent\" setting"
            }
          ]
        }
      }
    },
    "V2AccountsFilesRestoreRequest": {
      "title": "V2AccountsFilesRestoreRequest",
      "type": "object",
      "properties": {
        "folderUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "V2AccountsFilesSharesRequest": {
      "title": "V2AccountsFilesSharesRequest",
      "type": "object",
      "properties": {
        "groupUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "userUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "public": {
          "type": "string",
          "default": "True"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings",
        "public"
      ]
    },
    "V2AccountsFilesTagsRequest": {
      "title": "V2AccountsFilesTagsRequest",
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {}
        }
      },
      "required": [
        "tags"
      ]
    },
    "V2AccountsFilesUnlockRequest": {
      "title": "V2AccountsFilesUnlockRequest",
      "type": "object",
      "properties": {
        "lockId": {
          "type": "string",
          "maxLength": 2048
        }
      }
    },
    "V2AccountsFilesUnpackRequest": {
      "title": "V2AccountsFilesUnpackRequest",
      "type": "object",
      "properties": {
        "overwrite": {
          "description": "Overwrite existing files (add new version)",
          "example": false,
          "type": "boolean"
        },
        "newFolder": {
          "description": "Create a new folder for the archive",
          "example": true,
          "type": "boolean"
        }
      },
      "required": [
        "overwrite",
        "newFolder"
      ]
    },
    "V2AccountsFilesUnpackResponse": {
      "title": "V2AccountsFilesUnpackResponse",
      "type": "object",
      "properties": {
        "key": {
          "example": "GpW5kHBr",
          "type": "string"
        }
      }
    },
    "V2AccountsFilesVersionsFileVersionUidDownloadResponse": {
      "title": "V2AccountsFilesVersionsFileVersionUidDownloadResponse",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "V2AccountsFilesVersionsFileVersionUidPreviewResponse": {
      "title": "V2AccountsFilesVersionsFileVersionUidPreviewResponse",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "V2AccountsFoldersMetaMetaUidRequest": {
      "title": "V2AccountsFoldersMetaMetaUidRequest",
      "type": "object",
      "properties": {
        "isRequired": {
          "example": false,
          "type": "boolean"
        },
        "isRecursive": {
          "example": false,
          "type": "boolean"
        },
        "includeFiles": {
          "example": true,
          "type": "boolean"
        },
        "includeLinks": {
          "example": true,
          "type": "boolean"
        },
        "includeFolders": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsFoldersMetaRequest": {
      "title": "V2AccountsFoldersMetaRequest",
      "type": "object",
      "properties": {
        "metaUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "isRequired": {
          "example": false,
          "type": "boolean"
        },
        "isRecursive": {
          "example": false,
          "type": "boolean"
        },
        "includeFiles": {
          "example": true,
          "type": "boolean"
        },
        "includeLinks": {
          "example": true,
          "type": "boolean"
        },
        "includeFolders": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "metaUid"
      ]
    },
    "V2AccountsFoldersRelatedRequest": {
      "title": "V2AccountsFoldersRelatedRequest",
      "type": "object",
      "properties": {
        "entityUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "entityUid"
      ]
    },
    "V2AccountsFoldersRequest": {
      "title": "V2AccountsFoldersRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "My folder name",
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "visibleColumns": {
          "description": "Array of columns to be shown by the client",
          "type": "array",
          "items": {},
          "minItems": 3
        },
        "retention": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/retention"
            },
            {
              "description": "Recycle/Permanently delete/Archive items after x time, counting from the time uploaded"
            }
          ]
        },
        "extra": {
          "$ref": "#/definitions/Extra"
        },
        "sectionOrder": {
          "description": "User-configurable value for manually ordering sections",
          "example": 0,
          "type": "integer",
          "minimum": -32768.0,
          "maximum": 32767.0,
          "format": "int32"
        },
        "sort": {
          "description": "Column names, prefixed with a dash (`-`) for descending order, separated with a comma",
          "example": "name",
          "type": "string"
        },
        "viewType": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/viewType"
            },
            {
              "description": "View type of a folder listing"
            }
          ]
        }
      }
    },
    "V2AccountsFoldersRestoreRequest": {
      "title": "V2AccountsFoldersRestoreRequest",
      "type": "object",
      "properties": {
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "V2AccountsFoldersSharesRequest": {
      "title": "V2AccountsFoldersSharesRequest",
      "type": "object",
      "properties": {
        "groupUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "userUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/folderShareRole"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "public": {
          "type": "string",
          "default": "True"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings",
        "public"
      ]
    },
    "V2AccountsGroupsRequest": {
      "title": "V2AccountsGroupsRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "My group",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "V2AccountsGroupsUsersUserUidPermissionsResponse": {
      "title": "V2AccountsGroupsUsersUserUidPermissionsResponse",
      "type": "object",
      "properties": {
        "canView": {
          "example": true,
          "type": "boolean"
        },
        "canDelete": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "V2AccountsMetaOptionsOptionUidRequest": {
      "title": "V2AccountsMetaOptionsOptionUidRequest",
      "type": "object",
      "properties": {
        "value": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "order": {
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 65535.0,
          "format": "int32"
        }
      },
      "required": [
        "value"
      ]
    },
    "V2AccountsMetaOptionsRequest": {
      "title": "V2AccountsMetaOptionsRequest",
      "type": "object",
      "properties": {
        "value": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "order": {
          "example": 1,
          "type": "integer",
          "minimum": 0.0,
          "maximum": 65535.0,
          "format": "int32"
        }
      },
      "required": [
        "value"
      ]
    },
    "V2AccountsMetaRequest": {
      "title": "V2AccountsMetaRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "type": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/metaType"
            },
            {
              "default": "string"
            }
          ]
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        }
      },
      "required": [
        "name"
      ]
    },
    "V2AccountsPeopleRequest": {
      "title": "V2AccountsPeopleRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "Johnny Smith",
          "type": "string",
          "maxLength": 255
        }
      },
      "required": [
        "name"
      ]
    },
    "V2AccountsRemindersRequest": {
      "title": "V2AccountsRemindersRequest",
      "type": "object",
      "properties": {
        "email": {
          "example": "someEmail@foo.bar",
          "readOnly": true,
          "type": "string",
          "maxLength": 255
        },
        "groupUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "content": {
          "example": "Hello",
          "type": "string",
          "maxLength": 65535
        },
        "remindAt": {
          "description": "Unix timestamp",
          "example": "1537177837",
          "type": "string"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        }
      }
    },
    "V2AccountsRequest": {
      "title": "V2AccountsRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "Account name",
          "type": "string",
          "maxLength": 255
        },
        "indexing": {
          "example": true,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "V2AccountsSearchEntitiesResponse": {
      "title": "V2AccountsSearchEntitiesResponse",
      "type": "object",
      "properties": {
        "hits": {
          "example": 1,
          "type": "number",
          "format": "double"
        },
        "entities": {
          "type": "array",
          "items": {}
        }
      }
    },
    "V2AccountsSearchFilesResponse": {
      "title": "V2AccountsSearchFilesResponse",
      "type": "object",
      "properties": {
        "hits": {
          "example": 1,
          "type": "number",
          "format": "double"
        },
        "files": {
          "type": "array",
          "items": {}
        }
      }
    },
    "V2AccountsSearchFoldersResponse": {
      "title": "V2AccountsSearchFoldersResponse",
      "type": "object",
      "properties": {
        "hits": {
          "example": 1,
          "type": "number",
          "format": "double"
        },
        "folders": {
          "type": "array",
          "items": {}
        }
      }
    },
    "V2AccountsSearchSimpleResponse": {
      "title": "V2AccountsSearchSimpleResponse",
      "type": "object",
      "properties": {
        "folders": {
          "type": "array",
          "items": {}
        },
        "files": {
          "type": "array",
          "items": {}
        }
      }
    },
    "V2AccountsSharedItemsResponse": {
      "title": "V2AccountsSharedItemsResponse",
      "type": "object",
      "properties": {
        "folders": {
          "readOnly": true,
          "type": "array",
          "items": {}
        },
        "files": {
          "readOnly": true,
          "type": "array",
          "items": {}
        }
      }
    },
    "V2AccountsSharesRequest": {
      "title": "V2AccountsSharesRequest",
      "type": "object",
      "properties": {
        "groupUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "userUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings"
      ]
    },
    "V2AccountsTagsRequest": {
      "title": "V2AccountsTagsRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "myTag",
          "type": "string",
          "maxLength": 255
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "name"
      ]
    },
    "V2AccountsTagsSharesRequest": {
      "title": "V2AccountsTagsSharesRequest",
      "type": "object",
      "properties": {
        "groupUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "userUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "email": {
          "example": "someEmail@foo.bar",
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "groupUid",
        "userUid",
        "email",
        "role",
        "settings"
      ]
    },
    "V2AccountsUnpackCheckRequest": {
      "title": "V2AccountsUnpackCheckRequest",
      "type": "object",
      "properties": {
        "name": {
          "example": "test.zip",
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "V2AccountsUsersRequest": {
      "title": "V2AccountsUsersRequest",
      "type": "object",
      "properties": {
        "position": {
          "type": "string",
          "maxLength": 250
        }
      }
    },
    "V2UserPermissionsResponse": {
      "title": "V2UserPermissionsResponse",
      "type": "object",
      "properties": {
        "canCreateAccount": {
          "example": true,
          "type": "boolean"
        }
      }
    },
    "V2UserRequest": {
      "title": "V2UserRequest",
      "type": "object",
      "properties": {
        "title": {
          "example": "Mr.",
          "type": "string",
          "maxLength": 255
        },
        "firstName": {
          "example": "John",
          "type": "string",
          "maxLength": 255
        },
        "lastName": {
          "example": "Smith",
          "type": "string",
          "maxLength": 255
        },
        "phone": {
          "example": "+123 456 7890",
          "type": "string",
          "maxLength": 255
        },
        "defaultAccountUid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "locale": {
          "example": "en-GB",
          "type": "string",
          "maxLength": 16
        },
        "timezone": {
          "example": "Europe/London",
          "type": "string"
        }
      }
    },
    "V2AccountsRequest1": {
      "title": "V2AccountsRequest1",
      "type": "object",
      "properties": {
        "name": {
          "example": "Account name",
          "type": "string",
          "maxLength": 255
        },
        "indexing": {
          "example": true,
          "type": "boolean"
        },
        "language": {
          "description": "OCR language",
          "example": "eng",
          "type": "string"
        },
        "applyLanguageRecursive": {
          "description": "Apply account language to all child items",
          "type": "boolean"
        },
        "applyLanguageFiles": {
          "description": "Apply account language to all files",
          "type": "boolean"
        },
        "applyLanguageFolders": {
          "description": "Apply account language to all folders",
          "type": "boolean"
        }
      }
    },
    "V2AccountsFilesRelatedRequest1": {
      "title": "V2AccountsFilesRelatedRequest1",
      "type": "object",
      "properties": {
        "entityUid": {
          "example": "Abc_123-XY",
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      },
      "required": [
        "entityUid"
      ]
    },
    "V2AccountsMetaRequest1": {
      "title": "V2AccountsMetaRequest1",
      "type": "object",
      "properties": {
        "name": {
          "example": "meta name",
          "type": "string",
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "maxLength": 255
        },
        "multiple": {
          "example": false,
          "type": "boolean"
        }
      }
    },
    "V2AccountsTagsRequest1": {
      "title": "V2AccountsTagsRequest1",
      "type": "object",
      "properties": {
        "name": {
          "example": "myTag",
          "type": "string",
          "maxLength": 255
        },
        "parentUid": {
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        }
      }
    },
    "V2AccountsSharesRequest1": {
      "title": "V2AccountsSharesRequest1",
      "type": "object",
      "properties": {
        "role": {
          "$ref": "#/definitions/shareRole"
        },
        "status": {
          "$ref": "#/definitions/Status21"
        },
        "expiration": {
          "description": "UTC timestamp",
          "example": 1537177837,
          "type": "integer",
          "format": "int32"
        },
        "settings": {
          "$ref": "#/definitions/Sharesettings"
        }
      }
    },
    "Versionadded": {
      "title": "Versionadded",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileVersionNew"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Versionremoved": {
      "title": "Versionremoved",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileVersionDelete"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    },
    "Versionrestored": {
      "title": "Versionrestored",
      "type": "object",
      "properties": {
        "id": {
          "example": 1,
          "readOnly": true,
          "type": "integer",
          "minimum": 1.0,
          "format": "int32"
        },
        "uid": {
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "user": {
          "$ref": "#/definitions/Otheruser"
        },
        "activeUser": {
          "$ref": "#/definitions/Otheruser1"
        },
        "ip": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "file"
        },
        "event": {
          "type": "string",
          "default": "fileVersionRestore"
        },
        "entityUid": {
          "description": "File UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "accountUid": {
          "description": "Account UID",
          "example": "Abc_123-XY",
          "readOnly": true,
          "type": "string",
          "minLength": 10,
          "maxLength": 10,
          "pattern": "^[a-zA-Z0-9_-]+$"
        },
        "time": {
          "example": 1537177837,
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "requestKey": {
          "readOnly": true,
          "type": "string",
          "maxLength": 4
        },
        "cause": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/Cause"
            },
            {
              "description": "Used for marking actions performed by background processes",
              "readOnly": true
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/Data2"
        }
      },
      "required": [
        "id",
        "uid",
        "endpoint",
        "user",
        "ip",
        "type",
        "event",
        "entityUid",
        "accountUid",
        "time",
        "data"
      ]
    }
  },
  "security": [
    {
      "openIdConnect": []
    },
    {
      "OAuth_authorization_code": []
    },
    {
      "OAuth_client_credentials": []
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User-related operations"
    },
    {
      "name": "Account",
      "description": "Account-related operations"
    },
    {
      "name": "Entity",
      "description": "Entity-related operations"
    },
    {
      "name": "Folder",
      "description": "Folder-related operations"
    },
    {
      "name": "File",
      "description": "File-related operators"
    },
    {
      "name": "Meta",
      "description": "Meta-related operations"
    },
    {
      "name": "Tag",
      "description": "Tag-related operations"
    },
    {
      "name": "Person",
      "description": "Person-related operations"
    },
    {
      "name": "Reminder",
      "description": "Reminder-related operations"
    },
    {
      "name": "Resolution",
      "description": "Resolution-related operations"
    },
    {
      "name": "Workflow",
      "description": "Workflow-related operations"
    },
    {
      "name": "Share",
      "description": "Share-related operations"
    },
    {
      "name": "Group",
      "description": "Group-related operations"
    },
    {
      "name": "Plan",
      "description": "Plan-related operations"
    },
    {
      "name": "Search",
      "description": "Search-related operations"
    },
    {
      "name": "Audit",
      "description": "Audit-related operations"
    },
    {
      "name": "Permission",
      "description": "Permission-related operations"
    }
  ]
}